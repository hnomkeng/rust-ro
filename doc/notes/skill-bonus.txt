mspd_percentage_per_level: Option<Vec<i32>>,        => SpeedPercentage
mastery_atk_per_level: Option<Vec<i32>>,            => DamageUsingWeaponType(WeaponType,)
aspd_percentage_per_level: Option<Vec<f32>>,        => AspdPercentage
success_percentage_per_level: Option<Vec<i32>>,     => SkilIdSuccessPercentage(SkillId,)
atk_percentage_per_level: Option<Vec<i32>>,         => AtkPercentage
stun_chance_per_level: Option<Vec<i32>>,            => ChanceToInflictStatusOnAttackPercentage
trap_hp_per_level: Option<Vec<i32>>,                -> not bonus, unit hp
aoeact_per_level: Option<Vec<String>>,              -> not bonus
accuracy_percentage_per_level: Option<Vec<i32>>,    => AccuracyPercentage
dmg_waves_per_level: Option<Vec<i32>>,              -> not bonus
dmg_lv_per_level: Option<Vec<i32>>,                 -> not bonus
aoesize_per_level: Option<Vec<String>>,             -> not bonus
craft_per_level: Option<Vec<i32>>,                  -> not bonus
str_per_level: Option<Vec<i32>>                     => Str
flee_per_level: Option<Vec<i32>>,                   => Flee
freeze_chance_per_level: Option<Vec<i32>>,          => ChanceToInflictStatusOnAttackPercentage
poison_chance_per_level: Option<Vec<i32>>,          => ChanceToInflictStatusOnAttackPercentage
atk_per_level: Option<Vec<i32>>,                    => Atk
autospell_chance_per_level: Option<Vec<f32>>,       => AutospellSkillIdChancePercentage
divest_chance_per_level: Option<Vec<i32>>,          => SkilIdSuccessPercentage(SkillId,)
crit_chance_per_level: Option<Vec<f32>>,            => Crit
def_percentage_per_level: Option<Vec<i32>>,         => Def
agi_per_level: Option<Vec<i32>>,                    => Agi
bleed_chance_per_level: Option<Vec<i32>>,           => ChanceToInflictStatusOnAttackPercentage
dmg_per_level: Option<Vec<f32>>,                    -> not bonus
endow_chance_per_level: Option<Vec<i32>>,           => SkilIdSuccessPercentage(SkillId,)
sp_loss_per_second: Option<f32>,                    => SpLossEveryMs
exp_percentage_per_level: Option<Vec<i32>>,         -> ignore for now
autospell_chance: Option<i32>,                      => AutospellSkillIdChancePercentage
skill_delay_in_sec_per_level: Option<Vec<f32>>,     -> not a bonus
sp_regen_bonus_flat_per_level: Option<Vec<i32>>,    => SpRegenEveryMs(,10_000ms)
sp_regen_bonus_percentage_per_level: Option<Vec<f32>>, => SpRecoveryMaxSpPercentage
nullifys_per_level: Option<Vec<i32>>,               => NullifyAttackChancePercentage(100%), TemporaryStatusBonus counter
dex_per_level: Option<Vec<i32>>,                    => Dex
int_per_level: Option<Vec<i32>>,                    => Int
blind_chance_per_level: Option<Vec<i32>>,           => ChanceToInflictStatusOnAttackPercentage
blind_chance: Option<i32>,                          => ChanceToInflictStatusOnAttackPercentage
recovery_percentage_per_level: Option<Vec<i32>>,    => HpRegenFromItemPercentage + SpRegenFromItemPercentage
hp_percentage_per_level: Option<Vec<i32>>,          => MaxhpPercentage
healsp_percentage_per_level: Option<Vec<f32>>,
sp_percentage_per_level: Option<Vec<i32>>,          => MaxspPercentage
sp_wave_per_level: Option<Vec<i32>>,                => SpDrainPerHit with negative value
hp_regen_bonus_flat_per_level: Option<Vec<i32>>,    => HpRegenEveryMs(,10_000ms)
hp_regen_bonus_percentage_per_level: Option<Vec<f32>>, => HpRecoveryMaxSpPercentage
dmg_outer_per_level: Option<Vec<f32>>,              -> not a bonus
healbase_per_level: Option<Vec<f32>>,               -> not a bonus, skill formula
buy_price_percentage_per_level: Option<Vec<i32>>,
double_attack_chance_per_level: Option<Vec<i32>>,   => AutospellSkillIdChancePercentage
steal_chance_per_level: Option<Vec<i32>>,           => AutospellSkillIdChancePercentage
healhp_percentage_per_level: Option<Vec<i32>>,
healhp_per_level: Option<Vec<f32>>,
luk_per_level: Option<Vec<i32>>,                    => Luk
atk: Option<i32>,                                   => Atk
str: Option<i32>,                                   => Str
breakself_percentage_per_level: Option<Vec<f32>>,   => BreakSelfWeaponPercentage
snare_duration_per_level: Option<Vec<i32>>,         -> not a bonus by itself, should be a value of TemporaryStatusBonus
dmg_s_p_percentage_per_level: Option<Vec<i32>>,     -> not a bonus, remove a percentage of target sp
sdef_percentage: Option<i32>,                       => VitDefPercentage
max_lv_per_level: Option<Vec<i32>>,                 -> not a bonus, use for hocus pocus/plagiarism, to know level of skill to cast/copy
break_chance_per_level: Option<Vec<i32>>,           => BreakWeaponPercentage
plant_hp_per_level: Option<Vec<i32>>,               -> not a bonus
plant_type_per_level: Option<Vec<String>>,          -> not a bonus
block_chance_per_level: Option<Vec<i32>>,           => PhysicalAttackBlockChancePercentage
reflect_chance_per_level: Option<Vec<i32>>,         => PhysicalAttackReflectChancePercentage
performancemspd_percentage_per_level: Option<Vec<i32>>, => SpeedPercentage, negative
heal_per_level: Option<Vec<i32>>,
heal_percentage_per_level: Option<Vec<i32>>,
matk_percentage_per_level: Option<Vec<i32>>,        => MatkPercentage
mspd_percentage: Option<i32>,                       => SpeedPercentage
flee: Option<i32>,                                  => Flee
stun_duration_per_level: Option<Vec<i32>>,          -> BreakWeaponPercentage
sp_regen_bonus_flat: Option<i32>,                   => SpRegenEveryMs(,10_000ms)
refine_per_level: Option<Vec<i32>>,                 -> not a bonus,
aspd_percentage: Option<i32>,                       => AspdPercentage
hit: Option<i32>,                                   => Hit
hp_recovery_percentage_per_level: Option<Vec<i32>>, => HpRegenFromItemPercentage
provoke_chance_per_level: Option<Vec<i32>>,         => SkilIdSuccessPercentage
mdef_per_level: Option<Vec<i32>>,                   => Mdef
sp_recovery_percentage_per_level: Option<Vec<i32>>, => SpRegenFromItemPercentage
dmg_decay_per_level: Option<Vec<f32>>,
petrify_chance_per_level: Option<Vec<i32>>,         => ChanceToInflictStatusOnAttackPercentage
memos_per_level: Option<Vec<i32>>,                  -> not a bonus by iteself
decrease_agi_chance_per_level: Option<Vec<i32>>,    => SkilIdSuccessPercentage
chance_percentage_per_level: Option<Vec<i32>>,      => SkilIdSuccessPercentage
sdef_percentage_per_level: Option<Vec<i32>>,        => VitDefPercentage
weight_limit_per_level: Option<Vec<i32>>,
sale_price_percentage_per_level: Option<Vec<i32>>,
items_per_level: Option<Vec<i32>>,                  -> not a bonus, number of vending items
agi_percentage_per_level: Option<Vec<i32>>,         => Agi
dex_percentage_per_level: Option<Vec<i32>>,         => Dex
katar_offhand_dmg_percentage_per_level: Option<Vec<i32>>,
mspdassassin_percentage_per_level: Option<Vec<i32>>,   => SpeedPercentage but conditional of job
recursion_per_level: Option<Vec<i32>>,                  -> bowling bash
barrier_attacks_per_level: Option<Vec<i32>>,            => PhysicalAttackBlockChancePercentage + TemporaryStatusBonus expire after hp absorbed
silence_chance_per_level: Option<Vec<i32>>,            => ChanceToInflictStatusOnAttackPercentage
ohko_chance_per_level: Option<Vec<i32>>,               => SkilIdSuccessPercentage
wall_hp_per_level: Option<Vec<i32>>,
forge_atk_per_level: Option<Vec<i32>>,                  => Atk
fire_resist_percentage_per_level: Option<Vec<i32>>,     => ResistanceDamageFromElementPercentage
neutral_resist_percentage_per_level: Option<Vec<i32>>,  => ResistanceDamageFromElementPercentage
aspdparty_percentage_per_level: Option<Vec<i32>>,       => AspdPercentage - BonusesToParty
aspdsmith_percentage_per_level: Option<Vec<i32>>,       => AspdPercentage
atkparty_percentage_per_level: Option<Vec<i32>>,        => AtkPercentage - BonusesToParty
atksmith_percentage_per_level: Option<Vec<i32>>,        => AtkPercentage
sleep_chance_per_level: Option<Vec<i32>>,              => ChanceToInflictStatusOnAttackPercentage
blind_duration_per_level: Option<Vec<i32>>,             -> not a bonus by itself, should be a value of TemporaryStatusBonus
freeze_duration_per_level: Option<Vec<i32>>,           -> not a bonus by itself, should be a value of TemporaryStatusBonus
falcon_atk_per_level: Option<Vec<i32>>,
mspdwall_percentage_per_level: Option<Vec<i32>>,
autospell_limit_per_level: Option<Vec<i32>>,            -> not a bonus by itself, poison react support skill stop when autospell envenom counter is reached
healhp: Option<i32>,
hpmax_vit_per_level: Option<Vec<i32>>,
atk_percentage: Option<i32>,                            => AtkPercentage
dmg: Option<i32>,                                      -> dmg formula
stun_chance: Option<i32>,                               => ChanceToInflictStatusOnAttackPercentage
dmg_bow_per_level: Option<Vec<f32>>,                    -> not a bouns by itself, dmg formula is different when using a bow
snatch_chance_per_level: Option<Vec<i32>>,              => ChanceToInflictStatusOnAttackPercentage
plant_quantity_per_level: Option<Vec<i32>>,             -> not a bonus
plant_move_per_level: Option<Vec<i32>>,                 -> not a bonus
holy_resist_percentage_per_level: Option<Vec<i32>>,     => ResistanceDamageFromElementPercentage
delayparty_in_sec_per_level: Option<Vec<f32>>,          -> not a bonus, delay after block attack with Guard
delayuser_in_sec_per_level: Option<Vec<f32>>,           -> not a bonus, delay after block attack with Guard
players_per_level: Option<Vec<i32>>,                    -> not a bonus, number of player that can be protected with sacrifice
demon_resist_chance_per_level: Option<Vec<i32>>,        => ResistanceDamageFromElementPercentage
holy_resist_chance_per_level: Option<Vec<i32>>,         => ResistanceDamageFromElementPercentage
max_spheres_per_level: Option<Vec<i32>>,            -> not a bonus
spheres_per_level: Option<Vec<i32>>,                -> not a bonus
disable_duration_per_level: Option<Vec<i32>>,       -> not a bonus, TemporaryStatusBonus
sp_loss_percentage_per_level: Option<Vec<i32>>,
atk_matk_vs_dragon_percentage_per_level: Option<Vec<i32>>,  => PhysicalDamageAgainstRacePercentage + MagicalDamageAgainstRacePercentage
dragon_resist_percentage_per_level: Option<Vec<i32>>,   => ResistanceDamageFromRacePercentage
dmg_fire_percentage_per_level: Option<Vec<i32>>,  => DamageUsingElementPercentage
dmg_water_percentage_per_level: Option<Vec<i32>>, => DamageUsingElementPercentage
dmg_wind_percentage_per_level: Option<Vec<i32>>,  => DamageUsingElementPercentage
dispel_chance_per_level: Option<Vec<i32>>,          => SkilIdSuccessPercentage
def_per_level: Option<Vec<i32>>,                    => Def
status_resist_percentage_per_level: Option<Vec<i32>>,   => ResistanceToStatusPercentage(All)
freezeenemy_chance_per_level: Option<Vec<i32>>,     => ChanceToInflictStatusOnAttackPercentage
freezeparty_chance_per_level: Option<Vec<i32>>,     => ChanceToInflictStatusToPartyOnAttackPercentage
dmg_s_p_per_level: Option<Vec<i32>>,
stunenemy_chance_per_level: Option<Vec<i32>>,       => ChanceToInflictStatusOnAttackPercentage
stunparty_chance_per_level: Option<Vec<i32>>,       => ChanceToInflictStatusToPartyOnAttackPercentage
sp_regen_percentage_per_level: Option<Vec<i32>>,
hp_loss_percentage_per_level: Option<Vec<i32>>,
gospel_chance_per_level: Option<Vec<i32>>,           => SkilIdSuccessPercentage
hp_loss_per_level: Option<Vec<i32>>,
delay_per_level: Option<Vec<f32>>,                  -> not a bonus
dmg_h_p_per_level: Option<Vec<i32>>,
dmg_s_p_chance_per_level: Option<Vec<i32>>,
deadly_poison_chance_per_level: Option<Vec<f32>>,      => SkilIdSuccessPercentage
dmg_int_per_level: Option<Vec<i32>>,
all_stats_per_level: Option<Vec<i32>>,                  => AllStats
breakarmor_percentage_per_level: Option<Vec<f32>>,      => BreakArmorPercentage
breakweapon_percentage_per_level: Option<Vec<f32>>,     => BreakWeaponPercentage
status_chance_per_level: Option<Vec<i32>>,              => ChanceToInflictStatusOnAttackPercentage(VitalStrike)
curse_chance_per_level: Option<Vec<i32>>,               => ChanceToInflictStatusOnAttackPercentage
mind_break_chance_per_level: Option<Vec<i32>>,          => SkilIdSuccessPercentage
smdef_percentage_per_level: Option<Vec<i32>>,
skill_failure_chance: Option<i32>,                      -> enemy skill failure chance
snare_duration: Option<i32>,                            -> Duration(Effect, val)
success_chance: Option<i32>,                            => SkilIdSuccessPercentage
block_chance: Option<i32>,                              => PhysicalAttackBlockChancePercentage
sp_regen_bonus_ratio: Option<f32>,
sp_regen_bonus_percentage: Option<f32>,
distance_per_level: Option<Vec<i32>>,                   -> not a bonus, highjump distance
map_per_level: Option<Vec<String>>,                     -> not a bonus, sg feel
sdef_per_level: Option<Vec<i32>>,                       => VitDefPercentage
vision_percentage_per_level: Option<Vec<i32>>,          => VisionDistance
weight_percentage_limit_percentage_per_level: Option<Vec<i32>>,
aspdparty_percentage: Option<i32>,                          => AspdPercentage - BonusesToParty
aspdsmith_percentage: Option<i32>,                          => AspdPercentage - BonusesToTarget
sp_loss_per_level: Option<Vec<i32>>,
nullify_chance_per_level: Option<Vec<i32>>,                 => NullifyAttackChancePercentage(100%)
reflect_per_level: Option<Vec<i32>>,                        => MagicAttackReflectChancePercentage(100%) TemporaryStatusBonus (count)
sp_per_level: Option<Vec<i32>>,                            => Maxsp
max_refine_per_level: Option<Vec<i32>>,                     -> not a bonus
dispel_chance: Option<i32>,                                 => SkilIdSuccessPercentage
tarot_chance_per_level: Option<Vec<i32>>,                   => SkilIdSuccessPercentage
summon_chance_per_level: Option<Vec<i32>>,                  => SkilIdSuccessPercentage
success_chance_per_level: Option<Vec<i32>>,                 => SkilIdSuccessPercentage
def: Option<i32>,                                           => Def
comabrute_percentage: Option<f32>,                          => ChanceToInflictStatusComaOnAttackOnRacePercentage
comademi_human_percentage: Option<f32>,                     => ChanceToInflictStatusComaOnAttackOnRacePercentage
dmg_brute: Option<i32>,                                     => PhysicalDamageAgainstRacePercentage
dmg_demihuman: Option<i32>,                                 => PhysicalDamageAgainstRacePercentage
agi: Option<i32>,                                           => Agi
dex: Option<i32>,                                           => Dex
dmg_pistol_per_level: Option<Vec<f32>>,                     -> not a bouns by itself, dmg formula is different when using a pistol
blindself_chance_per_level: Option<Vec<i32>>,               => ChanceToInflictStatusToSelfOnAttackPercentage
dmg_range_per_level: Option<Vec<(f32, f32)>>,               -> not a bonus, part of formula
