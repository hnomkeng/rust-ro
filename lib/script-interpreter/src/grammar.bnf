
<root_expression> ::= <statement_list>;
<statement_list> ::= <statement> | <statement_list> <statement> ;
<statement> ::= <compound_statement> | <expression_statement>;
<compound_statement> ::= "LeftBracket" <statement_list> "RightBracket";
<expression_statement> ::= <any_expression> | "SemiColon";
<primary_expression> ::= "Identifier" | "Number" | "String" | "LeftParen" <any_expression> "RightParen" ;
<postfix_expression> ::= <primary_expression> | <postfix_expression> "LeftBracket" <any_expression> "RightBracket" | <postfix_expression> "LeftParen" "RightParen" | <postfix_expression> "Dot" "Identifier" | <postfix_expression> "IncrementOp"| <postfix_expression> "DecrementOp";
<assignment_expression_todo> ::= <conditional_expression>| <unary_expression> <assignment_operator> <assignment_expression>  | <unary_expression> ;
<assignment_expression> ::= <unary_expression> <assignment_operator> <assignment_expression> | <unary_expression>;
<logical_or_expression> ::= <logical_and_expression> | <logical_or_expression> "OrOp" <logical_and_expression> ;
<logical_and_expression> ::= "Equal" ;
<conditional_expression> ::= <logical_or_expression> "QuestionMark" <any_expression> "Colon" <conditional_expression> | <logical_or_expression>;

<assignment_operator> ::= "Equal" ;
<unary_expression> ::= <postfix_expression> | "IncrementOp" <unary_expression> | "DecrementOp" <unary_expression>;

<any_expression> ::= <assignment_expression> ;

<declaration> ::= <declaration_specifiers> "SemiColon";
<declaration_specifiers> ::= <variable> "Equal" <assignment_expression> | <variable>;
<variable> ::= <scope_specifier> "Identifier" | <scope_specifier> "Identifier" "Dollar";
<scope_specifier> ::=  "At" | "Dollar" | "DollarAt" | "Dot" | "DotAt" | "Quote" | "Sharp" | "DoubleSharp";
<variable_name> ::= "Identifier" | "Identifier" "Dollar";