// Generated by tools/packets_db/main.rs
// Auto generated file do not edit manually

use std::fmt::{Formatter, Debug};

pub trait PacketId {
  fn id(&self) -> &str;
}

pub struct PacketCaLogin {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd: String,
    pub client_type: char,
}

impl PacketId for PacketCaLogin {
    fn id(&self) -> &str {
       "0x6400"
    }
}

impl Debug for PacketCaLogin {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLogin")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd[30, 54]", &self.passwd)
            .field("client_type[54, 55]", &self.client_type)
        .finish()
    }
}

pub struct PacketChEnter {
    pub packet_id: u16,
    pub aid: u32,
    pub auth_code: u32,
    pub user_level: u32,
    pub client_type: u16,
    pub sex: char,
}

impl PacketId for PacketChEnter {
    fn id(&self) -> &str {
       "0x6500"
    }
}

impl Debug for PacketChEnter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChEnter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("auth_code[6, 10]", &self.auth_code)
            .field("user_level[10, 14]", &self.user_level)
            .field("client_type[14, 16]", &self.client_type)
            .field("sex[16, 17]", &self.sex)
        .finish()
    }
}

pub struct PacketChSelectChar {
    pub packet_id: u16,
    pub char_num: char,
}

impl PacketId for PacketChSelectChar {
    fn id(&self) -> &str {
       "0x6600"
    }
}

impl Debug for PacketChSelectChar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChSelectChar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_num[2, 3]", &self.char_num)
        .finish()
    }
}

pub struct PacketChMakeChar {
    pub packet_id: u16,
    pub name: String,
    pub str: char,
    pub agi: char,
    pub vit: char,
    pub int: char,
    pub dex: char,
    pub luk: char,
    pub char_num: char,
    pub head_pal: u16,
    pub head: u16,
}

impl PacketId for PacketChMakeChar {
    fn id(&self) -> &str {
       "0x6700"
    }
}

impl Debug for PacketChMakeChar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChMakeChar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("str[26, 27]", &self.str)
            .field("agi[27, 28]", &self.agi)
            .field("vit[28, 29]", &self.vit)
            .field("int[29, 30]", &self.int)
            .field("dex[30, 31]", &self.dex)
            .field("luk[31, 32]", &self.luk)
            .field("char_num[32, 33]", &self.char_num)
            .field("head_pal[33, 35]", &self.head_pal)
            .field("head[35, 37]", &self.head)
        .finish()
    }
}

pub struct PacketChDeleteChar {
    pub packet_id: u16,
    pub gid: u32,
    pub key: String,
}

impl PacketId for PacketChDeleteChar {
    fn id(&self) -> &str {
       "0x6800"
    }
}

impl Debug for PacketChDeleteChar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChDeleteChar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("key[6, 46]", &self.key)
        .finish()
    }
}

pub struct PacketAcAcceptLogin {
    pub packet_id: u16,
    pub packet_length: u16,
    pub auth_code: u32,
    pub aid: u32,
    pub user_level: u32,
    pub last_login_ip: u32,
    pub last_login_time: String,
    pub sex: char,
    pub server_list: Vec<ServerAddr>,
}

impl PacketId for PacketAcAcceptLogin {
    fn id(&self) -> &str {
       "0x6900"
    }
}

impl Debug for PacketAcAcceptLogin {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAcceptLogin")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("auth_code[4, 8]", &self.auth_code)
            .field("aid[8, 12]", &self.aid)
            .field("user_level[12, 16]", &self.user_level)
            .field("last_login_ip[16, 20]", &self.last_login_ip)
            .field("last_login_time[20, 46]", &self.last_login_time)
            .field("sex[46, 47]", &self.sex)
            .field("server_list[47, 79]", &self.server_list)
        .finish()
    }
}

pub struct PacketAcRefuseLogin {
    pub packet_id: u16,
    pub error_code: char,
    pub block_date: String,
}

impl PacketId for PacketAcRefuseLogin {
    fn id(&self) -> &str {
       "0x6a00"
    }
}

impl Debug for PacketAcRefuseLogin {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcRefuseLogin")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
            .field("block_date[3, 23]", &self.block_date)
        .finish()
    }
}

pub struct PacketHcAcceptEnterNeoUnion {
    pub packet_id: u16,
    pub packet_length: u16,
    pub total_slot_num: char,
    pub premium_start_slot: char,
    pub premium_end_slot: char,
    pub dummy1_beginbilling: char,
    pub code: u32,
    pub time1: u32,
    pub time2: u32,
    pub dummy2_endbilling: String,
    pub char_info: Vec<CharacterInfoNeoUnion>,
}

impl PacketId for PacketHcAcceptEnterNeoUnion {
    fn id(&self) -> &str {
       "0x6b00"
    }
}

impl Debug for PacketHcAcceptEnterNeoUnion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcAcceptEnterNeoUnion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("total_slot_num[4, 5]", &self.total_slot_num)
            .field("premium_start_slot[5, 6]", &self.premium_start_slot)
            .field("premium_end_slot[6, 7]", &self.premium_end_slot)
            .field("dummy1_beginbilling[7, 8]", &self.dummy1_beginbilling)
            .field("code[8, 12]", &self.code)
            .field("time1[12, 16]", &self.time1)
            .field("time2[16, 20]", &self.time2)
            .field("dummy2_endbilling[20, 27]", &self.dummy2_endbilling)
            .field("char_info[27, 171]", &self.char_info)
        .finish()
    }
}

pub struct PacketHcRefuseEnter {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketHcRefuseEnter {
    fn id(&self) -> &str {
       "0x6c00"
    }
}

impl Debug for PacketHcRefuseEnter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcRefuseEnter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketHcAcceptMakecharNeoUnion {
    pub packet_id: u16,
    pub charinfo: CharacterInfoNeoUnion,
}

impl PacketId for PacketHcAcceptMakecharNeoUnion {
    fn id(&self) -> &str {
       "0x6d00"
    }
}

impl Debug for PacketHcAcceptMakecharNeoUnion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcAcceptMakecharNeoUnion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("charinfo[2, ?]", &self.charinfo)
        .finish()
    }
}

pub struct PacketHcRefuseMakechar {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketHcRefuseMakechar {
    fn id(&self) -> &str {
       "0x6e00"
    }
}

impl Debug for PacketHcRefuseMakechar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcRefuseMakechar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketHcAcceptDeletechar {
    pub packet_id: u16,
}

impl PacketId for PacketHcAcceptDeletechar {
    fn id(&self) -> &str {
       "0x6f00"
    }
}

impl Debug for PacketHcAcceptDeletechar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcAcceptDeletechar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketHcRefuseDeletechar {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketHcRefuseDeletechar {
    fn id(&self) -> &str {
       "0x7000"
    }
}

impl Debug for PacketHcRefuseDeletechar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcRefuseDeletechar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketHcNotifyZonesvr {
    pub packet_id: u16,
    pub gid: u32,
    pub map_name: String,
    pub addr: ZserverAddr,
}

impl PacketId for PacketHcNotifyZonesvr {
    fn id(&self) -> &str {
       "0x7100"
    }
}

impl Debug for PacketHcNotifyZonesvr {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcNotifyZonesvr")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("map_name[6, 22]", &self.map_name)
            .field("addr[22, ?]", &self.addr)
        .finish()
    }
}

pub struct PacketCzEnter {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub auth_code: u32,
    pub client_time: u32,
    pub sex: char,
}

impl PacketId for PacketCzEnter {
    fn id(&self) -> &str {
       "0x7200"
    }
}

impl Debug for PacketCzEnter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEnter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("auth_code[10, 14]", &self.auth_code)
            .field("client_time[14, 18]", &self.client_time)
            .field("sex[18, 19]", &self.sex)
        .finish()
    }
}

pub struct PacketZcAcceptEnter {
    pub packet_id: u16,
    pub start_time: u32,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
}

impl PacketId for PacketZcAcceptEnter {
    fn id(&self) -> &str {
       "0x7300"
    }
}

impl Debug for PacketZcAcceptEnter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAcceptEnter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("start_time[2, 6]", &self.start_time)
            .field("pos_dir[6, 9]", &self.pos_dir)
            .field("x_size[9, 10]", &self.x_size)
            .field("y_size[10, 11]", &self.y_size)
        .finish()
    }
}

pub struct PacketZcRefuseEnter {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketZcRefuseEnter {
    fn id(&self) -> &str {
       "0x7400"
    }
}

impl Debug for PacketZcRefuseEnter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRefuseEnter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketZcNotifyInitchar {
    pub packet_id: u16,
    pub packet_length: u16,
    pub gid: u32,
    pub style: u16,
    pub item: char,
}

impl PacketId for PacketZcNotifyInitchar {
    fn id(&self) -> &str {
       "0x7500"
    }
}

impl Debug for PacketZcNotifyInitchar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyInitchar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("gid[4, 8]", &self.gid)
            .field("style[8, 10]", &self.style)
            .field("item[10, 11]", &self.item)
        .finish()
    }
}

pub struct PacketZcNotifyUpdatechar {
    pub packet_id: u16,
    pub gid: u32,
    pub style: u16,
    pub item: char,
}

impl PacketId for PacketZcNotifyUpdatechar {
    fn id(&self) -> &str {
       "0x7600"
    }
}

impl Debug for PacketZcNotifyUpdatechar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyUpdatechar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("style[6, 8]", &self.style)
            .field("item[8, 9]", &self.item)
        .finish()
    }
}

pub struct PacketZcNotifyUpdateplayer {
    pub packet_id: u16,
    pub style: u16,
    pub item: char,
}

impl PacketId for PacketZcNotifyUpdateplayer {
    fn id(&self) -> &str {
       "0x7700"
    }
}

impl Debug for PacketZcNotifyUpdateplayer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyUpdateplayer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("style[2, 4]", &self.style)
            .field("item[4, 5]", &self.item)
        .finish()
    }
}

pub struct PacketZcNotifyStandentry {
    pub packet_id: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u16,
    pub accessory: u16,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub state: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyStandentry {
    fn id(&self) -> &str {
       "0x7800"
    }
}

impl Debug for PacketZcNotifyStandentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("objecttype[2, 3]", &self.objecttype)
            .field("gid[3, 7]", &self.gid)
            .field("speed[7, 9]", &self.speed)
            .field("body_state[9, 11]", &self.body_state)
            .field("health_state[11, 13]", &self.health_state)
            .field("effect_state[13, 15]", &self.effect_state)
            .field("job[15, 17]", &self.job)
            .field("head[17, 19]", &self.head)
            .field("weapon[19, 21]", &self.weapon)
            .field("accessory[21, 23]", &self.accessory)
            .field("shield[23, 25]", &self.shield)
            .field("accessory2[25, 27]", &self.accessory2)
            .field("accessory3[27, 29]", &self.accessory3)
            .field("headpalette[29, 31]", &self.headpalette)
            .field("bodypalette[31, 33]", &self.bodypalette)
            .field("head_dir[33, 35]", &self.head_dir)
            .field("guid[35, 39]", &self.guid)
            .field("gemblem_ver[39, 41]", &self.gemblem_ver)
            .field("honor[41, 43]", &self.honor)
            .field("virtue[43, 45]", &self.virtue)
            .field("is_pkmode_on[45, 46]", &self.is_pkmode_on)
            .field("sex[46, 47]", &self.sex)
            .field("pos_dir[47, 50]", &self.pos_dir)
            .field("x_size[50, 51]", &self.x_size)
            .field("y_size[51, 52]", &self.y_size)
            .field("state[52, 53]", &self.state)
            .field("clevel[53, 55]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyNewentry {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u16,
    pub accessory: u16,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyNewentry {
    fn id(&self) -> &str {
       "0x7900"
    }
}

impl Debug for PacketZcNotifyNewentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyNewentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 20]", &self.weapon)
            .field("accessory[20, 22]", &self.accessory)
            .field("shield[22, 24]", &self.shield)
            .field("accessory2[24, 26]", &self.accessory2)
            .field("accessory3[26, 28]", &self.accessory3)
            .field("headpalette[28, 30]", &self.headpalette)
            .field("bodypalette[30, 32]", &self.bodypalette)
            .field("head_dir[32, 34]", &self.head_dir)
            .field("guid[34, 38]", &self.guid)
            .field("gemblem_ver[38, 40]", &self.gemblem_ver)
            .field("honor[40, 42]", &self.honor)
            .field("virtue[42, 44]", &self.virtue)
            .field("is_pkmode_on[44, 45]", &self.is_pkmode_on)
            .field("sex[45, 46]", &self.sex)
            .field("pos_dir[46, 49]", &self.pos_dir)
            .field("x_size[49, 50]", &self.x_size)
            .field("y_size[50, 51]", &self.y_size)
            .field("clevel[51, 53]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyActentry {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u16,
    pub accessory: u16,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub action: char,
    pub act_start_time: u32,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyActentry {
    fn id(&self) -> &str {
       "0x7a00"
    }
}

impl Debug for PacketZcNotifyActentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyActentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 20]", &self.weapon)
            .field("accessory[20, 22]", &self.accessory)
            .field("shield[22, 24]", &self.shield)
            .field("accessory2[24, 26]", &self.accessory2)
            .field("accessory3[26, 28]", &self.accessory3)
            .field("headpalette[28, 30]", &self.headpalette)
            .field("bodypalette[30, 32]", &self.bodypalette)
            .field("head_dir[32, 34]", &self.head_dir)
            .field("guid[34, 38]", &self.guid)
            .field("gemblem_ver[38, 40]", &self.gemblem_ver)
            .field("honor[40, 42]", &self.honor)
            .field("virtue[42, 44]", &self.virtue)
            .field("is_pkmode_on[44, 45]", &self.is_pkmode_on)
            .field("sex[45, 46]", &self.sex)
            .field("pos_dir[46, 49]", &self.pos_dir)
            .field("x_size[49, 50]", &self.x_size)
            .field("y_size[50, 51]", &self.y_size)
            .field("action[51, 52]", &self.action)
            .field("act_start_time[52, 56]", &self.act_start_time)
            .field("clevel[56, 58]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyMoveentry {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u16,
    pub accessory: u16,
    pub move_start_time: u32,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub move_data: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyMoveentry {
    fn id(&self) -> &str {
       "0x7b00"
    }
}

impl Debug for PacketZcNotifyMoveentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMoveentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 20]", &self.weapon)
            .field("accessory[20, 22]", &self.accessory)
            .field("move_start_time[22, 26]", &self.move_start_time)
            .field("shield[26, 28]", &self.shield)
            .field("accessory2[28, 30]", &self.accessory2)
            .field("accessory3[30, 32]", &self.accessory3)
            .field("headpalette[32, 34]", &self.headpalette)
            .field("bodypalette[34, 36]", &self.bodypalette)
            .field("head_dir[36, 38]", &self.head_dir)
            .field("guid[38, 42]", &self.guid)
            .field("gemblem_ver[42, 44]", &self.gemblem_ver)
            .field("honor[44, 46]", &self.honor)
            .field("virtue[46, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("move_data[50, 56]", &self.move_data)
            .field("x_size[56, 57]", &self.x_size)
            .field("y_size[57, 58]", &self.y_size)
            .field("clevel[58, 60]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyStandentryNpc {
    pub packet_id: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub head: u16,
    pub weapon: u16,
    pub accessory: u16,
    pub job: u16,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
}

impl PacketId for PacketZcNotifyStandentryNpc {
    fn id(&self) -> &str {
       "0x7c00"
    }
}

impl Debug for PacketZcNotifyStandentryNpc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentryNpc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("objecttype[2, 3]", &self.objecttype)
            .field("gid[3, 7]", &self.gid)
            .field("speed[7, 9]", &self.speed)
            .field("body_state[9, 11]", &self.body_state)
            .field("health_state[11, 13]", &self.health_state)
            .field("effect_state[13, 15]", &self.effect_state)
            .field("head[15, 17]", &self.head)
            .field("weapon[17, 19]", &self.weapon)
            .field("accessory[19, 21]", &self.accessory)
            .field("job[21, 23]", &self.job)
            .field("shield[23, 25]", &self.shield)
            .field("accessory2[25, 27]", &self.accessory2)
            .field("accessory3[27, 29]", &self.accessory3)
            .field("headpalette[29, 31]", &self.headpalette)
            .field("bodypalette[31, 33]", &self.bodypalette)
            .field("head_dir[33, 35]", &self.head_dir)
            .field("is_pkmode_on[35, 36]", &self.is_pkmode_on)
            .field("sex[36, 37]", &self.sex)
            .field("pos_dir[37, 40]", &self.pos_dir)
            .field("x_size[40, 41]", &self.x_size)
            .field("y_size[41, 42]", &self.y_size)
        .finish()
    }
}

pub struct PacketCzNotifyActorinit {
    pub packet_id: u16,
}

impl PacketId for PacketCzNotifyActorinit {
    fn id(&self) -> &str {
       "0x7d00"
    }
}

impl Debug for PacketCzNotifyActorinit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzNotifyActorinit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzRequestTime {
    pub packet_id: u16,
    pub client_time: u32,
}

impl PacketId for PacketCzRequestTime {
    fn id(&self) -> &str {
       "0x7e00"
    }
}

impl Debug for PacketCzRequestTime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestTime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("client_time[2, 6]", &self.client_time)
        .finish()
    }
}

pub struct PacketZcNotifyTime {
    pub packet_id: u16,
    pub time: u32,
}

impl PacketId for PacketZcNotifyTime {
    fn id(&self) -> &str {
       "0x7f00"
    }
}

impl Debug for PacketZcNotifyTime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyTime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("time[2, 6]", &self.time)
        .finish()
    }
}

pub struct PacketZcNotifyVanish {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
}

impl PacketId for PacketZcNotifyVanish {
    fn id(&self) -> &str {
       "0x8000"
    }
}

impl Debug for PacketZcNotifyVanish {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyVanish")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
        .finish()
    }
}

pub struct PacketScNotifyBan {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketScNotifyBan {
    fn id(&self) -> &str {
       "0x8100"
    }
}

impl Debug for PacketScNotifyBan {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketScNotifyBan")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketCzRequestQuit {
    pub packet_id: u16,
}

impl PacketId for PacketCzRequestQuit {
    fn id(&self) -> &str {
       "0x8200"
    }
}

impl Debug for PacketCzRequestQuit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestQuit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcAcceptQuit {
    pub packet_id: u16,
}

impl PacketId for PacketZcAcceptQuit {
    fn id(&self) -> &str {
       "0x8300"
    }
}

impl Debug for PacketZcAcceptQuit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAcceptQuit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcRefuseQuit {
    pub packet_id: u16,
}

impl PacketId for PacketZcRefuseQuit {
    fn id(&self) -> &str {
       "0x8400"
    }
}

impl Debug for PacketZcRefuseQuit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRefuseQuit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzRequestMove {
    pub packet_id: u16,
    pub dest: String,
}

impl PacketId for PacketCzRequestMove {
    fn id(&self) -> &str {
       "0x8500"
    }
}

impl Debug for PacketCzRequestMove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestMove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("dest[2, 5]", &self.dest)
        .finish()
    }
}

pub struct PacketZcNotifyMove {
    pub packet_id: u16,
    pub gid: u32,
    pub move_data: String,
    pub move_start_time: u32,
}

impl PacketId for PacketZcNotifyMove {
    fn id(&self) -> &str {
       "0x8600"
    }
}

impl Debug for PacketZcNotifyMove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("move_data[6, 12]", &self.move_data)
            .field("move_start_time[12, 16]", &self.move_start_time)
        .finish()
    }
}

pub struct PacketZcNotifyPlayermove {
    pub packet_id: u16,
    pub move_start_time: u32,
    pub move_data: String,
}

impl PacketId for PacketZcNotifyPlayermove {
    fn id(&self) -> &str {
       "0x8700"
    }
}

impl Debug for PacketZcNotifyPlayermove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPlayermove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("move_start_time[2, 6]", &self.move_start_time)
            .field("move_data[6, 12]", &self.move_data)
        .finish()
    }
}

pub struct PacketZcStopmove {
    pub packet_id: u16,
    pub aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketZcStopmove {
    fn id(&self) -> &str {
       "0x8800"
    }
}

impl Debug for PacketZcStopmove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStopmove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
        .finish()
    }
}

pub struct PacketCzRequestAct {
    pub packet_id: u16,
    pub target_gid: u32,
    pub action: char,
}

impl PacketId for PacketCzRequestAct {
    fn id(&self) -> &str {
       "0x8900"
    }
}

impl Debug for PacketCzRequestAct {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestAct")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_gid[2, 6]", &self.target_gid)
            .field("action[6, 7]", &self.action)
        .finish()
    }
}

pub struct PacketZcNotifyAct {
    pub packet_id: u16,
    pub gid: u32,
    pub target_gid: u32,
    pub start_time: u32,
    pub attack_mt: u32,
    pub attacked_mt: u32,
    pub damage: u16,
    pub count: u16,
    pub action: char,
    pub left_damage: u16,
}

impl PacketId for PacketZcNotifyAct {
    fn id(&self) -> &str {
       "0x8a00"
    }
}

impl Debug for PacketZcNotifyAct {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyAct")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("target_gid[6, 10]", &self.target_gid)
            .field("start_time[10, 14]", &self.start_time)
            .field("attack_mt[14, 18]", &self.attack_mt)
            .field("attacked_mt[18, 22]", &self.attacked_mt)
            .field("damage[22, 24]", &self.damage)
            .field("count[24, 26]", &self.count)
            .field("action[26, 27]", &self.action)
            .field("left_damage[27, 29]", &self.left_damage)
        .finish()
    }
}

pub struct PacketZcNotifyActPosition {
    pub packet_id: u16,
    pub gid: u32,
    pub target_gid: u32,
    pub start_time: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub damage: u16,
    pub count: u16,
    pub action: char,
}

impl PacketId for PacketZcNotifyActPosition {
    fn id(&self) -> &str {
       "0x8b00"
    }
}

impl Debug for PacketZcNotifyActPosition {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyActPosition")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("target_gid[6, 10]", &self.target_gid)
            .field("start_time[10, 14]", &self.start_time)
            .field("x_pos[14, 16]", &self.x_pos)
            .field("y_pos[16, 18]", &self.y_pos)
            .field("damage[18, 20]", &self.damage)
            .field("count[20, 22]", &self.count)
            .field("action[22, 23]", &self.action)
        .finish()
    }
}

pub struct PacketCzRequestChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketCzRequestChat {
    fn id(&self) -> &str {
       "0x8c00"
    }
}

impl Debug for PacketCzRequestChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcNotifyChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub gid: u32,
    pub msg: String,
}

impl PacketId for PacketZcNotifyChat {
    fn id(&self) -> &str {
       "0x8d00"
    }
}

impl Debug for PacketZcNotifyChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("gid[4, 8]", &self.gid)
            .field("msg[8, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcNotifyPlayerchat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketZcNotifyPlayerchat {
    fn id(&self) -> &str {
       "0x8e00"
    }
}

impl Debug for PacketZcNotifyPlayerchat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPlayerchat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketServerEntryAck {
    pub header: u16,
    pub aid: u32,
}

impl PacketId for PacketServerEntryAck {
    fn id(&self) -> &str {
       "0x8f00"
    }
}

impl Debug for PacketServerEntryAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketServerEntryAck")
            .field("id", &self.id())
            .field("header[0, 2]", &self.header)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketCzContactnpc {
    pub packet_id: u16,
    pub naid: u32,
    pub type_: char,
}

impl PacketId for PacketCzContactnpc {
    fn id(&self) -> &str {
       "0x9000"
    }
}

impl Debug for PacketCzContactnpc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzContactnpc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
            .field("type_[6, 7]", &self.type_)
        .finish()
    }
}

pub struct PacketZcNpcackMapmove {
    pub packet_id: u16,
    pub map_name: String,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketZcNpcackMapmove {
    fn id(&self) -> &str {
       "0x9100"
    }
}

impl Debug for PacketZcNpcackMapmove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcackMapmove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("map_name[2, 18]", &self.map_name)
            .field("x_pos[18, 20]", &self.x_pos)
            .field("y_pos[20, 22]", &self.y_pos)
        .finish()
    }
}

pub struct PacketZcNpcackServermove {
    pub packet_id: u16,
    pub map_name: String,
    pub x_pos: u16,
    pub y_pos: u16,
    pub addr: ZserverAddr,
}

impl PacketId for PacketZcNpcackServermove {
    fn id(&self) -> &str {
       "0x9200"
    }
}

impl Debug for PacketZcNpcackServermove {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcackServermove")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("map_name[2, 18]", &self.map_name)
            .field("x_pos[18, 20]", &self.x_pos)
            .field("y_pos[20, 22]", &self.y_pos)
            .field("addr[22, ?]", &self.addr)
        .finish()
    }
}

pub struct PacketZcNpcackEnable {
    pub packet_id: u16,
}

impl PacketId for PacketZcNpcackEnable {
    fn id(&self) -> &str {
       "0x9300"
    }
}

impl Debug for PacketZcNpcackEnable {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcackEnable")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqname {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqname {
    fn id(&self) -> &str {
       "0x9400"
    }
}

impl Debug for PacketCzReqname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckReqname {
    pub packet_id: u16,
    pub aid: u32,
    pub cname: String,
}

impl PacketId for PacketZcAckReqname {
    fn id(&self) -> &str {
       "0x9500"
    }
}

impl Debug for PacketZcAckReqname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("cname[6, 30]", &self.cname)
        .finish()
    }
}

pub struct PacketCzWhisper {
    pub packet_id: u16,
    pub packet_length: u16,
    pub receiver: String,
    pub msg: String,
}

impl PacketId for PacketCzWhisper {
    fn id(&self) -> &str {
       "0x9600"
    }
}

impl Debug for PacketCzWhisper {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzWhisper")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("receiver[4, 28]", &self.receiver)
            .field("msg[44, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcWhisper {
    pub packet_id: u16,
    pub packet_length: u16,
    pub sender: String,
    pub msg: String,
}

impl PacketId for PacketZcWhisper {
    fn id(&self) -> &str {
       "0x9700"
    }
}

impl Debug for PacketZcWhisper {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcWhisper")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("sender[4, 28]", &self.sender)
            .field("msg[44, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcAckWhisper {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckWhisper {
    fn id(&self) -> &str {
       "0x9800"
    }
}

impl Debug for PacketZcAckWhisper {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckWhisper")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzBroadcast {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketCzBroadcast {
    fn id(&self) -> &str {
       "0x9900"
    }
}

impl Debug for PacketCzBroadcast {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBroadcast")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcBroadcast {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketZcBroadcast {
    fn id(&self) -> &str {
       "0x9a00"
    }
}

impl Debug for PacketZcBroadcast {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBroadcast")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketCzChangeDirection {
    pub packet_id: u16,
    pub head_dir: u16,
    pub dir: char,
}

impl PacketId for PacketCzChangeDirection {
    fn id(&self) -> &str {
       "0x9b00"
    }
}

impl Debug for PacketCzChangeDirection {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeDirection")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("head_dir[2, 4]", &self.head_dir)
            .field("dir[4, 5]", &self.dir)
        .finish()
    }
}

pub struct PacketZcChangeDirection {
    pub packet_id: u16,
    pub aid: u32,
    pub head_dir: u16,
    pub dir: char,
}

impl PacketId for PacketZcChangeDirection {
    fn id(&self) -> &str {
       "0x9c00"
    }
}

impl Debug for PacketZcChangeDirection {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangeDirection")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("head_dir[6, 8]", &self.head_dir)
            .field("dir[8, 9]", &self.dir)
        .finish()
    }
}

pub struct PacketZcItemEntry {
    pub packet_id: u16,
    pub itaid: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub x_pos: u16,
    pub y_pos: u16,
    pub count: u16,
    pub sub_x: char,
    pub sub_y: char,
}

impl PacketId for PacketZcItemEntry {
    fn id(&self) -> &str {
       "0x9d00"
    }
}

impl Debug for PacketZcItemEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itaid[2, 6]", &self.itaid)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("x_pos[9, 11]", &self.x_pos)
            .field("y_pos[11, 13]", &self.y_pos)
            .field("count[13, 15]", &self.count)
            .field("sub_x[15, 16]", &self.sub_x)
            .field("sub_y[16, 17]", &self.sub_y)
        .finish()
    }
}

pub struct PacketZcItemFallEntry {
    pub packet_id: u16,
    pub itaid: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub x_pos: u16,
    pub y_pos: u16,
    pub sub_x: char,
    pub sub_y: char,
    pub count: u16,
}

impl PacketId for PacketZcItemFallEntry {
    fn id(&self) -> &str {
       "0x9e00"
    }
}

impl Debug for PacketZcItemFallEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemFallEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itaid[2, 6]", &self.itaid)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("x_pos[9, 11]", &self.x_pos)
            .field("y_pos[11, 13]", &self.y_pos)
            .field("sub_x[13, 14]", &self.sub_x)
            .field("sub_y[14, 15]", &self.sub_y)
            .field("count[15, 17]", &self.count)
        .finish()
    }
}

pub struct PacketCzItemPickup {
    pub packet_id: u16,
    pub itaid: u32,
}

impl PacketId for PacketCzItemPickup {
    fn id(&self) -> &str {
       "0x9f00"
    }
}

impl Debug for PacketCzItemPickup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzItemPickup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itaid[2, 6]", &self.itaid)
        .finish()
    }
}

pub struct PacketZcItemPickupAck {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFOEQUIPSLOTINFO,
    pub location: u16,
    pub type_: char,
    pub result: char,
}

impl PacketId for PacketZcItemPickupAck {
    fn id(&self) -> &str {
       "0xa000"
    }
}

impl Debug for PacketZcItemPickupAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemPickupAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("is_damaged[9, 10]", &self.is_damaged)
            .field("refining_level[10, 11]", &self.refining_level)
            .field("slot[11, ?]", &self.slot)
            .field("location[19, 21]", &self.location)
            .field("type_[21, 22]", &self.type_)
            .field("result[22, 23]", &self.result)
        .finish()
    }
}

pub struct PacketZcItemDisappear {
    pub packet_id: u16,
    pub itaid: u32,
}

impl PacketId for PacketZcItemDisappear {
    fn id(&self) -> &str {
       "0xa100"
    }
}

impl Debug for PacketZcItemDisappear {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemDisappear")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itaid[2, 6]", &self.itaid)
        .finish()
    }
}

pub struct PacketCzItemThrow {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
}

impl PacketId for PacketCzItemThrow {
    fn id(&self) -> &str {
       "0xa200"
    }
}

impl Debug for PacketCzItemThrow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzItemThrow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketZcNormalItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo>,
}

impl PacketId for PacketZcNormalItemlist {
    fn id(&self) -> &str {
       "0xa300"
    }
}

impl Debug for PacketZcNormalItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNormalItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 14]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcEquipmentItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo>,
}

impl PacketId for PacketZcEquipmentItemlist {
    fn id(&self) -> &str {
       "0xa400"
    }
}

impl Debug for PacketZcEquipmentItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipmentItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 24]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreNormalItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo>,
}

impl PacketId for PacketZcStoreNormalItemlist {
    fn id(&self) -> &str {
       "0xa500"
    }
}

impl Debug for PacketZcStoreNormalItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreNormalItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 14]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreEquipmentItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo>,
}

impl PacketId for PacketZcStoreEquipmentItemlist {
    fn id(&self) -> &str {
       "0xa600"
    }
}

impl Debug for PacketZcStoreEquipmentItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreEquipmentItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 24]", &self.item_info)
        .finish()
    }
}

pub struct PacketCzUseItem {
    pub packet_id: u16,
    pub index: u16,
    pub aid: u32,
}

impl PacketId for PacketCzUseItem {
    fn id(&self) -> &str {
       "0xa700"
    }
}

impl Debug for PacketCzUseItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("aid[4, 8]", &self.aid)
        .finish()
    }
}

pub struct PacketZcUseItemAck {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
    pub result: bool,
}

impl PacketId for PacketZcUseItemAck {
    fn id(&self) -> &str {
       "0xa800"
    }
}

impl Debug for PacketZcUseItemAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUseItemAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
            .field("result[6, 7]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqWearEquip {
    pub packet_id: u16,
    pub index: u16,
    pub wear_location: u16,
}

impl PacketId for PacketCzReqWearEquip {
    fn id(&self) -> &str {
       "0xa900"
    }
}

impl Debug for PacketCzReqWearEquip {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqWearEquip")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("wear_location[4, 6]", &self.wear_location)
        .finish()
    }
}

pub struct PacketZcReqWearEquipAck {
    pub packet_id: u16,
    pub index: u16,
    pub wear_location: u16,
    pub result: char,
}

impl PacketId for PacketZcReqWearEquipAck {
    fn id(&self) -> &str {
       "0xaa00"
    }
}

impl Debug for PacketZcReqWearEquipAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqWearEquipAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("wear_location[4, 6]", &self.wear_location)
            .field("result[6, 7]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqTakeoffEquip {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketCzReqTakeoffEquip {
    fn id(&self) -> &str {
       "0xab00"
    }
}

impl Debug for PacketCzReqTakeoffEquip {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqTakeoffEquip")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketZcReqTakeoffEquipAck {
    pub packet_id: u16,
    pub index: u16,
    pub wear_location: u16,
    pub result: bool,
}

impl PacketId for PacketZcReqTakeoffEquipAck {
    fn id(&self) -> &str {
       "0xac00"
    }
}

impl Debug for PacketZcReqTakeoffEquipAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqTakeoffEquipAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("wear_location[4, 6]", &self.wear_location)
            .field("result[6, 7]", &self.result)
        .finish()
    }
}

pub struct PacketZcItemThrowAck {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
}

impl PacketId for PacketZcItemThrowAck {
    fn id(&self) -> &str {
       "0xaf00"
    }
}

impl Debug for PacketZcItemThrowAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemThrowAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketZcParChange {
    pub packet_id: u16,
    pub var_id: u16,
    pub count: u32,
}

impl PacketId for PacketZcParChange {
    fn id(&self) -> &str {
       "0xb000"
    }
}

impl Debug for PacketZcParChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcParChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var_id[2, 4]", &self.var_id)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcLongparChange {
    pub packet_id: u16,
    pub var_id: u16,
    pub amount: u32,
}

impl PacketId for PacketZcLongparChange {
    fn id(&self) -> &str {
       "0xb100"
    }
}

impl Debug for PacketZcLongparChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcLongparChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var_id[2, 4]", &self.var_id)
            .field("amount[4, 8]", &self.amount)
        .finish()
    }
}

pub struct PacketCzRestart {
    pub packet_id: u16,
    pub type_: char,
}

impl PacketId for PacketCzRestart {
    fn id(&self) -> &str {
       "0xb200"
    }
}

impl Debug for PacketCzRestart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRestart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
        .finish()
    }
}

pub struct PacketZcRestartAck {
    pub packet_id: u16,
    pub type_: char,
}

impl PacketId for PacketZcRestartAck {
    fn id(&self) -> &str {
       "0xb300"
    }
}

impl Debug for PacketZcRestartAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRestartAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
        .finish()
    }
}

pub struct PacketZcSayDialog {
    pub packet_id: u16,
    pub packet_length: u16,
    pub naid: u32,
    pub msg: String,
}

impl PacketId for PacketZcSayDialog {
    fn id(&self) -> &str {
       "0xb400"
    }
}

impl Debug for PacketZcSayDialog {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSayDialog")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("naid[4, 8]", &self.naid)
            .field("msg[8, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcWaitDialog {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketZcWaitDialog {
    fn id(&self) -> &str {
       "0xb500"
    }
}

impl Debug for PacketZcWaitDialog {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcWaitDialog")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketZcCloseDialog {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketZcCloseDialog {
    fn id(&self) -> &str {
       "0xb600"
    }
}

impl Debug for PacketZcCloseDialog {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCloseDialog")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketZcMenuList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub naid: u32,
    pub msg: String,
}

impl PacketId for PacketZcMenuList {
    fn id(&self) -> &str {
       "0xb700"
    }
}

impl Debug for PacketZcMenuList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMenuList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("naid[4, 8]", &self.naid)
            .field("msg[8, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketCzChooseMenu {
    pub packet_id: u16,
    pub naid: u32,
    pub num: char,
}

impl PacketId for PacketCzChooseMenu {
    fn id(&self) -> &str {
       "0xb800"
    }
}

impl Debug for PacketCzChooseMenu {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChooseMenu")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
            .field("num[6, 7]", &self.num)
        .finish()
    }
}

pub struct PacketCzReqNextScript {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketCzReqNextScript {
    fn id(&self) -> &str {
       "0xb900"
    }
}

impl Debug for PacketCzReqNextScript {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqNextScript")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketCzReqStatus {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqStatus {
    fn id(&self) -> &str {
       "0xba00"
    }
}

impl Debug for PacketCzReqStatus {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqStatus")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzStatusChange {
    pub packet_id: u16,
    pub status_id: u16,
    pub change_amount: char,
}

impl PacketId for PacketCzStatusChange {
    fn id(&self) -> &str {
       "0xbb00"
    }
}

impl Debug for PacketCzStatusChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzStatusChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("status_id[2, 4]", &self.status_id)
            .field("change_amount[4, 5]", &self.change_amount)
        .finish()
    }
}

pub struct PacketZcStatusChangeAck {
    pub packet_id: u16,
    pub status_id: u16,
    pub result: bool,
    pub value: char,
}

impl PacketId for PacketZcStatusChangeAck {
    fn id(&self) -> &str {
       "0xbc00"
    }
}

impl Debug for PacketZcStatusChangeAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStatusChangeAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("status_id[2, 4]", &self.status_id)
            .field("result[4, 5]", &self.result)
            .field("value[5, 6]", &self.value)
        .finish()
    }
}

pub struct PacketZcStatus {
    pub packet_id: u16,
    pub point: u16,
    pub str: char,
    pub standard_str: char,
    pub agi: char,
    pub standard_agi: char,
    pub vit: char,
    pub standard_vit: char,
    pub int: char,
    pub standard_int: char,
    pub dex: char,
    pub standard_dex: char,
    pub luk: char,
    pub standard_luk: char,
    pub att_power: u16,
    pub refining_power: u16,
    pub max_matt_power: u16,
    pub min_matt_power: u16,
    pub itemdef_power: u16,
    pub plusdef_power: u16,
    pub mdef_power: u16,
    pub plusmdef_power: u16,
    pub hit_success_value: u16,
    pub avoid_success_value: u16,
    pub plus_avoid_success_value: u16,
    pub critical_success_value: u16,
    pub aspd: u16,
    pub plus_aspd: u16,
}

impl PacketId for PacketZcStatus {
    fn id(&self) -> &str {
       "0xbd00"
    }
}

impl Debug for PacketZcStatus {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStatus")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point[2, 4]", &self.point)
            .field("str[4, 5]", &self.str)
            .field("standard_str[5, 6]", &self.standard_str)
            .field("agi[6, 7]", &self.agi)
            .field("standard_agi[7, 8]", &self.standard_agi)
            .field("vit[8, 9]", &self.vit)
            .field("standard_vit[9, 10]", &self.standard_vit)
            .field("int[10, 11]", &self.int)
            .field("standard_int[11, 12]", &self.standard_int)
            .field("dex[12, 13]", &self.dex)
            .field("standard_dex[13, 14]", &self.standard_dex)
            .field("luk[14, 15]", &self.luk)
            .field("standard_luk[15, 16]", &self.standard_luk)
            .field("att_power[16, 18]", &self.att_power)
            .field("refining_power[18, 20]", &self.refining_power)
            .field("max_matt_power[20, 22]", &self.max_matt_power)
            .field("min_matt_power[22, 24]", &self.min_matt_power)
            .field("itemdef_power[24, 26]", &self.itemdef_power)
            .field("plusdef_power[26, 28]", &self.plusdef_power)
            .field("mdef_power[28, 30]", &self.mdef_power)
            .field("plusmdef_power[30, 32]", &self.plusmdef_power)
            .field("hit_success_value[32, 34]", &self.hit_success_value)
            .field("avoid_success_value[34, 36]", &self.avoid_success_value)
            .field("plus_avoid_success_value[36, 38]", &self.plus_avoid_success_value)
            .field("critical_success_value[38, 40]", &self.critical_success_value)
            .field("aspd[40, 42]", &self.aspd)
            .field("plus_aspd[42, 44]", &self.plus_aspd)
        .finish()
    }
}

pub struct PacketZcStatusChange {
    pub packet_id: u16,
    pub status_id: u16,
    pub value: char,
}

impl PacketId for PacketZcStatusChange {
    fn id(&self) -> &str {
       "0xbe00"
    }
}

impl Debug for PacketZcStatusChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStatusChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("status_id[2, 4]", &self.status_id)
            .field("value[4, 5]", &self.value)
        .finish()
    }
}

pub struct PacketCzReqEmotion {
    pub packet_id: u16,
    pub type_: char,
}

impl PacketId for PacketCzReqEmotion {
    fn id(&self) -> &str {
       "0xbf00"
    }
}

impl Debug for PacketCzReqEmotion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqEmotion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
        .finish()
    }
}

pub struct PacketZcEmotion {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
}

impl PacketId for PacketZcEmotion {
    fn id(&self) -> &str {
       "0xc000"
    }
}

impl Debug for PacketZcEmotion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEmotion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
        .finish()
    }
}

pub struct PacketCzReqUserCount {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqUserCount {
    fn id(&self) -> &str {
       "0xc100"
    }
}

impl Debug for PacketCzReqUserCount {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqUserCount")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcUserCount {
    pub packet_id: u16,
    pub count: u32,
}

impl PacketId for PacketZcUserCount {
    fn id(&self) -> &str {
       "0xc200"
    }
}

impl Debug for PacketZcUserCount {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUserCount")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("count[2, 6]", &self.count)
        .finish()
    }
}

pub struct PacketZcSpriteChange {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
    pub value: char,
}

impl PacketId for PacketZcSpriteChange {
    fn id(&self) -> &str {
       "0xc300"
    }
}

impl Debug for PacketZcSpriteChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSpriteChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
            .field("value[7, 8]", &self.value)
        .finish()
    }
}

pub struct PacketZcSelectDealtype {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketZcSelectDealtype {
    fn id(&self) -> &str {
       "0xc400"
    }
}

impl Debug for PacketZcSelectDealtype {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSelectDealtype")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketCzAckSelectDealtype {
    pub packet_id: u16,
    pub naid: u32,
    pub type_: char,
}

impl PacketId for PacketCzAckSelectDealtype {
    fn id(&self) -> &str {
       "0xc500"
    }
}

impl Debug for PacketCzAckSelectDealtype {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckSelectDealtype")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
            .field("type_[6, 7]", &self.type_)
        .finish()
    }
}

pub struct PacketZcPcPurchaseItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<PurchaseItem>,
}

impl PacketId for PacketZcPcPurchaseItemlist {
    fn id(&self) -> &str {
       "0xc600"
    }
}

impl Debug for PacketZcPcPurchaseItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 15]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcPcSellItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<SellItem>,
}

impl PacketId for PacketZcPcSellItemlist {
    fn id(&self) -> &str {
       "0xc700"
    }
}

impl Debug for PacketZcPcSellItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcSellItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 14]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPcPurchaseItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<CzPurchaseItem>,
}

impl PacketId for PacketCzPcPurchaseItemlist {
    fn id(&self) -> &str {
       "0xc800"
    }
}

impl Debug for PacketCzPcPurchaseItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPcPurchaseItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 8]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPcSellItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<CzSellItem>,
}

impl PacketId for PacketCzPcSellItemlist {
    fn id(&self) -> &str {
       "0xc900"
    }
}

impl Debug for PacketCzPcSellItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPcSellItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 8]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcPcPurchaseResult {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcPcPurchaseResult {
    fn id(&self) -> &str {
       "0xca00"
    }
}

impl Debug for PacketZcPcPurchaseResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcPcSellResult {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcPcSellResult {
    fn id(&self) -> &str {
       "0xcb00"
    }
}

impl Debug for PacketZcPcSellResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcSellResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzDisconnectCharacter {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzDisconnectCharacter {
    fn id(&self) -> &str {
       "0xcc00"
    }
}

impl Debug for PacketCzDisconnectCharacter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzDisconnectCharacter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckDisconnectCharacter {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckDisconnectCharacter {
    fn id(&self) -> &str {
       "0xcd00"
    }
}

impl Debug for PacketZcAckDisconnectCharacter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckDisconnectCharacter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzDisconnectAllCharacter {
    pub packet_id: u16,
}

impl PacketId for PacketCzDisconnectAllCharacter {
    fn id(&self) -> &str {
       "0xce00"
    }
}

impl Debug for PacketCzDisconnectAllCharacter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzDisconnectAllCharacter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzSettingWhisperPc {
    pub packet_id: u16,
    pub name: String,
    pub type_: char,
}

impl PacketId for PacketCzSettingWhisperPc {
    fn id(&self) -> &str {
       "0xcf00"
    }
}

impl Debug for PacketCzSettingWhisperPc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSettingWhisperPc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("type_[26, 27]", &self.type_)
        .finish()
    }
}

pub struct PacketCzSettingWhisperState {
    pub packet_id: u16,
    pub type_: char,
}

impl PacketId for PacketCzSettingWhisperState {
    fn id(&self) -> &str {
       "0xd000"
    }
}

impl Debug for PacketCzSettingWhisperState {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSettingWhisperState")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
        .finish()
    }
}

pub struct PacketZcSettingWhisperPc {
    pub packet_id: u16,
    pub type_: char,
    pub result: char,
}

impl PacketId for PacketZcSettingWhisperPc {
    fn id(&self) -> &str {
       "0xd100"
    }
}

impl Debug for PacketZcSettingWhisperPc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSettingWhisperPc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("result[3, 4]", &self.result)
        .finish()
    }
}

pub struct PacketZcSettingWhisperState {
    pub packet_id: u16,
    pub type_: char,
    pub result: char,
}

impl PacketId for PacketZcSettingWhisperState {
    fn id(&self) -> &str {
       "0xd200"
    }
}

impl Debug for PacketZcSettingWhisperState {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSettingWhisperState")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("result[3, 4]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqWhisperList {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqWhisperList {
    fn id(&self) -> &str {
       "0xd300"
    }
}

impl Debug for PacketCzReqWhisperList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqWhisperList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcWhisperList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub wisper_list: Vec<WhisperItem>,
}

impl PacketId for PacketZcWhisperList {
    fn id(&self) -> &str {
       "0xd400"
    }
}

impl Debug for PacketZcWhisperList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcWhisperList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("wisper_list[4, 28]", &self.wisper_list)
        .finish()
    }
}

pub struct PacketCzCreateChatroom {
    pub packet_id: u16,
    pub packet_length: u16,
    pub size: u16,
    pub type_: char,
    pub passwd: String,
    pub title: String,
}

impl PacketId for PacketCzCreateChatroom {
    fn id(&self) -> &str {
       "0xd500"
    }
}

impl Debug for PacketCzCreateChatroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCreateChatroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("size[4, 6]", &self.size)
            .field("type_[6, 7]", &self.type_)
            .field("passwd[7, 15]", &self.passwd)
            .field("title[15, ?]", &self.title)
        .finish()
    }
}

pub struct PacketZcAckCreateChatroom {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckCreateChatroom {
    fn id(&self) -> &str {
       "0xd600"
    }
}

impl Debug for PacketZcAckCreateChatroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckCreateChatroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcRoomNewentry {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub room_id: u32,
    pub maxcount: u16,
    pub curcount: u16,
    pub type_: char,
    pub title: String,
}

impl PacketId for PacketZcRoomNewentry {
    fn id(&self) -> &str {
       "0xd700"
    }
}

impl Debug for PacketZcRoomNewentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRoomNewentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("room_id[8, 12]", &self.room_id)
            .field("maxcount[12, 14]", &self.maxcount)
            .field("curcount[14, 16]", &self.curcount)
            .field("type_[16, 17]", &self.type_)
            .field("title[17, ?]", &self.title)
        .finish()
    }
}

pub struct PacketZcDestroyRoom {
    pub packet_id: u16,
    pub room_id: u32,
}

impl PacketId for PacketZcDestroyRoom {
    fn id(&self) -> &str {
       "0xd800"
    }
}

impl Debug for PacketZcDestroyRoom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDestroyRoom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("room_id[2, 6]", &self.room_id)
        .finish()
    }
}

pub struct PacketCzReqEnterRoom {
    pub packet_id: u16,
    pub room_id: u32,
    pub passwd: String,
}

impl PacketId for PacketCzReqEnterRoom {
    fn id(&self) -> &str {
       "0xd900"
    }
}

impl Debug for PacketCzReqEnterRoom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqEnterRoom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("room_id[2, 6]", &self.room_id)
            .field("passwd[6, 14]", &self.passwd)
        .finish()
    }
}

pub struct PacketZcRefuseEnterRoom {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcRefuseEnterRoom {
    fn id(&self) -> &str {
       "0xda00"
    }
}

impl Debug for PacketZcRefuseEnterRoom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRefuseEnterRoom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcEnterRoom {
    pub packet_id: u16,
    pub packet_length: u16,
    pub room_id: u32,
    pub member_list: Vec<RoomMember>,
}

impl PacketId for PacketZcEnterRoom {
    fn id(&self) -> &str {
       "0xdb00"
    }
}

impl Debug for PacketZcEnterRoom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEnterRoom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("room_id[4, 8]", &self.room_id)
            .field("member_list[8, 36]", &self.member_list)
        .finish()
    }
}

pub struct PacketZcMemberNewentry {
    pub packet_id: u16,
    pub curcount: u16,
    pub name: String,
}

impl PacketId for PacketZcMemberNewentry {
    fn id(&self) -> &str {
       "0xdc00"
    }
}

impl Debug for PacketZcMemberNewentry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemberNewentry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("curcount[2, 4]", &self.curcount)
            .field("name[4, 28]", &self.name)
        .finish()
    }
}

pub struct PacketZcMemberExit {
    pub packet_id: u16,
    pub curcount: u16,
    pub name: String,
    pub type_: char,
}

impl PacketId for PacketZcMemberExit {
    fn id(&self) -> &str {
       "0xdd00"
    }
}

impl Debug for PacketZcMemberExit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemberExit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("curcount[2, 4]", &self.curcount)
            .field("name[4, 28]", &self.name)
            .field("type_[28, 29]", &self.type_)
        .finish()
    }
}

pub struct PacketCzChangeChatroom {
    pub packet_id: u16,
    pub packet_length: u16,
    pub size: u16,
    pub type_: char,
    pub passwd: String,
    pub title: String,
}

impl PacketId for PacketCzChangeChatroom {
    fn id(&self) -> &str {
       "0xde00"
    }
}

impl Debug for PacketCzChangeChatroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeChatroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("size[4, 6]", &self.size)
            .field("type_[6, 7]", &self.type_)
            .field("passwd[7, 15]", &self.passwd)
            .field("title[15, ?]", &self.title)
        .finish()
    }
}

pub struct PacketZcChangeChatroom {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub room_id: u32,
    pub maxcount: u16,
    pub curcount: u16,
    pub type_: char,
    pub title: String,
}

impl PacketId for PacketZcChangeChatroom {
    fn id(&self) -> &str {
       "0xdf00"
    }
}

impl Debug for PacketZcChangeChatroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangeChatroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("room_id[8, 12]", &self.room_id)
            .field("maxcount[12, 14]", &self.maxcount)
            .field("curcount[14, 16]", &self.curcount)
            .field("type_[16, 17]", &self.type_)
            .field("title[17, ?]", &self.title)
        .finish()
    }
}

pub struct PacketCzReqRoleChange {
    pub packet_id: u16,
    pub role: u32,
    pub name: String,
}

impl PacketId for PacketCzReqRoleChange {
    fn id(&self) -> &str {
       "0xe000"
    }
}

impl Debug for PacketCzReqRoleChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqRoleChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("role[2, 6]", &self.role)
            .field("name[6, 30]", &self.name)
        .finish()
    }
}

pub struct PacketZcRoleChange {
    pub packet_id: u16,
    pub role: u32,
    pub name: String,
}

impl PacketId for PacketZcRoleChange {
    fn id(&self) -> &str {
       "0xe100"
    }
}

impl Debug for PacketZcRoleChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRoleChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("role[2, 6]", &self.role)
            .field("name[6, 30]", &self.name)
        .finish()
    }
}

pub struct PacketCzReqExpelMember {
    pub packet_id: u16,
    pub name: String,
}

impl PacketId for PacketCzReqExpelMember {
    fn id(&self) -> &str {
       "0xe200"
    }
}

impl Debug for PacketCzReqExpelMember {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqExpelMember")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
        .finish()
    }
}

pub struct PacketCzExitRoom {
    pub packet_id: u16,
}

impl PacketId for PacketCzExitRoom {
    fn id(&self) -> &str {
       "0xe300"
    }
}

impl Debug for PacketCzExitRoom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzExitRoom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqExchangeItem {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqExchangeItem {
    fn id(&self) -> &str {
       "0xe400"
    }
}

impl Debug for PacketCzReqExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcReqExchangeItem {
    pub packet_id: u16,
    pub name: String,
}

impl PacketId for PacketZcReqExchangeItem {
    fn id(&self) -> &str {
       "0xe500"
    }
}

impl Debug for PacketZcReqExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
        .finish()
    }
}

pub struct PacketCzAckExchangeItem {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketCzAckExchangeItem {
    fn id(&self) -> &str {
       "0xe600"
    }
}

impl Debug for PacketCzAckExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcAckExchangeItem {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckExchangeItem {
    fn id(&self) -> &str {
       "0xe700"
    }
}

impl Debug for PacketZcAckExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzAddExchangeItem {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzAddExchangeItem {
    fn id(&self) -> &str {
       "0xe800"
    }
}

impl Debug for PacketCzAddExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAddExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcAddExchangeItem {
    pub packet_id: u16,
    pub count: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddExchangeItem {
    fn id(&self) -> &str {
       "0xe900"
    }
}

impl Debug for PacketZcAddExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("count[2, 6]", &self.count)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("is_damaged[9, 10]", &self.is_damaged)
            .field("refining_level[10, 11]", &self.refining_level)
            .field("slot[11, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketZcAckAddExchangeItem {
    pub packet_id: u16,
    pub index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckAddExchangeItem {
    fn id(&self) -> &str {
       "0xea00"
    }
}

impl Debug for PacketZcAckAddExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckAddExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketCzConcludeExchangeItem {
    pub packet_id: u16,
}

impl PacketId for PacketCzConcludeExchangeItem {
    fn id(&self) -> &str {
       "0xeb00"
    }
}

impl Debug for PacketCzConcludeExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzConcludeExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcConcludeExchangeItem {
    pub packet_id: u16,
    pub who: char,
}

impl PacketId for PacketZcConcludeExchangeItem {
    fn id(&self) -> &str {
       "0xec00"
    }
}

impl Debug for PacketZcConcludeExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcConcludeExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("who[2, 3]", &self.who)
        .finish()
    }
}

pub struct PacketCzCancelExchangeItem {
    pub packet_id: u16,
}

impl PacketId for PacketCzCancelExchangeItem {
    fn id(&self) -> &str {
       "0xed00"
    }
}

impl Debug for PacketCzCancelExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCancelExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcCancelExchangeItem {
    pub packet_id: u16,
}

impl PacketId for PacketZcCancelExchangeItem {
    fn id(&self) -> &str {
       "0xee00"
    }
}

impl Debug for PacketZcCancelExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCancelExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzExecExchangeItem {
    pub packet_id: u16,
}

impl PacketId for PacketCzExecExchangeItem {
    fn id(&self) -> &str {
       "0xef00"
    }
}

impl Debug for PacketCzExecExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzExecExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcExecExchangeItem {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcExecExchangeItem {
    fn id(&self) -> &str {
       "0xf000"
    }
}

impl Debug for PacketZcExecExchangeItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcExecExchangeItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcExchangeitemUndo {
    pub packet_id: u16,
}

impl PacketId for PacketZcExchangeitemUndo {
    fn id(&self) -> &str {
       "0xf100"
    }
}

impl Debug for PacketZcExchangeitemUndo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcExchangeitemUndo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcNotifyStoreitemCountinfo {
    pub packet_id: u16,
    pub cur_count: u16,
    pub max_count: u16,
}

impl PacketId for PacketZcNotifyStoreitemCountinfo {
    fn id(&self) -> &str {
       "0xf200"
    }
}

impl Debug for PacketZcNotifyStoreitemCountinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStoreitemCountinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("cur_count[2, 4]", &self.cur_count)
            .field("max_count[4, 6]", &self.max_count)
        .finish()
    }
}

pub struct PacketCzMoveItemFromBodyToStore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromBodyToStore {
    fn id(&self) -> &str {
       "0xf300"
    }
}

impl Debug for PacketCzMoveItemFromBodyToStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromBodyToStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcAddItemToStore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddItemToStore {
    fn id(&self) -> &str {
       "0xf400"
    }
}

impl Debug for PacketZcAddItemToStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddItemToStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
            .field("itid[8, 10]", &self.itid)
            .field("is_identified[10, 11]", &self.is_identified)
            .field("is_damaged[11, 12]", &self.is_damaged)
            .field("refining_level[12, 13]", &self.refining_level)
            .field("slot[13, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketCzMoveItemFromStoreToBody {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromStoreToBody {
    fn id(&self) -> &str {
       "0xf500"
    }
}

impl Debug for PacketCzMoveItemFromStoreToBody {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromStoreToBody")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcDeleteItemFromStore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketZcDeleteItemFromStore {
    fn id(&self) -> &str {
       "0xf600"
    }
}

impl Debug for PacketZcDeleteItemFromStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteItemFromStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzCloseStore {
    pub packet_id: u16,
}

impl PacketId for PacketCzCloseStore {
    fn id(&self) -> &str {
       "0xf700"
    }
}

impl Debug for PacketCzCloseStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCloseStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcCloseStore {
    pub packet_id: u16,
}

impl PacketId for PacketZcCloseStore {
    fn id(&self) -> &str {
       "0xf800"
    }
}

impl Debug for PacketZcCloseStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCloseStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzMakeGroup {
    pub packet_id: u16,
    pub group_name: String,
}

impl PacketId for PacketCzMakeGroup {
    fn id(&self) -> &str {
       "0xf900"
    }
}

impl Debug for PacketCzMakeGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMakeGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("group_name[2, 26]", &self.group_name)
        .finish()
    }
}

pub struct PacketZcAckMakeGroup {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckMakeGroup {
    fn id(&self) -> &str {
       "0xfa00"
    }
}

impl Debug for PacketZcAckMakeGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckMakeGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcGroupList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub group_name: String,
    pub group_info: Vec<GroupmemberInfo>,
}

impl PacketId for PacketZcGroupList {
    fn id(&self) -> &str {
       "0xfb00"
    }
}

impl Debug for PacketZcGroupList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGroupList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("group_name[4, 28]", &self.group_name)
            .field("group_info[28, 74]", &self.group_info)
        .finish()
    }
}

pub struct PacketCzReqJoinGroup {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqJoinGroup {
    fn id(&self) -> &str {
       "0xfc00"
    }
}

impl Debug for PacketCzReqJoinGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqJoinGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckReqJoinGroup {
    pub packet_id: u16,
    pub character_name: String,
    pub answer: char,
}

impl PacketId for PacketZcAckReqJoinGroup {
    fn id(&self) -> &str {
       "0xfd00"
    }
}

impl Debug for PacketZcAckReqJoinGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqJoinGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("character_name[2, 26]", &self.character_name)
            .field("answer[26, 27]", &self.answer)
        .finish()
    }
}

pub struct PacketZcReqJoinGroup {
    pub packet_id: u16,
    pub grid: u32,
    pub group_name: String,
}

impl PacketId for PacketZcReqJoinGroup {
    fn id(&self) -> &str {
       "0xfe00"
    }
}

impl Debug for PacketZcReqJoinGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqJoinGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("grid[2, 6]", &self.grid)
            .field("group_name[6, 30]", &self.group_name)
        .finish()
    }
}

pub struct PacketCzJoinGroup {
    pub packet_id: u16,
    pub grid: u32,
    pub answer: u32,
}

impl PacketId for PacketCzJoinGroup {
    fn id(&self) -> &str {
       "0xff00"
    }
}

impl Debug for PacketCzJoinGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzJoinGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("grid[2, 6]", &self.grid)
            .field("answer[6, 10]", &self.answer)
        .finish()
    }
}

pub struct PacketCzReqLeaveGroup {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqLeaveGroup {
    fn id(&self) -> &str {
       "0x0100"
    }
}

impl Debug for PacketCzReqLeaveGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqLeaveGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcGroupinfoChange {
    pub packet_id: u16,
    pub exp_option: u32,
}

impl PacketId for PacketZcGroupinfoChange {
    fn id(&self) -> &str {
       "0x0101"
    }
}

impl Debug for PacketZcGroupinfoChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGroupinfoChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp_option[2, 6]", &self.exp_option)
        .finish()
    }
}

pub struct PacketCzChangeGroupexpoption {
    pub packet_id: u16,
    pub exp_option: u32,
}

impl PacketId for PacketCzChangeGroupexpoption {
    fn id(&self) -> &str {
       "0x0102"
    }
}

impl Debug for PacketCzChangeGroupexpoption {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeGroupexpoption")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp_option[2, 6]", &self.exp_option)
        .finish()
    }
}

pub struct PacketCzReqExpelGroupMember {
    pub packet_id: u16,
    pub aid: u32,
    pub character_name: String,
}

impl PacketId for PacketCzReqExpelGroupMember {
    fn id(&self) -> &str {
       "0x0103"
    }
}

impl Debug for PacketCzReqExpelGroupMember {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqExpelGroupMember")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("character_name[6, 30]", &self.character_name)
        .finish()
    }
}

pub struct PacketZcAddMemberToGroup {
    pub packet_id: u16,
    pub aid: u32,
    pub role: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub state: char,
    pub group_name: String,
    pub character_name: String,
    pub map_name: String,
}

impl PacketId for PacketZcAddMemberToGroup {
    fn id(&self) -> &str {
       "0x0104"
    }
}

impl Debug for PacketZcAddMemberToGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddMemberToGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("role[6, 10]", &self.role)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("state[14, 15]", &self.state)
            .field("group_name[15, 39]", &self.group_name)
            .field("character_name[39, 63]", &self.character_name)
            .field("map_name[63, 79]", &self.map_name)
        .finish()
    }
}

pub struct PacketZcDeleteMemberFromGroup {
    pub packet_id: u16,
    pub aid: u32,
    pub character_name: String,
    pub result: char,
}

impl PacketId for PacketZcDeleteMemberFromGroup {
    fn id(&self) -> &str {
       "0x0105"
    }
}

impl Debug for PacketZcDeleteMemberFromGroup {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteMemberFromGroup")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("character_name[6, 30]", &self.character_name)
            .field("result[30, 31]", &self.result)
        .finish()
    }
}

pub struct PacketZcNotifyHpToGroupm {
    pub packet_id: u16,
    pub aid: u32,
    pub hp: u16,
    pub maxhp: u16,
}

impl PacketId for PacketZcNotifyHpToGroupm {
    fn id(&self) -> &str {
       "0x0106"
    }
}

impl Debug for PacketZcNotifyHpToGroupm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyHpToGroupm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("hp[6, 8]", &self.hp)
            .field("maxhp[8, 10]", &self.maxhp)
        .finish()
    }
}

pub struct PacketZcNotifyPositionToGroupm {
    pub packet_id: u16,
    pub aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketZcNotifyPositionToGroupm {
    fn id(&self) -> &str {
       "0x0107"
    }
}

impl Debug for PacketZcNotifyPositionToGroupm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPositionToGroupm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
        .finish()
    }
}

pub struct PacketCzRequestChatParty {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketCzRequestChatParty {
    fn id(&self) -> &str {
       "0x0108"
    }
}

impl Debug for PacketCzRequestChatParty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestChatParty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcNotifyChatParty {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub msg: String,
}

impl PacketId for PacketZcNotifyChatParty {
    fn id(&self) -> &str {
       "0x0109"
    }
}

impl Debug for PacketZcNotifyChatParty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyChatParty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("msg[8, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcMvpGettingItem {
    pub packet_id: u16,
    pub itid: u16,
}

impl PacketId for PacketZcMvpGettingItem {
    fn id(&self) -> &str {
       "0x010a"
    }
}

impl Debug for PacketZcMvpGettingItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMvpGettingItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
        .finish()
    }
}

pub struct PacketZcMvpGettingSpecialExp {
    pub packet_id: u16,
    pub exp: u32,
}

impl PacketId for PacketZcMvpGettingSpecialExp {
    fn id(&self) -> &str {
       "0x010b"
    }
}

impl Debug for PacketZcMvpGettingSpecialExp {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMvpGettingSpecialExp")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp[2, 6]", &self.exp)
        .finish()
    }
}

pub struct PacketZcMvp {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcMvp {
    fn id(&self) -> &str {
       "0x010c"
    }
}

impl Debug for PacketZcMvp {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMvp")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcThrowMvpitem {
    pub packet_id: u16,
}

impl PacketId for PacketZcThrowMvpitem {
    fn id(&self) -> &str {
       "0x010d"
    }
}

impl Debug for PacketZcThrowMvpitem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcThrowMvpitem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcSkillinfoUpdate {
    pub packet_id: u16,
    pub skid: u16,
    pub level: u16,
    pub spcost: u16,
    pub attack_range: u16,
    pub upgradable: bool,
}

impl PacketId for PacketZcSkillinfoUpdate {
    fn id(&self) -> &str {
       "0x010e"
    }
}

impl Debug for PacketZcSkillinfoUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillinfoUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("level[4, 6]", &self.level)
            .field("spcost[6, 8]", &self.spcost)
            .field("attack_range[8, 10]", &self.attack_range)
            .field("upgradable[10, 11]", &self.upgradable)
        .finish()
    }
}

pub struct PacketZcSkillinfoList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub skill_list: Vec<SKILLINFO>,
}

impl PacketId for PacketZcSkillinfoList {
    fn id(&self) -> &str {
       "0x010f"
    }
}

impl Debug for PacketZcSkillinfoList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillinfoList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("skill_list[4, 41]", &self.skill_list)
        .finish()
    }
}

pub struct PacketZcAckTouseskill {
    pub packet_id: u16,
    pub skid: u16,
    pub num: u32,
    pub result: bool,
    pub cause: char,
}

impl PacketId for PacketZcAckTouseskill {
    fn id(&self) -> &str {
       "0x0110"
    }
}

impl Debug for PacketZcAckTouseskill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckTouseskill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("num[4, 8]", &self.num)
            .field("result[8, 9]", &self.result)
            .field("cause[9, 10]", &self.cause)
        .finish()
    }
}

pub struct PacketZcAddSkill {
    pub packet_id: u16,
    pub data: SKILLINFO,
}

impl PacketId for PacketZcAddSkill {
    fn id(&self) -> &str {
       "0x0111"
    }
}

impl Debug for PacketZcAddSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("data[2, ?]", &self.data)
        .finish()
    }
}

pub struct PacketCzUpgradeSkilllevel {
    pub packet_id: u16,
    pub skid: u16,
}

impl PacketId for PacketCzUpgradeSkilllevel {
    fn id(&self) -> &str {
       "0x0112"
    }
}

impl Debug for PacketCzUpgradeSkilllevel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUpgradeSkilllevel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
        .finish()
    }
}

pub struct PacketCzUseSkill {
    pub packet_id: u16,
    pub selected_level: u16,
    pub skid: u16,
    pub target_id: u32,
}

impl PacketId for PacketCzUseSkill {
    fn id(&self) -> &str {
       "0x0113"
    }
}

impl Debug for PacketCzUseSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("selected_level[2, 4]", &self.selected_level)
            .field("skid[4, 6]", &self.skid)
            .field("target_id[6, 10]", &self.target_id)
        .finish()
    }
}

pub struct PacketZcNotifySkill {
    pub packet_id: u16,
    pub skid: u16,
    pub aid: u32,
    pub target_id: u32,
    pub start_time: u32,
    pub attack_mt: u32,
    pub attacked_mt: u32,
    pub damage: u16,
    pub level: u16,
    pub count: u16,
    pub action: char,
}

impl PacketId for PacketZcNotifySkill {
    fn id(&self) -> &str {
       "0x0114"
    }
}

impl Debug for PacketZcNotifySkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifySkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("aid[4, 8]", &self.aid)
            .field("target_id[8, 12]", &self.target_id)
            .field("start_time[12, 16]", &self.start_time)
            .field("attack_mt[16, 20]", &self.attack_mt)
            .field("attacked_mt[20, 24]", &self.attacked_mt)
            .field("damage[24, 26]", &self.damage)
            .field("level[26, 28]", &self.level)
            .field("count[28, 30]", &self.count)
            .field("action[30, 31]", &self.action)
        .finish()
    }
}

pub struct PacketZcNotifySkillPosition {
    pub packet_id: u16,
    pub skid: u16,
    pub aid: u32,
    pub target_id: u32,
    pub start_time: u32,
    pub attack_mt: u32,
    pub attacked_mt: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub damage: u16,
    pub level: u16,
    pub count: u16,
    pub action: char,
}

impl PacketId for PacketZcNotifySkillPosition {
    fn id(&self) -> &str {
       "0x0115"
    }
}

impl Debug for PacketZcNotifySkillPosition {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifySkillPosition")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("aid[4, 8]", &self.aid)
            .field("target_id[8, 12]", &self.target_id)
            .field("start_time[12, 16]", &self.start_time)
            .field("attack_mt[16, 20]", &self.attack_mt)
            .field("attacked_mt[20, 24]", &self.attacked_mt)
            .field("x_pos[24, 26]", &self.x_pos)
            .field("y_pos[26, 28]", &self.y_pos)
            .field("damage[28, 30]", &self.damage)
            .field("level[30, 32]", &self.level)
            .field("count[32, 34]", &self.count)
            .field("action[34, 35]", &self.action)
        .finish()
    }
}

pub struct PacketCzUseSkillToground {
    pub packet_id: u16,
    pub selected_level: u16,
    pub skid: u16,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketCzUseSkillToground {
    fn id(&self) -> &str {
       "0x0116"
    }
}

impl Debug for PacketCzUseSkillToground {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseSkillToground")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("selected_level[2, 4]", &self.selected_level)
            .field("skid[4, 6]", &self.skid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
        .finish()
    }
}

pub struct PacketZcNotifyGroundskill {
    pub packet_id: u16,
    pub skid: u16,
    pub aid: u32,
    pub level: u16,
    pub x_pos: u16,
    pub y_pos: u16,
    pub start_time: u32,
}

impl PacketId for PacketZcNotifyGroundskill {
    fn id(&self) -> &str {
       "0x0117"
    }
}

impl Debug for PacketZcNotifyGroundskill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyGroundskill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("aid[4, 8]", &self.aid)
            .field("level[8, 10]", &self.level)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("start_time[14, 18]", &self.start_time)
        .finish()
    }
}

pub struct PacketCzCancelLockon {
    pub packet_id: u16,
}

impl PacketId for PacketCzCancelLockon {
    fn id(&self) -> &str {
       "0x0118"
    }
}

impl Debug for PacketCzCancelLockon {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCancelLockon")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcStateChange {
    pub packet_id: u16,
    pub aid: u32,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub is_pkmode_on: bool,
}

impl PacketId for PacketZcStateChange {
    fn id(&self) -> &str {
       "0x0119"
    }
}

impl Debug for PacketZcStateChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStateChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("body_state[6, 8]", &self.body_state)
            .field("health_state[8, 10]", &self.health_state)
            .field("effect_state[10, 12]", &self.effect_state)
            .field("is_pkmode_on[12, 13]", &self.is_pkmode_on)
        .finish()
    }
}

pub struct PacketZcUseSkill {
    pub packet_id: u16,
    pub skid: u16,
    pub level: u16,
    pub target_aid: u32,
    pub src_aid: u32,
    pub result: bool,
}

impl PacketId for PacketZcUseSkill {
    fn id(&self) -> &str {
       "0x011a"
    }
}

impl Debug for PacketZcUseSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUseSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("level[4, 6]", &self.level)
            .field("target_aid[6, 10]", &self.target_aid)
            .field("src_aid[10, 14]", &self.src_aid)
            .field("result[14, 15]", &self.result)
        .finish()
    }
}

pub struct PacketCzSelectWarppoint {
    pub packet_id: u16,
    pub skid: u16,
    pub map_name: String,
}

impl PacketId for PacketCzSelectWarppoint {
    fn id(&self) -> &str {
       "0x011b"
    }
}

impl Debug for PacketCzSelectWarppoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSelectWarppoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("map_name[4, 20]", &self.map_name)
        .finish()
    }
}

pub struct PacketZcWarplist {
    pub packet_id: u16,
    pub skid: u16,
    pub map_name: String,
}

impl PacketId for PacketZcWarplist {
    fn id(&self) -> &str {
       "0x011c"
    }
}

impl Debug for PacketZcWarplist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcWarplist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("map_name[4, 8]", &self.map_name)
        .finish()
    }
}

pub struct PacketCzRememberWarppoint {
    pub packet_id: u16,
}

impl PacketId for PacketCzRememberWarppoint {
    fn id(&self) -> &str {
       "0x011d"
    }
}

impl Debug for PacketCzRememberWarppoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRememberWarppoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcAckRememberWarppoint {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketZcAckRememberWarppoint {
    fn id(&self) -> &str {
       "0x011e"
    }
}

impl Debug for PacketZcAckRememberWarppoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckRememberWarppoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketZcSkillEntry {
    pub packet_id: u16,
    pub aid: u32,
    pub creator_aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub job: char,
    pub is_visible: bool,
}

impl PacketId for PacketZcSkillEntry {
    fn id(&self) -> &str {
       "0x011f"
    }
}

impl Debug for PacketZcSkillEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("creator_aid[6, 10]", &self.creator_aid)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("job[14, 15]", &self.job)
            .field("is_visible[15, 16]", &self.is_visible)
        .finish()
    }
}

pub struct PacketZcSkillDisappear {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcSkillDisappear {
    fn id(&self) -> &str {
       "0x0120"
    }
}

impl Debug for PacketZcSkillDisappear {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillDisappear")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcNotifyCartitemCountinfo {
    pub packet_id: u16,
    pub cur_count: u16,
    pub max_count: u16,
    pub cur_weight: u32,
    pub max_weight: u32,
}

impl PacketId for PacketZcNotifyCartitemCountinfo {
    fn id(&self) -> &str {
       "0x0121"
    }
}

impl Debug for PacketZcNotifyCartitemCountinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyCartitemCountinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("cur_count[2, 4]", &self.cur_count)
            .field("max_count[4, 6]", &self.max_count)
            .field("cur_weight[6, 10]", &self.cur_weight)
            .field("max_weight[10, 14]", &self.max_weight)
        .finish()
    }
}

pub struct PacketZcCartEquipmentItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo>,
}

impl PacketId for PacketZcCartEquipmentItemlist {
    fn id(&self) -> &str {
       "0x0122"
    }
}

impl Debug for PacketZcCartEquipmentItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartEquipmentItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 24]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCartNormalItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo>,
}

impl PacketId for PacketZcCartNormalItemlist {
    fn id(&self) -> &str {
       "0x0123"
    }
}

impl Debug for PacketZcCartNormalItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartNormalItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 14]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcAddItemToCart {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddItemToCart {
    fn id(&self) -> &str {
       "0x0124"
    }
}

impl Debug for PacketZcAddItemToCart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddItemToCart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
            .field("itid[8, 10]", &self.itid)
            .field("is_identified[10, 11]", &self.is_identified)
            .field("is_damaged[11, 12]", &self.is_damaged)
            .field("refining_level[12, 13]", &self.refining_level)
            .field("slot[13, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketZcDeleteItemFromCart {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketZcDeleteItemFromCart {
    fn id(&self) -> &str {
       "0x0125"
    }
}

impl Debug for PacketZcDeleteItemFromCart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteItemFromCart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzMoveItemFromBodyToCart {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromBodyToCart {
    fn id(&self) -> &str {
       "0x0126"
    }
}

impl Debug for PacketCzMoveItemFromBodyToCart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromBodyToCart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzMoveItemFromCartToBody {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromCartToBody {
    fn id(&self) -> &str {
       "0x0127"
    }
}

impl Debug for PacketCzMoveItemFromCartToBody {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromCartToBody")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzMoveItemFromStoreToCart {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromStoreToCart {
    fn id(&self) -> &str {
       "0x0128"
    }
}

impl Debug for PacketCzMoveItemFromStoreToCart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromStoreToCart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzMoveItemFromCartToStore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMoveItemFromCartToStore {
    fn id(&self) -> &str {
       "0x0129"
    }
}

impl Debug for PacketCzMoveItemFromCartToStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMoveItemFromCartToStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzReqCartoff {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqCartoff {
    fn id(&self) -> &str {
       "0x012a"
    }
}

impl Debug for PacketCzReqCartoff {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqCartoff")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcCartoff {
    pub packet_id: u16,
}

impl PacketId for PacketZcCartoff {
    fn id(&self) -> &str {
       "0x012b"
    }
}

impl Debug for PacketZcCartoff {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartoff")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcAckAdditemToCart {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckAdditemToCart {
    fn id(&self) -> &str {
       "0x012c"
    }
}

impl Debug for PacketZcAckAdditemToCart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckAdditemToCart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcOpenstore {
    pub packet_id: u16,
    pub itemcount: u16,
}

impl PacketId for PacketZcOpenstore {
    fn id(&self) -> &str {
       "0x012d"
    }
}

impl Debug for PacketZcOpenstore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOpenstore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itemcount[2, 4]", &self.itemcount)
        .finish()
    }
}

pub struct PacketCzReqClosestore {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqClosestore {
    fn id(&self) -> &str {
       "0x012e"
    }
}

impl Debug for PacketCzReqClosestore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqClosestore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqOpenstore {
    pub packet_id: u16,
    pub packet_length: u16,
    pub store_name: String,
    pub store_list: Vec<StoreItem>,
}

impl PacketId for PacketCzReqOpenstore {
    fn id(&self) -> &str {
       "0x012f"
    }
}

impl Debug for PacketCzReqOpenstore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqOpenstore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("store_name[4, 84]", &self.store_name)
            .field("store_list[84, 92]", &self.store_list)
        .finish()
    }
}

pub struct PacketCzReqBuyFrommc {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqBuyFrommc {
    fn id(&self) -> &str {
       "0x0130"
    }
}

impl Debug for PacketCzReqBuyFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqBuyFrommc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcStoreEntry {
    pub packet_id: u16,
    pub maker_aid: u32,
    pub store_name: String,
}

impl PacketId for PacketZcStoreEntry {
    fn id(&self) -> &str {
       "0x0131"
    }
}

impl Debug for PacketZcStoreEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("maker_aid[2, 6]", &self.maker_aid)
            .field("store_name[6, 86]", &self.store_name)
        .finish()
    }
}

pub struct PacketZcDisappearEntry {
    pub packet_id: u16,
    pub maker_aid: u32,
}

impl PacketId for PacketZcDisappearEntry {
    fn id(&self) -> &str {
       "0x0132"
    }
}

impl Debug for PacketZcDisappearEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDisappearEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("maker_aid[2, 6]", &self.maker_aid)
        .finish()
    }
}

pub struct PacketZcPcPurchaseItemlistFrommc {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub item_list: Vec<PurchaseItemFrommc>,
}

impl PacketId for PacketZcPcPurchaseItemlistFrommc {
    fn id(&self) -> &str {
       "0x0133"
    }
}

impl Debug for PacketZcPcPurchaseItemlistFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseItemlistFrommc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("item_list[8, 30]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPcPurchaseItemlistFrommc {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub item_list: Vec<CzPurchaseItemFrommc>,
}

impl PacketId for PacketCzPcPurchaseItemlistFrommc {
    fn id(&self) -> &str {
       "0x0134"
    }
}

impl Debug for PacketCzPcPurchaseItemlistFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPcPurchaseItemlistFrommc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("item_list[8, 12]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcPcPurchaseResultFrommc {
    pub packet_id: u16,
    pub index: u16,
    pub curcount: u16,
    pub result: char,
}

impl PacketId for PacketZcPcPurchaseResultFrommc {
    fn id(&self) -> &str {
       "0x0135"
    }
}

impl Debug for PacketZcPcPurchaseResultFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseResultFrommc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("curcount[4, 6]", &self.curcount)
            .field("result[6, 7]", &self.result)
        .finish()
    }
}

pub struct PacketZcPcPurchaseMyitemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub item_list: Vec<PurchaseMyitem>,
}

impl PacketId for PacketZcPcPurchaseMyitemlist {
    fn id(&self) -> &str {
       "0x0136"
    }
}

impl Debug for PacketZcPcPurchaseMyitemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseMyitemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("item_list[8, 30]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcDeleteitemFromMcstore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
}

impl PacketId for PacketZcDeleteitemFromMcstore {
    fn id(&self) -> &str {
       "0x0137"
    }
}

impl Debug for PacketZcDeleteitemFromMcstore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteitemFromMcstore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketCzPkmodeChange {
    pub packet_id: u16,
    pub is_turn_on: bool,
}

impl PacketId for PacketCzPkmodeChange {
    fn id(&self) -> &str {
       "0x0138"
    }
}

impl Debug for PacketCzPkmodeChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPkmodeChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("is_turn_on[2, 3]", &self.is_turn_on)
        .finish()
    }
}

pub struct PacketZcAttackFailureForDistance {
    pub packet_id: u16,
    pub target_aid: u32,
    pub target_xpos: u16,
    pub target_ypos: u16,
    pub x_pos: u16,
    pub y_pos: u16,
    pub current_att_range: u16,
}

impl PacketId for PacketZcAttackFailureForDistance {
    fn id(&self) -> &str {
       "0x0139"
    }
}

impl Debug for PacketZcAttackFailureForDistance {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAttackFailureForDistance")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_aid[2, 6]", &self.target_aid)
            .field("target_xpos[6, 8]", &self.target_xpos)
            .field("target_ypos[8, 10]", &self.target_ypos)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("current_att_range[14, 16]", &self.current_att_range)
        .finish()
    }
}

pub struct PacketZcAttackRange {
    pub packet_id: u16,
    pub current_att_range: u16,
}

impl PacketId for PacketZcAttackRange {
    fn id(&self) -> &str {
       "0x013a"
    }
}

impl Debug for PacketZcAttackRange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAttackRange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("current_att_range[2, 4]", &self.current_att_range)
        .finish()
    }
}

pub struct PacketZcActionFailure {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketZcActionFailure {
    fn id(&self) -> &str {
       "0x013b"
    }
}

impl Debug for PacketZcActionFailure {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcActionFailure")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketZcEquipArrow {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketZcEquipArrow {
    fn id(&self) -> &str {
       "0x013c"
    }
}

impl Debug for PacketZcEquipArrow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipArrow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketZcRecovery {
    pub packet_id: u16,
    pub var_id: u16,
    pub amount: u16,
}

impl PacketId for PacketZcRecovery {
    fn id(&self) -> &str {
       "0x013d"
    }
}

impl Debug for PacketZcRecovery {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRecovery")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var_id[2, 4]", &self.var_id)
            .field("amount[4, 6]", &self.amount)
        .finish()
    }
}

pub struct PacketZcUseskillAck {
    pub packet_id: u16,
    pub aid: u32,
    pub target_id: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub skid: u16,
    pub property: u32,
    pub delay_time: u32,
}

impl PacketId for PacketZcUseskillAck {
    fn id(&self) -> &str {
       "0x013e"
    }
}

impl Debug for PacketZcUseskillAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUseskillAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("target_id[6, 10]", &self.target_id)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("skid[14, 16]", &self.skid)
            .field("property[16, 20]", &self.property)
            .field("delay_time[20, 24]", &self.delay_time)
        .finish()
    }
}

pub struct PacketCzItemCreate {
    pub packet_id: u16,
    pub item_name: String,
}

impl PacketId for PacketCzItemCreate {
    fn id(&self) -> &str {
       "0x013f"
    }
}

impl Debug for PacketCzItemCreate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzItemCreate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("item_name[2, 26]", &self.item_name)
        .finish()
    }
}

pub struct PacketCzMovetoMap {
    pub packet_id: u16,
    pub map_name: String,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketCzMovetoMap {
    fn id(&self) -> &str {
       "0x0140"
    }
}

impl Debug for PacketCzMovetoMap {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMovetoMap")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("map_name[2, 18]", &self.map_name)
            .field("x_pos[18, 20]", &self.x_pos)
            .field("y_pos[20, 22]", &self.y_pos)
        .finish()
    }
}

pub struct PacketZcCouplestatus {
    pub packet_id: u16,
    pub status_type: u32,
    pub default_status: u32,
    pub plus_status: u32,
}

impl PacketId for PacketZcCouplestatus {
    fn id(&self) -> &str {
       "0x0141"
    }
}

impl Debug for PacketZcCouplestatus {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCouplestatus")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("status_type[2, 6]", &self.status_type)
            .field("default_status[6, 10]", &self.default_status)
            .field("plus_status[10, 14]", &self.plus_status)
        .finish()
    }
}

pub struct PacketZcOpenEditdlg {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketZcOpenEditdlg {
    fn id(&self) -> &str {
       "0x0142"
    }
}

impl Debug for PacketZcOpenEditdlg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOpenEditdlg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketCzInputEditdlg {
    pub packet_id: u16,
    pub naid: u32,
    pub value: u32,
}

impl PacketId for PacketCzInputEditdlg {
    fn id(&self) -> &str {
       "0x0143"
    }
}

impl Debug for PacketCzInputEditdlg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzInputEditdlg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
            .field("value[6, 10]", &self.value)
        .finish()
    }
}

pub struct PacketZcCompass {
    pub packet_id: u16,
    pub naid: u32,
    pub type_: u32,
    pub x_pos: u32,
    pub y_pos: u32,
    pub id: char,
    pub color: u32,
}

impl PacketId for PacketZcCompass {
    fn id(&self) -> &str {
       "0x0144"
    }
}

impl Debug for PacketZcCompass {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCompass")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
            .field("type_[6, 10]", &self.type_)
            .field("x_pos[10, 14]", &self.x_pos)
            .field("y_pos[14, 18]", &self.y_pos)
            .field("id[18, 19]", &self.id)
            .field("color[19, 23]", &self.color)
        .finish()
    }
}

pub struct PacketZcShowImage {
    pub packet_id: u16,
    pub image_name: String,
    pub type_: char,
}

impl PacketId for PacketZcShowImage {
    fn id(&self) -> &str {
       "0x0145"
    }
}

impl Debug for PacketZcShowImage {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShowImage")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("image_name[2, 18]", &self.image_name)
            .field("type_[18, 19]", &self.type_)
        .finish()
    }
}

pub struct PacketCzCloseDialog {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketCzCloseDialog {
    fn id(&self) -> &str {
       "0x0146"
    }
}

impl Debug for PacketCzCloseDialog {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCloseDialog")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketZcAutorunSkill {
    pub packet_id: u16,
    pub data: SKILLINFO,
}

impl PacketId for PacketZcAutorunSkill {
    fn id(&self) -> &str {
       "0x0147"
    }
}

impl Debug for PacketZcAutorunSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAutorunSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("data[2, ?]", &self.data)
        .finish()
    }
}

pub struct PacketZcResurrection {
    pub packet_id: u16,
    pub aid: u32,
    pub type_: u16,
}

impl PacketId for PacketZcResurrection {
    fn id(&self) -> &str {
       "0x0148"
    }
}

impl Debug for PacketZcResurrection {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcResurrection")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("type_[6, 8]", &self.type_)
        .finish()
    }
}

pub struct PacketCzReqGiveMannerPoint {
    pub packet_id: u16,
    pub other_aid: u32,
    pub type_: char,
    pub point: u16,
}

impl PacketId for PacketCzReqGiveMannerPoint {
    fn id(&self) -> &str {
       "0x0149"
    }
}

impl Debug for PacketCzReqGiveMannerPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGiveMannerPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("other_aid[2, 6]", &self.other_aid)
            .field("type_[6, 7]", &self.type_)
            .field("point[7, 9]", &self.point)
        .finish()
    }
}

pub struct PacketZcAckGiveMannerPoint {
    pub packet_id: u16,
    pub result: u32,
}

impl PacketId for PacketZcAckGiveMannerPoint {
    fn id(&self) -> &str {
       "0x014a"
    }
}

impl Debug for PacketZcAckGiveMannerPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckGiveMannerPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 6]", &self.result)
        .finish()
    }
}

pub struct PacketZcNotifyMannerPointGiven {
    pub packet_id: u16,
    pub type_: char,
    pub other_char_name: String,
}

impl PacketId for PacketZcNotifyMannerPointGiven {
    fn id(&self) -> &str {
       "0x014b"
    }
}

impl Debug for PacketZcNotifyMannerPointGiven {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMannerPointGiven")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("other_char_name[3, 27]", &self.other_char_name)
        .finish()
    }
}

pub struct PacketZcMyguildBasicInfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub related_guild_list: Vec<RelatedGuild>,
}

impl PacketId for PacketZcMyguildBasicInfo {
    fn id(&self) -> &str {
       "0x014c"
    }
}

impl Debug for PacketZcMyguildBasicInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMyguildBasicInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("related_guild_list[4, 36]", &self.related_guild_list)
        .finish()
    }
}

pub struct PacketCzReqGuildMenuinterface {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqGuildMenuinterface {
    fn id(&self) -> &str {
       "0x014d"
    }
}

impl Debug for PacketCzReqGuildMenuinterface {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGuildMenuinterface")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcAckGuildMenuinterface {
    pub packet_id: u16,
    pub guild_memu_flag: u32,
}

impl PacketId for PacketZcAckGuildMenuinterface {
    fn id(&self) -> &str {
       "0x014e"
    }
}

impl Debug for PacketZcAckGuildMenuinterface {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckGuildMenuinterface")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("guild_memu_flag[2, 6]", &self.guild_memu_flag)
        .finish()
    }
}

pub struct PacketCzReqGuildMenu {
    pub packet_id: u16,
    pub type_: u32,
}

impl PacketId for PacketCzReqGuildMenu {
    fn id(&self) -> &str {
       "0x014f"
    }
}

impl Debug for PacketCzReqGuildMenu {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGuildMenu")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
        .finish()
    }
}

pub struct PacketZcGuildInfo {
    pub packet_id: u16,
    pub gdid: u32,
    pub level: u32,
    pub user_num: u32,
    pub max_user_num: u32,
    pub user_average_level: u32,
    pub exp: u32,
    pub max_exp: u32,
    pub point: u32,
    pub honor: u32,
    pub virtue: u32,
    pub emblem_version: u32,
    pub guildname: String,
    pub master_name: String,
    pub manage_land: String,
}

impl PacketId for PacketZcGuildInfo {
    fn id(&self) -> &str {
       "0x0150"
    }
}

impl Debug for PacketZcGuildInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("level[6, 10]", &self.level)
            .field("user_num[10, 14]", &self.user_num)
            .field("max_user_num[14, 18]", &self.max_user_num)
            .field("user_average_level[18, 22]", &self.user_average_level)
            .field("exp[22, 26]", &self.exp)
            .field("max_exp[26, 30]", &self.max_exp)
            .field("point[30, 34]", &self.point)
            .field("honor[34, 38]", &self.honor)
            .field("virtue[38, 42]", &self.virtue)
            .field("emblem_version[42, 46]", &self.emblem_version)
            .field("guildname[46, 70]", &self.guildname)
            .field("master_name[70, 94]", &self.master_name)
            .field("manage_land[94, 110]", &self.manage_land)
        .finish()
    }
}

pub struct PacketCzReqGuildEmblemImg {
    pub packet_id: u16,
    pub gdid: u32,
}

impl PacketId for PacketCzReqGuildEmblemImg {
    fn id(&self) -> &str {
       "0x0151"
    }
}

impl Debug for PacketCzReqGuildEmblemImg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGuildEmblemImg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
        .finish()
    }
}

pub struct PacketZcGuildEmblemImg {
    pub packet_id: u16,
    pub packet_length: u16,
    pub gdid: u32,
    pub emblem_version: u32,
    pub img: String,
}

impl PacketId for PacketZcGuildEmblemImg {
    fn id(&self) -> &str {
       "0x0152"
    }
}

impl Debug for PacketZcGuildEmblemImg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildEmblemImg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("gdid[4, 8]", &self.gdid)
            .field("emblem_version[8, 12]", &self.emblem_version)
            .field("img[12, ?]", &self.img)
        .finish()
    }
}

pub struct PacketCzRegisterGuildEmblemImg {
    pub packet_id: u16,
    pub packet_length: u16,
    pub img: String,
}

impl PacketId for PacketCzRegisterGuildEmblemImg {
    fn id(&self) -> &str {
       "0x0153"
    }
}

impl Debug for PacketCzRegisterGuildEmblemImg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRegisterGuildEmblemImg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("img[4, ?]", &self.img)
        .finish()
    }
}

pub struct PacketZcMembermgrInfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_info: Vec<GuildMembermgrInfo>,
}

impl PacketId for PacketZcMembermgrInfo {
    fn id(&self) -> &str {
       "0x0154"
    }
}

impl Debug for PacketZcMembermgrInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMembermgrInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_info[4, 108]", &self.member_info)
        .finish()
    }
}

pub struct PacketCzReqChangeMemberpos {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_info: Vec<MemberPositionInfo>,
}

impl PacketId for PacketCzReqChangeMemberpos {
    fn id(&self) -> &str {
       "0x0155"
    }
}

impl Debug for PacketCzReqChangeMemberpos {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqChangeMemberpos")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_info[4, 16]", &self.member_info)
        .finish()
    }
}

pub struct PacketZcAckReqChangeMembers {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_info: Vec<MemberPositionInfo>,
}

impl PacketId for PacketZcAckReqChangeMembers {
    fn id(&self) -> &str {
       "0x0156"
    }
}

impl Debug for PacketZcAckReqChangeMembers {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqChangeMembers")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_info[4, 16]", &self.member_info)
        .finish()
    }
}

pub struct PacketCzReqOpenMemberInfo {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqOpenMemberInfo {
    fn id(&self) -> &str {
       "0x0157"
    }
}

impl Debug for PacketCzReqOpenMemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqOpenMemberInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckOpenMemberInfo {
    pub packet_id: u16,
}

impl PacketId for PacketZcAckOpenMemberInfo {
    fn id(&self) -> &str {
       "0x0158"
    }
}

impl Debug for PacketZcAckOpenMemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckOpenMemberInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqLeaveGuild {
    pub packet_id: u16,
    pub gdid: u32,
    pub aid: u32,
    pub gid: u32,
    pub reason_desc: String,
}

impl PacketId for PacketCzReqLeaveGuild {
    fn id(&self) -> &str {
       "0x0159"
    }
}

impl Debug for PacketCzReqLeaveGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqLeaveGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("aid[6, 10]", &self.aid)
            .field("gid[10, 14]", &self.gid)
            .field("reason_desc[14, 54]", &self.reason_desc)
        .finish()
    }
}

pub struct PacketZcAckLeaveGuild {
    pub packet_id: u16,
    pub char_name: String,
    pub reason_desc: String,
}

impl PacketId for PacketZcAckLeaveGuild {
    fn id(&self) -> &str {
       "0x015a"
    }
}

impl Debug for PacketZcAckLeaveGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckLeaveGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_name[2, 26]", &self.char_name)
            .field("reason_desc[26, 66]", &self.reason_desc)
        .finish()
    }
}

pub struct PacketCzReqBanGuild {
    pub packet_id: u16,
    pub gdid: u32,
    pub aid: u32,
    pub gid: u32,
    pub reason_desc: String,
}

impl PacketId for PacketCzReqBanGuild {
    fn id(&self) -> &str {
       "0x015b"
    }
}

impl Debug for PacketCzReqBanGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqBanGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("aid[6, 10]", &self.aid)
            .field("gid[10, 14]", &self.gid)
            .field("reason_desc[14, 54]", &self.reason_desc)
        .finish()
    }
}

pub struct PacketZcAckBanGuild {
    pub packet_id: u16,
    pub char_name: String,
    pub reason_desc: String,
    pub account: String,
}

impl PacketId for PacketZcAckBanGuild {
    fn id(&self) -> &str {
       "0x015c"
    }
}

impl Debug for PacketZcAckBanGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckBanGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_name[2, 26]", &self.char_name)
            .field("reason_desc[26, 66]", &self.reason_desc)
            .field("account[66, 90]", &self.account)
        .finish()
    }
}

pub struct PacketCzReqDisorganizeGuild {
    pub packet_id: u16,
    pub key: String,
}

impl PacketId for PacketCzReqDisorganizeGuild {
    fn id(&self) -> &str {
       "0x015d"
    }
}

impl Debug for PacketCzReqDisorganizeGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqDisorganizeGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("key[2, 42]", &self.key)
        .finish()
    }
}

pub struct PacketZcAckDisorganizeGuildResult {
    pub packet_id: u16,
    pub reason: u32,
}

impl PacketId for PacketZcAckDisorganizeGuildResult {
    fn id(&self) -> &str {
       "0x015e"
    }
}

impl Debug for PacketZcAckDisorganizeGuildResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckDisorganizeGuildResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("reason[2, 6]", &self.reason)
        .finish()
    }
}

pub struct PacketZcAckDisorganizeGuild {
    pub packet_id: u16,
    pub reason_desc: String,
}

impl PacketId for PacketZcAckDisorganizeGuild {
    fn id(&self) -> &str {
       "0x015f"
    }
}

impl Debug for PacketZcAckDisorganizeGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckDisorganizeGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("reason_desc[2, 42]", &self.reason_desc)
        .finish()
    }
}

pub struct PacketZcPositionInfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_info: Vec<GuildMemberPositionInfo>,
}

impl PacketId for PacketZcPositionInfo {
    fn id(&self) -> &str {
       "0x0160"
    }
}

impl Debug for PacketZcPositionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPositionInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_info[4, 20]", &self.member_info)
        .finish()
    }
}

pub struct PacketCzRegChangeGuildPositioninfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_list: Vec<GuildRegPositionInfo>,
}

impl PacketId for PacketCzRegChangeGuildPositioninfo {
    fn id(&self) -> &str {
       "0x0161"
    }
}

impl Debug for PacketCzRegChangeGuildPositioninfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRegChangeGuildPositioninfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_list[4, 44]", &self.member_list)
        .finish()
    }
}

pub struct PacketZcGuildSkillinfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub skill_point: u16,
    pub skill_list: Vec<SKILLINFO>,
}

impl PacketId for PacketZcGuildSkillinfo {
    fn id(&self) -> &str {
       "0x0162"
    }
}

impl Debug for PacketZcGuildSkillinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildSkillinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("skill_point[4, 6]", &self.skill_point)
            .field("skill_list[6, 43]", &self.skill_list)
        .finish()
    }
}

pub struct PacketZcBanList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub ban_list: Vec<GuildBanInfo>,
}

impl PacketId for PacketZcBanList {
    fn id(&self) -> &str {
       "0x0163"
    }
}

impl Debug for PacketZcBanList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBanList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("ban_list[4, 92]", &self.ban_list)
        .finish()
    }
}

pub struct PacketZcOtherGuildList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub guild_list: Vec<OtherGuildInfo>,
}

impl PacketId for PacketZcOtherGuildList {
    fn id(&self) -> &str {
       "0x0164"
    }
}

impl Debug for PacketZcOtherGuildList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOtherGuildList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("guild_list[4, 40]", &self.guild_list)
        .finish()
    }
}

pub struct PacketCzReqMakeGuild {
    pub packet_id: u16,
    pub gid: u32,
    pub gname: String,
}

impl PacketId for PacketCzReqMakeGuild {
    fn id(&self) -> &str {
       "0x0165"
    }
}

impl Debug for PacketCzReqMakeGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqMakeGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("gname[6, 30]", &self.gname)
        .finish()
    }
}

pub struct PacketZcPositionIdNameInfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_list: Vec<MemberPositionIdNameInfo>,
}

impl PacketId for PacketZcPositionIdNameInfo {
    fn id(&self) -> &str {
       "0x0166"
    }
}

impl Debug for PacketZcPositionIdNameInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPositionIdNameInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_list[4, 32]", &self.member_list)
        .finish()
    }
}

pub struct PacketZcResultMakeGuild {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcResultMakeGuild {
    fn id(&self) -> &str {
       "0x0167"
    }
}

impl Debug for PacketZcResultMakeGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcResultMakeGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqJoinGuild {
    pub packet_id: u16,
    pub aid: u32,
    pub my_aid: u32,
    pub my_gid: u32,
}

impl PacketId for PacketCzReqJoinGuild {
    fn id(&self) -> &str {
       "0x0168"
    }
}

impl Debug for PacketCzReqJoinGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqJoinGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("my_aid[6, 10]", &self.my_aid)
            .field("my_gid[10, 14]", &self.my_gid)
        .finish()
    }
}

pub struct PacketZcAckReqJoinGuild {
    pub packet_id: u16,
    pub answer: char,
}

impl PacketId for PacketZcAckReqJoinGuild {
    fn id(&self) -> &str {
       "0x0169"
    }
}

impl Debug for PacketZcAckReqJoinGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqJoinGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("answer[2, 3]", &self.answer)
        .finish()
    }
}

pub struct PacketZcReqJoinGuild {
    pub packet_id: u16,
    pub gdid: u32,
    pub guild_name: String,
}

impl PacketId for PacketZcReqJoinGuild {
    fn id(&self) -> &str {
       "0x016a"
    }
}

impl Debug for PacketZcReqJoinGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqJoinGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("guild_name[6, 30]", &self.guild_name)
        .finish()
    }
}

pub struct PacketCzJoinGuild {
    pub packet_id: u16,
    pub gdid: u32,
    pub answer: u32,
}

impl PacketId for PacketCzJoinGuild {
    fn id(&self) -> &str {
       "0x016b"
    }
}

impl Debug for PacketCzJoinGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzJoinGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("answer[6, 10]", &self.answer)
        .finish()
    }
}

pub struct PacketZcUpdateGdid {
    pub packet_id: u16,
    pub gdid: u32,
    pub emblem_version: u32,
    pub right: u32,
    pub is_master: bool,
    pub inter_sid: u32,
    pub gname: String,
}

impl PacketId for PacketZcUpdateGdid {
    fn id(&self) -> &str {
       "0x016c"
    }
}

impl Debug for PacketZcUpdateGdid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateGdid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("emblem_version[6, 10]", &self.emblem_version)
            .field("right[10, 14]", &self.right)
            .field("is_master[14, 15]", &self.is_master)
            .field("inter_sid[15, 19]", &self.inter_sid)
            .field("gname[19, 43]", &self.gname)
        .finish()
    }
}

pub struct PacketZcUpdateCharstat {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub status: u32,
}

impl PacketId for PacketZcUpdateCharstat {
    fn id(&self) -> &str {
       "0x016d"
    }
}

impl Debug for PacketZcUpdateCharstat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateCharstat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("status[10, 14]", &self.status)
        .finish()
    }
}

pub struct PacketCzGuildNotice {
    pub packet_id: u16,
    pub gdid: u32,
    pub subject: String,
    pub notice: String,
}

impl PacketId for PacketCzGuildNotice {
    fn id(&self) -> &str {
       "0x016e"
    }
}

impl Debug for PacketCzGuildNotice {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGuildNotice")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("subject[6, 66]", &self.subject)
            .field("notice[66, 186]", &self.notice)
        .finish()
    }
}

pub struct PacketZcGuildNotice {
    pub packet_id: u16,
    pub subject: String,
    pub notice: String,
}

impl PacketId for PacketZcGuildNotice {
    fn id(&self) -> &str {
       "0x016f"
    }
}

impl Debug for PacketZcGuildNotice {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildNotice")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("subject[2, 62]", &self.subject)
            .field("notice[62, 182]", &self.notice)
        .finish()
    }
}

pub struct PacketCzReqAllyGuild {
    pub packet_id: u16,
    pub aid: u32,
    pub my_aid: u32,
    pub my_gid: u32,
}

impl PacketId for PacketCzReqAllyGuild {
    fn id(&self) -> &str {
       "0x0170"
    }
}

impl Debug for PacketCzReqAllyGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqAllyGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("my_aid[6, 10]", &self.my_aid)
            .field("my_gid[10, 14]", &self.my_gid)
        .finish()
    }
}

pub struct PacketZcReqAllyGuild {
    pub packet_id: u16,
    pub other_aid: u32,
    pub guild_name: String,
}

impl PacketId for PacketZcReqAllyGuild {
    fn id(&self) -> &str {
       "0x0171"
    }
}

impl Debug for PacketZcReqAllyGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqAllyGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("other_aid[2, 6]", &self.other_aid)
            .field("guild_name[6, 30]", &self.guild_name)
        .finish()
    }
}

pub struct PacketCzAllyGuild {
    pub packet_id: u16,
    pub other_aid: u32,
    pub answer: u32,
}

impl PacketId for PacketCzAllyGuild {
    fn id(&self) -> &str {
       "0x0172"
    }
}

impl Debug for PacketCzAllyGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAllyGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("other_aid[2, 6]", &self.other_aid)
            .field("answer[6, 10]", &self.answer)
        .finish()
    }
}

pub struct PacketZcAckReqAllyGuild {
    pub packet_id: u16,
    pub answer: char,
}

impl PacketId for PacketZcAckReqAllyGuild {
    fn id(&self) -> &str {
       "0x0173"
    }
}

impl Debug for PacketZcAckReqAllyGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqAllyGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("answer[2, 3]", &self.answer)
        .finish()
    }
}

pub struct PacketZcAckChangeGuildPositioninfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub member_list: Vec<GuildRegPositionInfo>,
}

impl PacketId for PacketZcAckChangeGuildPositioninfo {
    fn id(&self) -> &str {
       "0x0174"
    }
}

impl Debug for PacketZcAckChangeGuildPositioninfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckChangeGuildPositioninfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("member_list[4, 34]", &self.member_list)
        .finish()
    }
}

pub struct PacketCzReqGuildMemberInfo {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketCzReqGuildMemberInfo {
    fn id(&self) -> &str {
       "0x0175"
    }
}

impl Debug for PacketCzReqGuildMemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGuildMemberInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketZcAckGuildMemberInfo {
    pub packet_id: u16,
    pub info: GuildMemberInfo,
}

impl PacketId for PacketZcAckGuildMemberInfo {
    fn id(&self) -> &str {
       "0x0176"
    }
}

impl Debug for PacketZcAckGuildMemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckGuildMemberInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, ?]", &self.info)
        .finish()
    }
}

pub struct PacketZcItemidentifyList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub itidlist: u16,
}

impl PacketId for PacketZcItemidentifyList {
    fn id(&self) -> &str {
       "0x0177"
    }
}

impl Debug for PacketZcItemidentifyList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemidentifyList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("itidlist[4, 6]", &self.itidlist)
        .finish()
    }
}

pub struct PacketCzReqItemidentify {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketCzReqItemidentify {
    fn id(&self) -> &str {
       "0x0178"
    }
}

impl Debug for PacketCzReqItemidentify {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqItemidentify")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketZcAckItemidentify {
    pub packet_id: u16,
    pub index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckItemidentify {
    fn id(&self) -> &str {
       "0x0179"
    }
}

impl Debug for PacketZcAckItemidentify {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckItemidentify")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqItemcompositionList {
    pub packet_id: u16,
    pub card_index: u16,
}

impl PacketId for PacketCzReqItemcompositionList {
    fn id(&self) -> &str {
       "0x017a"
    }
}

impl Debug for PacketCzReqItemcompositionList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqItemcompositionList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("card_index[2, 4]", &self.card_index)
        .finish()
    }
}

pub struct PacketZcItemcompositionList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub itidlist: u16,
}

impl PacketId for PacketZcItemcompositionList {
    fn id(&self) -> &str {
       "0x017b"
    }
}

impl Debug for PacketZcItemcompositionList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemcompositionList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("itidlist[4, 6]", &self.itidlist)
        .finish()
    }
}

pub struct PacketCzReqItemcomposition {
    pub packet_id: u16,
    pub card_index: u16,
    pub equip_index: u16,
}

impl PacketId for PacketCzReqItemcomposition {
    fn id(&self) -> &str {
       "0x017c"
    }
}

impl Debug for PacketCzReqItemcomposition {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqItemcomposition")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("card_index[2, 4]", &self.card_index)
            .field("equip_index[4, 6]", &self.equip_index)
        .finish()
    }
}

pub struct PacketZcAckItemcomposition {
    pub packet_id: u16,
    pub equip_index: u16,
    pub card_index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckItemcomposition {
    fn id(&self) -> &str {
       "0x017d"
    }
}

impl Debug for PacketZcAckItemcomposition {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckItemcomposition")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("equip_index[2, 4]", &self.equip_index)
            .field("card_index[4, 6]", &self.card_index)
            .field("result[6, 7]", &self.result)
        .finish()
    }
}

pub struct PacketCzGuildChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketCzGuildChat {
    fn id(&self) -> &str {
       "0x017e"
    }
}

impl Debug for PacketCzGuildChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGuildChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcGuildChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketZcGuildChat {
    fn id(&self) -> &str {
       "0x017f"
    }
}

impl Debug for PacketZcGuildChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketCzReqHostileGuild {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqHostileGuild {
    fn id(&self) -> &str {
       "0x0180"
    }
}

impl Debug for PacketCzReqHostileGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqHostileGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckReqHostileGuild {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAckReqHostileGuild {
    fn id(&self) -> &str {
       "0x0181"
    }
}

impl Debug for PacketZcAckReqHostileGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqHostileGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcMemberAdd {
    pub packet_id: u16,
    pub info: GuildMemberInfo,
}

impl PacketId for PacketZcMemberAdd {
    fn id(&self) -> &str {
       "0x0182"
    }
}

impl Debug for PacketZcMemberAdd {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemberAdd")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, ?]", &self.info)
        .finish()
    }
}

pub struct PacketCzReqDeleteRelatedGuild {
    pub packet_id: u16,
    pub opponent_gdid: u32,
    pub relation: u32,
}

impl PacketId for PacketCzReqDeleteRelatedGuild {
    fn id(&self) -> &str {
       "0x0183"
    }
}

impl Debug for PacketCzReqDeleteRelatedGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqDeleteRelatedGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("opponent_gdid[2, 6]", &self.opponent_gdid)
            .field("relation[6, 10]", &self.relation)
        .finish()
    }
}

pub struct PacketZcDeleteRelatedGuild {
    pub packet_id: u16,
    pub opponent_gdid: u32,
    pub relation: u32,
}

impl PacketId for PacketZcDeleteRelatedGuild {
    fn id(&self) -> &str {
       "0x0184"
    }
}

impl Debug for PacketZcDeleteRelatedGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteRelatedGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("opponent_gdid[2, 6]", &self.opponent_gdid)
            .field("relation[6, 10]", &self.relation)
        .finish()
    }
}

pub struct PacketZcAddRelatedGuild {
    pub packet_id: u16,
    pub info: RelatedGuildInfo,
}

impl PacketId for PacketZcAddRelatedGuild {
    fn id(&self) -> &str {
       "0x0185"
    }
}

impl Debug for PacketZcAddRelatedGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddRelatedGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, ?]", &self.info)
        .finish()
    }
}

pub struct PacketCollectordead {
    pub packet_id: u16,
    pub server_id: u32,
}

impl PacketId for PacketCollectordead {
    fn id(&self) -> &str {
       "0x0186"
    }
}

impl Debug for PacketCollectordead {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCollectordead")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("server_id[2, 6]", &self.server_id)
        .finish()
    }
}

pub struct PacketPing {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketPing {
    fn id(&self) -> &str {
       "0x0187"
    }
}

impl Debug for PacketPing {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketPing")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckItemrefining {
    pub packet_id: u16,
    pub result: u16,
    pub item_index: u16,
    pub refining_level: u16,
}

impl PacketId for PacketZcAckItemrefining {
    fn id(&self) -> &str {
       "0x0188"
    }
}

impl Debug for PacketZcAckItemrefining {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckItemrefining")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("item_index[4, 6]", &self.item_index)
            .field("refining_level[6, 8]", &self.refining_level)
        .finish()
    }
}

pub struct PacketZcNotifyMapinfo {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketZcNotifyMapinfo {
    fn id(&self) -> &str {
       "0x0189"
    }
}

impl Debug for PacketZcNotifyMapinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMapinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketCzReqDisconnect {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketCzReqDisconnect {
    fn id(&self) -> &str {
       "0x018a"
    }
}

impl Debug for PacketCzReqDisconnect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqDisconnect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketZcAckReqDisconnect {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketZcAckReqDisconnect {
    fn id(&self) -> &str {
       "0x018b"
    }
}

impl Debug for PacketZcAckReqDisconnect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqDisconnect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketZcMonsterInfo {
    pub packet_id: u16,
    pub job: u16,
    pub level: u16,
    pub size: u16,
    pub hp: u32,
    pub def: u16,
    pub race_type: u16,
    pub mdef_power: u16,
    pub property: u16,
    pub property_table: MonsterInfoElement,
}

impl PacketId for PacketZcMonsterInfo {
    fn id(&self) -> &str {
       "0x018c"
    }
}

impl Debug for PacketZcMonsterInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMonsterInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("job[2, 4]", &self.job)
            .field("level[4, 6]", &self.level)
            .field("size[6, 8]", &self.size)
            .field("hp[8, 12]", &self.hp)
            .field("def[12, 14]", &self.def)
            .field("race_type[14, 16]", &self.race_type)
            .field("mdef_power[16, 18]", &self.mdef_power)
            .field("property[18, 20]", &self.property)
            .field("property_table[20, ?]", &self.property_table)
        .finish()
    }
}

pub struct PacketZcMakableitemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub info: MakableitemInfo,
}

impl PacketId for PacketZcMakableitemlist {
    fn id(&self) -> &str {
       "0x018d"
    }
}

impl Debug for PacketZcMakableitemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMakableitemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("info[4, ?]", &self.info)
        .finish()
    }
}

pub struct PacketCzReqmakingitem {
    pub packet_id: u16,
    pub info: MakableitemInfo,
}

impl PacketId for PacketCzReqmakingitem {
    fn id(&self) -> &str {
       "0x018e"
    }
}

impl Debug for PacketCzReqmakingitem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqmakingitem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, ?]", &self.info)
        .finish()
    }
}

pub struct PacketZcAckReqmakingitem {
    pub packet_id: u16,
    pub result: u16,
    pub itid: u16,
}

impl PacketId for PacketZcAckReqmakingitem {
    fn id(&self) -> &str {
       "0x018f"
    }
}

impl Debug for PacketZcAckReqmakingitem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqmakingitem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("itid[4, 6]", &self.itid)
        .finish()
    }
}

pub struct PacketCzUseSkillTogroundWithtalkbox {
    pub packet_id: u16,
    pub selected_level: u16,
    pub skid: u16,
    pub x_pos: u16,
    pub y_pos: u16,
    pub contents: String,
}

impl PacketId for PacketCzUseSkillTogroundWithtalkbox {
    fn id(&self) -> &str {
       "0x0190"
    }
}

impl Debug for PacketCzUseSkillTogroundWithtalkbox {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseSkillTogroundWithtalkbox")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("selected_level[2, 4]", &self.selected_level)
            .field("skid[4, 6]", &self.skid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
            .field("contents[10, 90]", &self.contents)
        .finish()
    }
}

pub struct PacketZcTalkboxChatcontents {
    pub packet_id: u16,
    pub aid: u32,
    pub contents: String,
}

impl PacketId for PacketZcTalkboxChatcontents {
    fn id(&self) -> &str {
       "0x0191"
    }
}

impl Debug for PacketZcTalkboxChatcontents {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcTalkboxChatcontents")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("contents[6, 86]", &self.contents)
        .finish()
    }
}

pub struct PacketZcUpdateMapinfo {
    pub packet_id: u16,
    pub x_pos: u16,
    pub y_pos: u16,
    pub type_: u16,
    pub map_name: String,
}

impl PacketId for PacketZcUpdateMapinfo {
    fn id(&self) -> &str {
       "0x0192"
    }
}

impl Debug for PacketZcUpdateMapinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateMapinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("x_pos[2, 4]", &self.x_pos)
            .field("y_pos[4, 6]", &self.y_pos)
            .field("type_[6, 8]", &self.type_)
            .field("map_name[8, 24]", &self.map_name)
        .finish()
    }
}

pub struct PacketCzReqnameBygid {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketCzReqnameBygid {
    fn id(&self) -> &str {
       "0x0193"
    }
}

impl Debug for PacketCzReqnameBygid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqnameBygid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketZcAckReqnameBygid {
    pub packet_id: u16,
    pub gid: u32,
    pub cname: String,
}

impl PacketId for PacketZcAckReqnameBygid {
    fn id(&self) -> &str {
       "0x0194"
    }
}

impl Debug for PacketZcAckReqnameBygid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqnameBygid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("cname[6, 30]", &self.cname)
        .finish()
    }
}

pub struct PacketZcAckReqnameall {
    pub packet_id: u16,
    pub aid: u32,
    pub cname: String,
    pub pname: String,
    pub gname: String,
    pub rname: String,
}

impl PacketId for PacketZcAckReqnameall {
    fn id(&self) -> &str {
       "0x0195"
    }
}

impl Debug for PacketZcAckReqnameall {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckReqnameall")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("cname[6, 30]", &self.cname)
            .field("pname[30, 54]", &self.pname)
            .field("gname[54, 78]", &self.gname)
            .field("rname[78, 102]", &self.rname)
        .finish()
    }
}

pub struct PacketZcMsgStateChange {
    pub packet_id: u16,
    pub index: u16,
    pub aid: u32,
    pub state: bool,
}

impl PacketId for PacketZcMsgStateChange {
    fn id(&self) -> &str {
       "0x0196"
    }
}

impl Debug for PacketZcMsgStateChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMsgStateChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("aid[4, 8]", &self.aid)
            .field("state[8, 9]", &self.state)
        .finish()
    }
}

pub struct PacketCzReset {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketCzReset {
    fn id(&self) -> &str {
       "0x0197"
    }
}

impl Debug for PacketCzReset {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReset")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketCzChangeMaptype {
    pub packet_id: u16,
    pub x_pos: u16,
    pub y_pos: u16,
    pub type_: u16,
}

impl PacketId for PacketCzChangeMaptype {
    fn id(&self) -> &str {
       "0x0198"
    }
}

impl Debug for PacketCzChangeMaptype {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeMaptype")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("x_pos[2, 4]", &self.x_pos)
            .field("y_pos[4, 6]", &self.y_pos)
            .field("type_[6, 8]", &self.type_)
        .finish()
    }
}

pub struct PacketZcNotifyMapproperty {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketZcNotifyMapproperty {
    fn id(&self) -> &str {
       "0x0199"
    }
}

impl Debug for PacketZcNotifyMapproperty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMapproperty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketZcNotifyRanking {
    pub packet_id: u16,
    pub aid: u32,
    pub ranking: u32,
    pub total: u32,
}

impl PacketId for PacketZcNotifyRanking {
    fn id(&self) -> &str {
       "0x019a"
    }
}

impl Debug for PacketZcNotifyRanking {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyRanking")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("ranking[6, 10]", &self.ranking)
            .field("total[10, 14]", &self.total)
        .finish()
    }
}

pub struct PacketZcNotifyEffect {
    pub packet_id: u16,
    pub aid: u32,
    pub effect_id: u32,
}

impl PacketId for PacketZcNotifyEffect {
    fn id(&self) -> &str {
       "0x019b"
    }
}

impl Debug for PacketZcNotifyEffect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyEffect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("effect_id[6, 10]", &self.effect_id)
        .finish()
    }
}

pub struct PacketCzChangeEffectstate {
    pub packet_id: u16,
    pub effect_state: u32,
}

impl PacketId for PacketCzChangeEffectstate {
    fn id(&self) -> &str {
       "0x019d"
    }
}

impl Debug for PacketCzChangeEffectstate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeEffectstate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("effect_state[2, 6]", &self.effect_state)
        .finish()
    }
}

pub struct PacketZcStartCapture {
    pub packet_id: u16,
}

impl PacketId for PacketZcStartCapture {
    fn id(&self) -> &str {
       "0x019e"
    }
}

impl Debug for PacketZcStartCapture {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStartCapture")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzTrycaptureMonster {
    pub packet_id: u16,
    pub target_aid: u32,
}

impl PacketId for PacketCzTrycaptureMonster {
    fn id(&self) -> &str {
       "0x019f"
    }
}

impl Debug for PacketCzTrycaptureMonster {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzTrycaptureMonster")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_aid[2, 6]", &self.target_aid)
        .finish()
    }
}

pub struct PacketZcTrycaptureMonster {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcTrycaptureMonster {
    fn id(&self) -> &str {
       "0x01a0"
    }
}

impl Debug for PacketZcTrycaptureMonster {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcTrycaptureMonster")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzCommandPet {
    pub packet_id: u16,
    pub c_sub: char,
}

impl PacketId for PacketCzCommandPet {
    fn id(&self) -> &str {
       "0x01a1"
    }
}

impl Debug for PacketCzCommandPet {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCommandPet")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("c_sub[2, 3]", &self.c_sub)
        .finish()
    }
}

pub struct PacketZcPropertyPet {
    pub packet_id: u16,
    pub sz_name: String,
    pub b_modified: char,
    pub n_level: u16,
    pub n_fullness: u16,
    pub n_relationship: u16,
    pub itid: u16,
    pub job: u16,
}

impl PacketId for PacketZcPropertyPet {
    fn id(&self) -> &str {
       "0x01a2"
    }
}

impl Debug for PacketZcPropertyPet {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPropertyPet")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("sz_name[2, 26]", &self.sz_name)
            .field("b_modified[26, 27]", &self.b_modified)
            .field("n_level[27, 29]", &self.n_level)
            .field("n_fullness[29, 31]", &self.n_fullness)
            .field("n_relationship[31, 33]", &self.n_relationship)
            .field("itid[33, 35]", &self.itid)
            .field("job[35, 37]", &self.job)
        .finish()
    }
}

pub struct PacketZcFeedPet {
    pub packet_id: u16,
    pub c_ret: char,
    pub itid: u16,
}

impl PacketId for PacketZcFeedPet {
    fn id(&self) -> &str {
       "0x01a3"
    }
}

impl Debug for PacketZcFeedPet {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFeedPet")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("c_ret[2, 3]", &self.c_ret)
            .field("itid[3, 5]", &self.itid)
        .finish()
    }
}

pub struct PacketZcChangestatePet {
    pub packet_id: u16,
    pub type_: char,
    pub gid: u32,
    pub data: u32,
}

impl PacketId for PacketZcChangestatePet {
    fn id(&self) -> &str {
       "0x01a4"
    }
}

impl Debug for PacketZcChangestatePet {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangestatePet")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("gid[3, 7]", &self.gid)
            .field("data[7, 11]", &self.data)
        .finish()
    }
}

pub struct PacketCzRenamePet {
    pub packet_id: u16,
    pub sz_name: String,
}

impl PacketId for PacketCzRenamePet {
    fn id(&self) -> &str {
       "0x01a5"
    }
}

impl Debug for PacketCzRenamePet {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRenamePet")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("sz_name[2, 26]", &self.sz_name)
        .finish()
    }
}

pub struct PacketZcPeteggList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub egg_list: Vec<PeteggitemInfo>,
}

impl PacketId for PacketZcPeteggList {
    fn id(&self) -> &str {
       "0x01a6"
    }
}

impl Debug for PacketZcPeteggList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPeteggList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("egg_list[4, 6]", &self.egg_list)
        .finish()
    }
}

pub struct PacketCzSelectPetegg {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketCzSelectPetegg {
    fn id(&self) -> &str {
       "0x01a7"
    }
}

impl Debug for PacketCzSelectPetegg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSelectPetegg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketCzPeteggInfo {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketCzPeteggInfo {
    fn id(&self) -> &str {
       "0x01a8"
    }
}

impl Debug for PacketCzPeteggInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPeteggInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketCzPetAct {
    pub packet_id: u16,
    pub data: u32,
}

impl PacketId for PacketCzPetAct {
    fn id(&self) -> &str {
       "0x01a9"
    }
}

impl Debug for PacketCzPetAct {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPetAct")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("data[2, 6]", &self.data)
        .finish()
    }
}

pub struct PacketZcPetAct {
    pub packet_id: u16,
    pub gid: u32,
    pub data: u32,
}

impl PacketId for PacketZcPetAct {
    fn id(&self) -> &str {
       "0x01aa"
    }
}

impl Debug for PacketZcPetAct {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPetAct")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("data[6, 10]", &self.data)
        .finish()
    }
}

pub struct PacketZcParChangeUser {
    pub packet_id: u16,
    pub aid: u32,
    pub var_id: u16,
    pub count: u32,
}

impl PacketId for PacketZcParChangeUser {
    fn id(&self) -> &str {
       "0x01ab"
    }
}

impl Debug for PacketZcParChangeUser {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcParChangeUser")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("var_id[6, 8]", &self.var_id)
            .field("count[8, 12]", &self.count)
        .finish()
    }
}

pub struct PacketZcSkillUpdate {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcSkillUpdate {
    fn id(&self) -> &str {
       "0x01ac"
    }
}

impl Debug for PacketZcSkillUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcMakingarrowList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub arrow_list: Vec<ArrowitemInfo>,
}

impl PacketId for PacketZcMakingarrowList {
    fn id(&self) -> &str {
       "0x01ad"
    }
}

impl Debug for PacketZcMakingarrowList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMakingarrowList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("arrow_list[4, 6]", &self.arrow_list)
        .finish()
    }
}

pub struct PacketCzReqMakingarrow {
    pub packet_id: u16,
    pub id: u16,
}

impl PacketId for PacketCzReqMakingarrow {
    fn id(&self) -> &str {
       "0x01ae"
    }
}

impl Debug for PacketCzReqMakingarrow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqMakingarrow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("id[2, 4]", &self.id)
        .finish()
    }
}

pub struct PacketCzReqChangecart {
    pub packet_id: u16,
    pub num: u16,
}

impl PacketId for PacketCzReqChangecart {
    fn id(&self) -> &str {
       "0x01af"
    }
}

impl Debug for PacketCzReqChangecart {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqChangecart")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("num[2, 4]", &self.num)
        .finish()
    }
}

pub struct PacketZcNpcspriteChange {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
    pub value: u32,
}

impl PacketId for PacketZcNpcspriteChange {
    fn id(&self) -> &str {
       "0x01b0"
    }
}

impl Debug for PacketZcNpcspriteChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcspriteChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
            .field("value[7, 11]", &self.value)
        .finish()
    }
}

pub struct PacketZcShowdigit {
    pub packet_id: u16,
    pub type_: char,
    pub value: u32,
}

impl PacketId for PacketZcShowdigit {
    fn id(&self) -> &str {
       "0x01b1"
    }
}

impl Debug for PacketZcShowdigit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShowdigit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("value[3, 7]", &self.value)
        .finish()
    }
}

pub struct PacketCzReqOpenstore2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub store_name: String,
    pub result: bool,
    pub store_list: Vec<StoreItem>,
}

impl PacketId for PacketCzReqOpenstore2 {
    fn id(&self) -> &str {
       "0x01b2"
    }
}

impl Debug for PacketCzReqOpenstore2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqOpenstore2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("store_name[4, 84]", &self.store_name)
            .field("result[84, 85]", &self.result)
            .field("store_list[85, 93]", &self.store_list)
        .finish()
    }
}

pub struct PacketZcShowImage2 {
    pub packet_id: u16,
    pub image_name: String,
    pub type_: char,
}

impl PacketId for PacketZcShowImage2 {
    fn id(&self) -> &str {
       "0x01b3"
    }
}

impl Debug for PacketZcShowImage2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShowImage2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("image_name[2, 66]", &self.image_name)
            .field("type_[66, 67]", &self.type_)
        .finish()
    }
}

pub struct PacketZcChangeGuild {
    pub packet_id: u16,
    pub aid: u32,
    pub gdid: u32,
    pub emblem_version: u16,
}

impl PacketId for PacketZcChangeGuild {
    fn id(&self) -> &str {
       "0x01b4"
    }
}

impl Debug for PacketZcChangeGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangeGuild")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gdid[6, 10]", &self.gdid)
            .field("emblem_version[10, 12]", &self.emblem_version)
        .finish()
    }
}

pub struct PacketScBillingInfo {
    pub packet_id: u16,
    pub dw_amount_remain: u32,
    pub dw_quantity_remain: u32,
    pub dw_reserved1: u32,
    pub dw_reserved2: u32,
}

impl PacketId for PacketScBillingInfo {
    fn id(&self) -> &str {
       "0x01b5"
    }
}

impl Debug for PacketScBillingInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketScBillingInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("dw_amount_remain[2, 6]", &self.dw_amount_remain)
            .field("dw_quantity_remain[6, 10]", &self.dw_quantity_remain)
            .field("dw_reserved1[10, 14]", &self.dw_reserved1)
            .field("dw_reserved2[14, 18]", &self.dw_reserved2)
        .finish()
    }
}

pub struct PacketZcGuildInfo2 {
    pub packet_id: u16,
    pub gdid: u32,
    pub level: u32,
    pub user_num: u32,
    pub max_user_num: u32,
    pub user_average_level: u32,
    pub exp: u32,
    pub max_exp: u32,
    pub point: u32,
    pub honor: u32,
    pub virtue: u32,
    pub emblem_version: u32,
    pub guildname: String,
    pub master_name: String,
    pub manage_land: String,
    pub zeny: u32,
}

impl PacketId for PacketZcGuildInfo2 {
    fn id(&self) -> &str {
       "0x01b6"
    }
}

impl Debug for PacketZcGuildInfo2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildInfo2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("level[6, 10]", &self.level)
            .field("user_num[10, 14]", &self.user_num)
            .field("max_user_num[14, 18]", &self.max_user_num)
            .field("user_average_level[18, 22]", &self.user_average_level)
            .field("exp[22, 26]", &self.exp)
            .field("max_exp[26, 30]", &self.max_exp)
            .field("point[30, 34]", &self.point)
            .field("honor[34, 38]", &self.honor)
            .field("virtue[38, 42]", &self.virtue)
            .field("emblem_version[42, 46]", &self.emblem_version)
            .field("guildname[46, 70]", &self.guildname)
            .field("master_name[70, 94]", &self.master_name)
            .field("manage_land[94, 110]", &self.manage_land)
            .field("zeny[110, 114]", &self.zeny)
        .finish()
    }
}

pub struct PacketCzGuildZeny {
    pub packet_id: u16,
    pub zeny: u32,
}

impl PacketId for PacketCzGuildZeny {
    fn id(&self) -> &str {
       "0x01b7"
    }
}

impl Debug for PacketCzGuildZeny {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGuildZeny")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("zeny[2, 6]", &self.zeny)
        .finish()
    }
}

pub struct PacketZcGuildZenyAck {
    pub packet_id: u16,
    pub ret: char,
}

impl PacketId for PacketZcGuildZenyAck {
    fn id(&self) -> &str {
       "0x01b8"
    }
}

impl Debug for PacketZcGuildZenyAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildZenyAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("ret[2, 3]", &self.ret)
        .finish()
    }
}

pub struct PacketZcDispel {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcDispel {
    fn id(&self) -> &str {
       "0x01b9"
    }
}

impl Debug for PacketZcDispel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDispel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketCzRemoveAid {
    pub packet_id: u16,
    pub account_name: String,
}

impl PacketId for PacketCzRemoveAid {
    fn id(&self) -> &str {
       "0x01ba"
    }
}

impl Debug for PacketCzRemoveAid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRemoveAid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_name[2, 26]", &self.account_name)
        .finish()
    }
}

pub struct PacketCzShift {
    pub packet_id: u16,
    pub character_name: String,
}

impl PacketId for PacketCzShift {
    fn id(&self) -> &str {
       "0x01bb"
    }
}

impl Debug for PacketCzShift {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzShift")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("character_name[2, 26]", &self.character_name)
        .finish()
    }
}

pub struct PacketCzRecall {
    pub packet_id: u16,
    pub account_name: String,
}

impl PacketId for PacketCzRecall {
    fn id(&self) -> &str {
       "0x01bc"
    }
}

impl Debug for PacketCzRecall {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRecall")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_name[2, 26]", &self.account_name)
        .finish()
    }
}

pub struct PacketCzRecallGid {
    pub packet_id: u16,
    pub character_name: String,
}

impl PacketId for PacketCzRecallGid {
    fn id(&self) -> &str {
       "0x01bd"
    }
}

impl Debug for PacketCzRecallGid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRecallGid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("character_name[2, 26]", &self.character_name)
        .finish()
    }
}

pub struct PacketAcAskPngameroom {
    pub packet_id: u16,
}

impl PacketId for PacketAcAskPngameroom {
    fn id(&self) -> &str {
       "0x01be"
    }
}

impl Debug for PacketAcAskPngameroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAskPngameroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCaReplyPngameroom {
    pub packet_id: u16,
    pub permission: char,
}

impl PacketId for PacketCaReplyPngameroom {
    fn id(&self) -> &str {
       "0x01bf"
    }
}

impl Debug for PacketCaReplyPngameroom {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaReplyPngameroom")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("permission[2, 3]", &self.permission)
        .finish()
    }
}

pub struct PacketCzReqRemaintime {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqRemaintime {
    fn id(&self) -> &str {
       "0x01c0"
    }
}

impl Debug for PacketCzReqRemaintime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqRemaintime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcReplyRemaintime {
    pub packet_id: u16,
    pub result: u32,
    pub expiration_date: u32,
    pub remain_time: u32,
}

impl PacketId for PacketZcReplyRemaintime {
    fn id(&self) -> &str {
       "0x01c1"
    }
}

impl Debug for PacketZcReplyRemaintime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReplyRemaintime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 6]", &self.result)
            .field("expiration_date[6, 10]", &self.expiration_date)
            .field("remain_time[10, 14]", &self.remain_time)
        .finish()
    }
}

pub struct PacketZcInfoRemaintime {
    pub packet_id: u16,
    pub type_: u32,
    pub remain_time: u32,
}

impl PacketId for PacketZcInfoRemaintime {
    fn id(&self) -> &str {
       "0x01c2"
    }
}

impl Debug for PacketZcInfoRemaintime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcInfoRemaintime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
            .field("remain_time[6, 10]", &self.remain_time)
        .finish()
    }
}

pub struct PacketZcBroadcast2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub font_color: u32,
    pub font_type: u16,
    pub font_size: u16,
    pub font_align: u16,
    pub font_y: u16,
    pub msg: String,
}

impl PacketId for PacketZcBroadcast2 {
    fn id(&self) -> &str {
       "0x01c3"
    }
}

impl Debug for PacketZcBroadcast2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBroadcast2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("font_color[4, 8]", &self.font_color)
            .field("font_type[8, 10]", &self.font_type)
            .field("font_size[10, 12]", &self.font_size)
            .field("font_align[12, 14]", &self.font_align)
            .field("font_y[14, 16]", &self.font_y)
            .field("msg[16, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcAddItemToStore2 {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddItemToStore2 {
    fn id(&self) -> &str {
       "0x01c4"
    }
}

impl Debug for PacketZcAddItemToStore2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddItemToStore2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
            .field("itid[8, 10]", &self.itid)
            .field("type_[10, 11]", &self.type_)
            .field("is_identified[11, 12]", &self.is_identified)
            .field("is_damaged[12, 13]", &self.is_damaged)
            .field("refining_level[13, 14]", &self.refining_level)
            .field("slot[14, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketZcAddItemToCart2 {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddItemToCart2 {
    fn id(&self) -> &str {
       "0x01c5"
    }
}

impl Debug for PacketZcAddItemToCart2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddItemToCart2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
            .field("itid[8, 10]", &self.itid)
            .field("type_[10, 11]", &self.type_)
            .field("is_identified[11, 12]", &self.is_identified)
            .field("is_damaged[12, 13]", &self.is_damaged)
            .field("refining_level[13, 14]", &self.refining_level)
            .field("slot[14, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketCsReqEncryption {
    pub packet_id: u16,
    pub enc_count: char,
    pub dec_count: char,
}

impl PacketId for PacketCsReqEncryption {
    fn id(&self) -> &str {
       "0x01c6"
    }
}

impl Debug for PacketCsReqEncryption {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCsReqEncryption")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("enc_count[2, 3]", &self.enc_count)
            .field("dec_count[3, 4]", &self.dec_count)
        .finish()
    }
}

pub struct PacketScAckEncryption {
    pub packet_id: u16,
}

impl PacketId for PacketScAckEncryption {
    fn id(&self) -> &str {
       "0x01c7"
    }
}

impl Debug for PacketScAckEncryption {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketScAckEncryption")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcUseItemAck2 {
    pub packet_id: u16,
    pub index: u16,
    pub id: u16,
    pub aid: u32,
    pub count: u16,
    pub result: bool,
}

impl PacketId for PacketZcUseItemAck2 {
    fn id(&self) -> &str {
       "0x01c8"
    }
}

impl Debug for PacketZcUseItemAck2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUseItemAck2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("id[4, 6]", &self.id)
            .field("aid[6, 10]", &self.aid)
            .field("count[10, 12]", &self.count)
            .field("result[12, 13]", &self.result)
        .finish()
    }
}

pub struct PacketZcSkillEntry2 {
    pub packet_id: u16,
    pub aid: u32,
    pub creator_aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub job: char,
    pub is_visible: bool,
    pub is_contens: bool,
    pub msg: String,
}

impl PacketId for PacketZcSkillEntry2 {
    fn id(&self) -> &str {
       "0x01c9"
    }
}

impl Debug for PacketZcSkillEntry2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillEntry2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("creator_aid[6, 10]", &self.creator_aid)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("job[14, 15]", &self.job)
            .field("is_visible[15, 16]", &self.is_visible)
            .field("is_contens[16, 17]", &self.is_contens)
            .field("msg[17, 97]", &self.msg)
        .finish()
    }
}

pub struct PacketCzReqmakinghomun {
    pub packet_id: u16,
    pub result: bool,
}

impl PacketId for PacketCzReqmakinghomun {
    fn id(&self) -> &str {
       "0x01ca"
    }
}

impl Debug for PacketCzReqmakinghomun {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqmakinghomun")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzMonsterTalk {
    pub packet_id: u16,
    pub gid: u32,
    pub state_id: char,
    pub skill_id: char,
    pub arg1: char,
}

impl PacketId for PacketCzMonsterTalk {
    fn id(&self) -> &str {
       "0x01cb"
    }
}

impl Debug for PacketCzMonsterTalk {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMonsterTalk")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("state_id[6, 7]", &self.state_id)
            .field("skill_id[7, 8]", &self.skill_id)
            .field("arg1[8, 9]", &self.arg1)
        .finish()
    }
}

pub struct PacketZcMonsterTalk {
    pub packet_id: u16,
    pub gid: u32,
    pub state_id: char,
    pub skill_id: char,
    pub arg1: char,
}

impl PacketId for PacketZcMonsterTalk {
    fn id(&self) -> &str {
       "0x01cc"
    }
}

impl Debug for PacketZcMonsterTalk {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMonsterTalk")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("state_id[6, 7]", &self.state_id)
            .field("skill_id[7, 8]", &self.skill_id)
            .field("arg1[8, 9]", &self.arg1)
        .finish()
    }
}

pub struct PacketZcAutospelllist {
    pub packet_id: u16,
    pub skid: u32,
}

impl PacketId for PacketZcAutospelllist {
    fn id(&self) -> &str {
       "0x01cd"
    }
}

impl Debug for PacketZcAutospelllist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAutospelllist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 6]", &self.skid)
        .finish()
    }
}

pub struct PacketCzSelectautospell {
    pub packet_id: u16,
    pub skid: u32,
}

impl PacketId for PacketCzSelectautospell {
    fn id(&self) -> &str {
       "0x01ce"
    }
}

impl Debug for PacketCzSelectautospell {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSelectautospell")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 6]", &self.skid)
        .finish()
    }
}

pub struct PacketZcDevotionlist {
    pub packet_id: u16,
    pub my_aid: u32,
    pub aid: u32,
    pub range: u16,
}

impl PacketId for PacketZcDevotionlist {
    fn id(&self) -> &str {
       "0x01cf"
    }
}

impl Debug for PacketZcDevotionlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDevotionlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("my_aid[2, 6]", &self.my_aid)
            .field("aid[6, 10]", &self.aid)
            .field("range[26, 28]", &self.range)
        .finish()
    }
}

pub struct PacketZcSpirits {
    pub packet_id: u16,
    pub aid: u32,
    pub num: u16,
}

impl PacketId for PacketZcSpirits {
    fn id(&self) -> &str {
       "0x01d0"
    }
}

impl Debug for PacketZcSpirits {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSpirits")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("num[6, 8]", &self.num)
        .finish()
    }
}

pub struct PacketZcBladestop {
    pub packet_id: u16,
    pub src_aid: u32,
    pub dest_aid: u32,
    pub flag: u32,
}

impl PacketId for PacketZcBladestop {
    fn id(&self) -> &str {
       "0x01d1"
    }
}

impl Debug for PacketZcBladestop {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBladestop")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("src_aid[2, 6]", &self.src_aid)
            .field("dest_aid[6, 10]", &self.dest_aid)
            .field("flag[10, 14]", &self.flag)
        .finish()
    }
}

pub struct PacketZcCombodelay {
    pub packet_id: u16,
    pub aid: u32,
    pub delay_time: u32,
}

impl PacketId for PacketZcCombodelay {
    fn id(&self) -> &str {
       "0x01d2"
    }
}

impl Debug for PacketZcCombodelay {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCombodelay")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("delay_time[6, 10]", &self.delay_time)
        .finish()
    }
}

pub struct PacketZcSound {
    pub packet_id: u16,
    pub file_name: String,
    pub act: char,
    pub term: u32,
    pub naid: u32,
}

impl PacketId for PacketZcSound {
    fn id(&self) -> &str {
       "0x01d3"
    }
}

impl Debug for PacketZcSound {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSound")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("file_name[2, 26]", &self.file_name)
            .field("act[26, 27]", &self.act)
            .field("term[27, 31]", &self.term)
            .field("naid[31, 35]", &self.naid)
        .finish()
    }
}

pub struct PacketZcOpenEditdlgstr {
    pub packet_id: u16,
    pub naid: u32,
}

impl PacketId for PacketZcOpenEditdlgstr {
    fn id(&self) -> &str {
       "0x01d4"
    }
}

impl Debug for PacketZcOpenEditdlgstr {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOpenEditdlgstr")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("naid[2, 6]", &self.naid)
        .finish()
    }
}

pub struct PacketCzInputEditdlgstr {
    pub packet_id: u16,
    pub packet_length: u16,
    pub naid: u32,
    pub msg: String,
}

impl PacketId for PacketCzInputEditdlgstr {
    fn id(&self) -> &str {
       "0x01d5"
    }
}

impl Debug for PacketCzInputEditdlgstr {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzInputEditdlgstr")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("naid[4, 8]", &self.naid)
            .field("msg[8, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcNotifyMapproperty2 {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketZcNotifyMapproperty2 {
    fn id(&self) -> &str {
       "0x01d6"
    }
}

impl Debug for PacketZcNotifyMapproperty2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMapproperty2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketZcSpriteChange2 {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
    pub value: u32,
}

impl PacketId for PacketZcSpriteChange2 {
    fn id(&self) -> &str {
       "0x01d7"
    }
}

impl Debug for PacketZcSpriteChange2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSpriteChange2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
            .field("value[7, 11]", &self.value)
        .finish()
    }
}

pub struct PacketZcNotifyStandentry2 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub state: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyStandentry2 {
    fn id(&self) -> &str {
       "0x01d8"
    }
}

impl Debug for PacketZcNotifyStandentry2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentry2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 22]", &self.weapon)
            .field("accessory[22, 24]", &self.accessory)
            .field("accessory2[24, 26]", &self.accessory2)
            .field("accessory3[26, 28]", &self.accessory3)
            .field("headpalette[28, 30]", &self.headpalette)
            .field("bodypalette[30, 32]", &self.bodypalette)
            .field("head_dir[32, 34]", &self.head_dir)
            .field("guid[34, 38]", &self.guid)
            .field("gemblem_ver[38, 40]", &self.gemblem_ver)
            .field("honor[40, 42]", &self.honor)
            .field("virtue[42, 44]", &self.virtue)
            .field("is_pkmode_on[44, 45]", &self.is_pkmode_on)
            .field("sex[45, 46]", &self.sex)
            .field("pos_dir[46, 49]", &self.pos_dir)
            .field("x_size[49, 50]", &self.x_size)
            .field("y_size[50, 51]", &self.y_size)
            .field("state[51, 52]", &self.state)
            .field("clevel[52, 54]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyNewentry2 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyNewentry2 {
    fn id(&self) -> &str {
       "0x01d9"
    }
}

impl Debug for PacketZcNotifyNewentry2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyNewentry2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 22]", &self.weapon)
            .field("accessory[22, 24]", &self.accessory)
            .field("accessory2[24, 26]", &self.accessory2)
            .field("accessory3[26, 28]", &self.accessory3)
            .field("headpalette[28, 30]", &self.headpalette)
            .field("bodypalette[30, 32]", &self.bodypalette)
            .field("head_dir[32, 34]", &self.head_dir)
            .field("guid[34, 38]", &self.guid)
            .field("gemblem_ver[38, 40]", &self.gemblem_ver)
            .field("honor[40, 42]", &self.honor)
            .field("virtue[42, 44]", &self.virtue)
            .field("is_pkmode_on[44, 45]", &self.is_pkmode_on)
            .field("sex[45, 46]", &self.sex)
            .field("pos_dir[46, 49]", &self.pos_dir)
            .field("x_size[49, 50]", &self.x_size)
            .field("y_size[50, 51]", &self.y_size)
            .field("clevel[51, 53]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyMoveentry2 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub move_start_time: u32,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u16,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub move_data: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyMoveentry2 {
    fn id(&self) -> &str {
       "0x01da"
    }
}

impl Debug for PacketZcNotifyMoveentry2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMoveentry2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 14]", &self.effect_state)
            .field("job[14, 16]", &self.job)
            .field("head[16, 18]", &self.head)
            .field("weapon[18, 22]", &self.weapon)
            .field("accessory[22, 24]", &self.accessory)
            .field("move_start_time[24, 28]", &self.move_start_time)
            .field("accessory2[28, 30]", &self.accessory2)
            .field("accessory3[30, 32]", &self.accessory3)
            .field("headpalette[32, 34]", &self.headpalette)
            .field("bodypalette[34, 36]", &self.bodypalette)
            .field("head_dir[36, 38]", &self.head_dir)
            .field("guid[38, 42]", &self.guid)
            .field("gemblem_ver[42, 44]", &self.gemblem_ver)
            .field("honor[44, 46]", &self.honor)
            .field("virtue[46, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("move_data[50, 56]", &self.move_data)
            .field("x_size[56, 57]", &self.x_size)
            .field("y_size[57, 58]", &self.y_size)
            .field("clevel[58, 60]", &self.clevel)
        .finish()
    }
}

pub struct PacketCaReqHash {
    pub packet_id: u16,
}

impl PacketId for PacketCaReqHash {
    fn id(&self) -> &str {
       "0x01db"
    }
}

impl Debug for PacketCaReqHash {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaReqHash")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketAcAckHash {
    pub packet_id: u16,
    pub packet_length: u16,
    pub secret: String,
}

impl PacketId for PacketAcAckHash {
    fn id(&self) -> &str {
       "0x01dc"
    }
}

impl Debug for PacketAcAckHash {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckHash")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("secret[4, ?]", &self.secret)
        .finish()
    }
}

pub struct PacketCaLogin2 {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd_md5: String,
    pub clienttype: char,
}

impl PacketId for PacketCaLogin2 {
    fn id(&self) -> &str {
       "0x01dd"
    }
}

impl Debug for PacketCaLogin2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLogin2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd_md5[30, 46]", &self.passwd_md5)
            .field("clienttype[46, 47]", &self.clienttype)
        .finish()
    }
}

pub struct PacketZcNotifySkill2 {
    pub packet_id: u16,
    pub skid: u16,
    pub aid: u32,
    pub target_id: u32,
    pub start_time: u32,
    pub attack_mt: u32,
    pub attacked_mt: u32,
    pub damage: u32,
    pub level: u16,
    pub count: u16,
    pub action: char,
}

impl PacketId for PacketZcNotifySkill2 {
    fn id(&self) -> &str {
       "0x01de"
    }
}

impl Debug for PacketZcNotifySkill2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifySkill2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("aid[4, 8]", &self.aid)
            .field("target_id[8, 12]", &self.target_id)
            .field("start_time[12, 16]", &self.start_time)
            .field("attack_mt[16, 20]", &self.attack_mt)
            .field("attacked_mt[20, 24]", &self.attacked_mt)
            .field("damage[24, 28]", &self.damage)
            .field("level[28, 30]", &self.level)
            .field("count[30, 32]", &self.count)
            .field("action[32, 33]", &self.action)
        .finish()
    }
}

pub struct PacketCzReqAccountname {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqAccountname {
    fn id(&self) -> &str {
       "0x01df"
    }
}

impl Debug for PacketCzReqAccountname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqAccountname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcAckAccountname {
    pub packet_id: u16,
    pub aid: u32,
    pub name: String,
}

impl PacketId for PacketZcAckAccountname {
    fn id(&self) -> &str {
       "0x01e0"
    }
}

impl Debug for PacketZcAckAccountname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckAccountname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("name[6, 30]", &self.name)
        .finish()
    }
}

pub struct PacketZcSpirits2 {
    pub packet_id: u16,
    pub aid: u32,
    pub num: u16,
}

impl PacketId for PacketZcSpirits2 {
    fn id(&self) -> &str {
       "0x01e1"
    }
}

impl Debug for PacketZcSpirits2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSpirits2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("num[6, 8]", &self.num)
        .finish()
    }
}

pub struct PacketZcReqCouple {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub name: String,
}

impl PacketId for PacketZcReqCouple {
    fn id(&self) -> &str {
       "0x01e2"
    }
}

impl Debug for PacketZcReqCouple {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqCouple")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("name[10, 34]", &self.name)
        .finish()
    }
}

pub struct PacketCzJoinCouple {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub answer: u32,
}

impl PacketId for PacketCzJoinCouple {
    fn id(&self) -> &str {
       "0x01e3"
    }
}

impl Debug for PacketCzJoinCouple {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzJoinCouple")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("answer[10, 14]", &self.answer)
        .finish()
    }
}

pub struct PacketZcStartCouple {
    pub packet_id: u16,
}

impl PacketId for PacketZcStartCouple {
    fn id(&self) -> &str {
       "0x01e4"
    }
}

impl Debug for PacketZcStartCouple {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStartCouple")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqJoinCouple {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqJoinCouple {
    fn id(&self) -> &str {
       "0x01e5"
    }
}

impl Debug for PacketCzReqJoinCouple {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqJoinCouple")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcCouplename {
    pub packet_id: u16,
    pub couple_name: String,
}

impl PacketId for PacketZcCouplename {
    fn id(&self) -> &str {
       "0x01e6"
    }
}

impl Debug for PacketZcCouplename {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCouplename")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("couple_name[2, 26]", &self.couple_name)
        .finish()
    }
}

pub struct PacketCzDoridori {
    pub packet_id: u16,
}

impl PacketId for PacketCzDoridori {
    fn id(&self) -> &str {
       "0x01e7"
    }
}

impl Debug for PacketCzDoridori {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzDoridori")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzMakeGroup2 {
    pub packet_id: u16,
    pub group_name: String,
    pub item_pickup_rule: char,
    pub item_division_rule: char,
}

impl PacketId for PacketCzMakeGroup2 {
    fn id(&self) -> &str {
       "0x01e8"
    }
}

impl Debug for PacketCzMakeGroup2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMakeGroup2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("group_name[2, 26]", &self.group_name)
            .field("item_pickup_rule[26, 27]", &self.item_pickup_rule)
            .field("item_division_rule[27, 28]", &self.item_division_rule)
        .finish()
    }
}

pub struct PacketZcAddMemberToGroup2 {
    pub packet_id: u16,
    pub aid: u32,
    pub role: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub state: char,
    pub group_name: String,
    pub character_name: String,
    pub map_name: String,
    pub item_pickup_rule: char,
    pub item_division_rule: char,
}

impl PacketId for PacketZcAddMemberToGroup2 {
    fn id(&self) -> &str {
       "0x01e9"
    }
}

impl Debug for PacketZcAddMemberToGroup2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddMemberToGroup2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("role[6, 10]", &self.role)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("state[14, 15]", &self.state)
            .field("group_name[15, 39]", &self.group_name)
            .field("character_name[39, 63]", &self.character_name)
            .field("map_name[63, 79]", &self.map_name)
            .field("item_pickup_rule[79, 80]", &self.item_pickup_rule)
            .field("item_division_rule[80, 81]", &self.item_division_rule)
        .finish()
    }
}

pub struct PacketZcCongratulation {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcCongratulation {
    fn id(&self) -> &str {
       "0x01ea"
    }
}

impl Debug for PacketZcCongratulation {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCongratulation")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcNotifyPositionToGuildm {
    pub packet_id: u16,
    pub aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketZcNotifyPositionToGuildm {
    fn id(&self) -> &str {
       "0x01eb"
    }
}

impl Debug for PacketZcNotifyPositionToGuildm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPositionToGuildm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
        .finish()
    }
}

pub struct PacketZcGuildMemberMapChange {
    pub packet_id: u16,
    pub gdid: u32,
    pub aid: u32,
    pub map_name: String,
}

impl PacketId for PacketZcGuildMemberMapChange {
    fn id(&self) -> &str {
       "0x01ec"
    }
}

impl Debug for PacketZcGuildMemberMapChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGuildMemberMapChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gdid[2, 6]", &self.gdid)
            .field("aid[6, 10]", &self.aid)
            .field("map_name[10, 26]", &self.map_name)
        .finish()
    }
}

pub struct PacketCzChopokgi {
    pub packet_id: u16,
}

impl PacketId for PacketCzChopokgi {
    fn id(&self) -> &str {
       "0x01ed"
    }
}

impl Debug for PacketCzChopokgi {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChopokgi")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcNormalItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo2>,
}

impl PacketId for PacketZcNormalItemlist2 {
    fn id(&self) -> &str {
       "0x01ee"
    }
}

impl Debug for PacketZcNormalItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNormalItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 22]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCartNormalItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo2>,
}

impl PacketId for PacketZcCartNormalItemlist2 {
    fn id(&self) -> &str {
       "0x01ef"
    }
}

impl Debug for PacketZcCartNormalItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartNormalItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 22]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreNormalItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo2>,
}

impl PacketId for PacketZcStoreNormalItemlist2 {
    fn id(&self) -> &str {
       "0x01f0"
    }
}

impl Debug for PacketZcStoreNormalItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreNormalItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 22]", &self.item_info)
        .finish()
    }
}

pub struct PacketAcNotifyError {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketAcNotifyError {
    fn id(&self) -> &str {
       "0x01f1"
    }
}

impl Debug for PacketAcNotifyError {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcNotifyError")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcUpdateCharstat2 {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub status: u32,
    pub sex: u16,
    pub head: u16,
    pub head_palette: u16,
}

impl PacketId for PacketZcUpdateCharstat2 {
    fn id(&self) -> &str {
       "0x01f2"
    }
}

impl Debug for PacketZcUpdateCharstat2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateCharstat2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("status[10, 14]", &self.status)
            .field("sex[14, 16]", &self.sex)
            .field("head[16, 18]", &self.head)
            .field("head_palette[18, 20]", &self.head_palette)
        .finish()
    }
}

pub struct PacketZcNotifyEffect2 {
    pub packet_id: u16,
    pub aid: u32,
    pub effect_id: u32,
}

impl PacketId for PacketZcNotifyEffect2 {
    fn id(&self) -> &str {
       "0x01f3"
    }
}

impl Debug for PacketZcNotifyEffect2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyEffect2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("effect_id[6, 10]", &self.effect_id)
        .finish()
    }
}

pub struct PacketZcReqExchangeItem2 {
    pub packet_id: u16,
    pub name: String,
    pub gid: u32,
    pub level: u16,
}

impl PacketId for PacketZcReqExchangeItem2 {
    fn id(&self) -> &str {
       "0x01f4"
    }
}

impl Debug for PacketZcReqExchangeItem2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqExchangeItem2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("gid[26, 30]", &self.gid)
            .field("level[30, 32]", &self.level)
        .finish()
    }
}

pub struct PacketZcAckExchangeItem2 {
    pub packet_id: u16,
    pub result: char,
    pub gid: u32,
    pub level: u16,
}

impl PacketId for PacketZcAckExchangeItem2 {
    fn id(&self) -> &str {
       "0x01f5"
    }
}

impl Debug for PacketZcAckExchangeItem2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckExchangeItem2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
            .field("gid[3, 7]", &self.gid)
            .field("level[7, 9]", &self.level)
        .finish()
    }
}

pub struct PacketZcReqBaby {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub name: String,
}

impl PacketId for PacketZcReqBaby {
    fn id(&self) -> &str {
       "0x01f6"
    }
}

impl Debug for PacketZcReqBaby {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqBaby")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("name[10, 34]", &self.name)
        .finish()
    }
}

pub struct PacketCzJoinBaby {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub answer: u32,
}

impl PacketId for PacketCzJoinBaby {
    fn id(&self) -> &str {
       "0x01f7"
    }
}

impl Debug for PacketCzJoinBaby {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzJoinBaby")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("answer[10, 14]", &self.answer)
        .finish()
    }
}

pub struct PacketZcStartBaby {
    pub packet_id: u16,
}

impl PacketId for PacketZcStartBaby {
    fn id(&self) -> &str {
       "0x01f8"
    }
}

impl Debug for PacketZcStartBaby {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStartBaby")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzReqJoinBaby {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzReqJoinBaby {
    fn id(&self) -> &str {
       "0x01f9"
    }
}

impl Debug for PacketCzReqJoinBaby {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqJoinBaby")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketCaLogin3 {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd_md5: String,
    pub clienttype: char,
    pub client_info: char,
}

impl PacketId for PacketCaLogin3 {
    fn id(&self) -> &str {
       "0x01fa"
    }
}

impl Debug for PacketCaLogin3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLogin3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd_md5[30, 46]", &self.passwd_md5)
            .field("clienttype[46, 47]", &self.clienttype)
            .field("client_info[47, 48]", &self.client_info)
        .finish()
    }
}

pub struct PacketChDeleteChar2 {
    pub packet_id: u16,
    pub gid: u32,
    pub key: String,
}

impl PacketId for PacketChDeleteChar2 {
    fn id(&self) -> &str {
       "0x01fb"
    }
}

impl Debug for PacketChDeleteChar2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChDeleteChar2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("key[6, 56]", &self.key)
        .finish()
    }
}

pub struct PacketZcRepairitemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<RepairitemInfo>,
}

impl PacketId for PacketZcRepairitemlist {
    fn id(&self) -> &str {
       "0x01fc"
    }
}

impl Debug for PacketZcRepairitemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcRepairitemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 17]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzReqItemrepair {
    pub packet_id: u16,
    pub target_item_info: RepairitemInfo,
}

impl PacketId for PacketCzReqItemrepair {
    fn id(&self) -> &str {
       "0x01fd"
    }
}

impl Debug for PacketCzReqItemrepair {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqItemrepair")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_item_info[2, ?]", &self.target_item_info)
        .finish()
    }
}

pub struct PacketZcAckItemrepair {
    pub packet_id: u16,
    pub index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckItemrepair {
    fn id(&self) -> &str {
       "0x01fe"
    }
}

impl Debug for PacketZcAckItemrepair {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckItemrepair")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketZcHighjump {
    pub packet_id: u16,
    pub aid: u32,
    pub x_pos: u16,
    pub y_pos: u16,
}

impl PacketId for PacketZcHighjump {
    fn id(&self) -> &str {
       "0x01ff"
    }
}

impl Debug for PacketZcHighjump {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcHighjump")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
        .finish()
    }
}

pub struct PacketCaConnectInfoChanged {
    pub packet_id: u16,
    pub id: String,
}

impl PacketId for PacketCaConnectInfoChanged {
    fn id(&self) -> &str {
       "0x0200"
    }
}

impl Debug for PacketCaConnectInfoChanged {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaConnectInfoChanged")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("id[2, 26]", &self.id)
        .finish()
    }
}

pub struct PacketZcFriendsList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub friend_list: Vec<StructFriend>,
}

impl PacketId for PacketZcFriendsList {
    fn id(&self) -> &str {
       "0x0201"
    }
}

impl Debug for PacketZcFriendsList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFriendsList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("friend_list[4, 36]", &self.friend_list)
        .finish()
    }
}

pub struct PacketCzAddFriends {
    pub packet_id: u16,
    pub name: String,
}

impl PacketId for PacketCzAddFriends {
    fn id(&self) -> &str {
       "0x0202"
    }
}

impl Debug for PacketCzAddFriends {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAddFriends")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
        .finish()
    }
}

pub struct PacketCzDeleteFriends {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
}

impl PacketId for PacketCzDeleteFriends {
    fn id(&self) -> &str {
       "0x0203"
    }
}

impl Debug for PacketCzDeleteFriends {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzDeleteFriends")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
        .finish()
    }
}

pub struct PacketCaExeHashcheck {
    pub packet_id: u16,
    pub hash_value: String,
}

impl PacketId for PacketCaExeHashcheck {
    fn id(&self) -> &str {
       "0x0204"
    }
}

impl Debug for PacketCaExeHashcheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaExeHashcheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("hash_value[2, 18]", &self.hash_value)
        .finish()
    }
}

pub struct PacketZcDivorce {
    pub packet_id: u16,
    pub name: String,
}

impl PacketId for PacketZcDivorce {
    fn id(&self) -> &str {
       "0x0205"
    }
}

impl Debug for PacketZcDivorce {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDivorce")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
        .finish()
    }
}

pub struct PacketZcFriendsState {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub state: bool,
}

impl PacketId for PacketZcFriendsState {
    fn id(&self) -> &str {
       "0x0206"
    }
}

impl Debug for PacketZcFriendsState {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFriendsState")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("state[10, 11]", &self.state)
        .finish()
    }
}

pub struct PacketZcReqAddFriends {
    pub packet_id: u16,
    pub req_aid: u32,
    pub req_gid: u32,
    pub name: String,
}

impl PacketId for PacketZcReqAddFriends {
    fn id(&self) -> &str {
       "0x0207"
    }
}

impl Debug for PacketZcReqAddFriends {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqAddFriends")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("req_aid[2, 6]", &self.req_aid)
            .field("req_gid[6, 10]", &self.req_gid)
            .field("name[10, 34]", &self.name)
        .finish()
    }
}

pub struct PacketCzAckReqAddFriends {
    pub packet_id: u16,
    pub req_aid: u32,
    pub req_gid: u32,
    pub result: u32,
}

impl PacketId for PacketCzAckReqAddFriends {
    fn id(&self) -> &str {
       "0x0208"
    }
}

impl Debug for PacketCzAckReqAddFriends {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckReqAddFriends")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("req_aid[2, 6]", &self.req_aid)
            .field("req_gid[6, 10]", &self.req_gid)
            .field("result[10, 14]", &self.result)
        .finish()
    }
}

pub struct PacketZcAddFriendsList {
    pub packet_id: u16,
    pub result: u16,
    pub aid: u32,
    pub gid: u32,
    pub name: String,
}

impl PacketId for PacketZcAddFriendsList {
    fn id(&self) -> &str {
       "0x0209"
    }
}

impl Debug for PacketZcAddFriendsList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddFriendsList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("aid[4, 8]", &self.aid)
            .field("gid[8, 12]", &self.gid)
            .field("name[12, 36]", &self.name)
        .finish()
    }
}

pub struct PacketZcDeleteFriends {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
}

impl PacketId for PacketZcDeleteFriends {
    fn id(&self) -> &str {
       "0x020a"
    }
}

impl Debug for PacketZcDeleteFriends {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteFriends")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
        .finish()
    }
}

pub struct PacketChExeHashcheck {
    pub packet_id: u16,
    pub client_type: char,
    pub hash_value: String,
}

impl PacketId for PacketChExeHashcheck {
    fn id(&self) -> &str {
       "0x020b"
    }
}

impl Debug for PacketChExeHashcheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChExeHashcheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("client_type[2, 3]", &self.client_type)
            .field("hash_value[3, 19]", &self.hash_value)
        .finish()
    }
}

pub struct PacketCzExeHashcheck {
    pub packet_id: u16,
    pub client_type: char,
    pub hash_value: String,
}

impl PacketId for PacketCzExeHashcheck {
    fn id(&self) -> &str {
       "0x020c"
    }
}

impl Debug for PacketCzExeHashcheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzExeHashcheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("client_type[2, 3]", &self.client_type)
            .field("hash_value[3, 19]", &self.hash_value)
        .finish()
    }
}

pub struct PacketHcBlockCharacter {
    pub packet_id: u16,
    pub packet_length: u16,
    pub character_list: Vec<TagCharacterBlockInfo>,
}

impl PacketId for PacketHcBlockCharacter {
    fn id(&self) -> &str {
       "0x020d"
    }
}

impl Debug for PacketHcBlockCharacter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcBlockCharacter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("character_list[4, 28]", &self.character_list)
        .finish()
    }
}

pub struct PacketZcStarskill {
    pub packet_id: u16,
    pub map_name: String,
    pub monster_id: u32,
    pub star: char,
    pub result: char,
}

impl PacketId for PacketZcStarskill {
    fn id(&self) -> &str {
       "0x020e"
    }
}

impl Debug for PacketZcStarskill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStarskill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("map_name[2, 26]", &self.map_name)
            .field("monster_id[26, 30]", &self.monster_id)
            .field("star[30, 31]", &self.star)
            .field("result[31, 32]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqPvppoint {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
}

impl PacketId for PacketCzReqPvppoint {
    fn id(&self) -> &str {
       "0x020f"
    }
}

impl Debug for PacketCzReqPvppoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqPvppoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
        .finish()
    }
}

pub struct PacketZcAckPvppoint {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub pvp: PVPINFO,
}

impl PacketId for PacketZcAckPvppoint {
    fn id(&self) -> &str {
       "0x0210"
    }
}

impl Debug for PacketZcAckPvppoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckPvppoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("pvp[10, ?]", &self.pvp)
        .finish()
    }
}

pub struct PacketZhMovePvpworld {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketZhMovePvpworld {
    fn id(&self) -> &str {
       "0x0211"
    }
}

impl Debug for PacketZhMovePvpworld {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZhMovePvpworld")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketCzReqGiveMannerByname {
    pub packet_id: u16,
    pub char_name: String,
}

impl PacketId for PacketCzReqGiveMannerByname {
    fn id(&self) -> &str {
       "0x0212"
    }
}

impl Debug for PacketCzReqGiveMannerByname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqGiveMannerByname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_name[2, 26]", &self.char_name)
        .finish()
    }
}

pub struct PacketCzReqStatusGm {
    pub packet_id: u16,
    pub char_name: String,
}

impl PacketId for PacketCzReqStatusGm {
    fn id(&self) -> &str {
       "0x0213"
    }
}

impl Debug for PacketCzReqStatusGm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqStatusGm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_name[2, 26]", &self.char_name)
        .finish()
    }
}

pub struct PacketZcAckStatusGm {
    pub packet_id: u16,
    pub str: char,
    pub standard_str: char,
    pub agi: char,
    pub standard_agi: char,
    pub vit: char,
    pub standard_vit: char,
    pub int: char,
    pub standard_int: char,
    pub dex: char,
    pub standard_dex: char,
    pub luk: char,
    pub standard_luk: char,
    pub att_power: u16,
    pub refining_power: u16,
    pub max_matt_power: u16,
    pub min_matt_power: u16,
    pub itemdef_power: u16,
    pub plusdef_power: u16,
    pub mdef_power: u16,
    pub plusmdef_power: u16,
    pub hit_success_value: u16,
    pub avoid_success_value: u16,
    pub plus_avoid_success_value: u16,
    pub critical_success_value: u16,
    pub aspd: u16,
    pub plus_aspd: u16,
}

impl PacketId for PacketZcAckStatusGm {
    fn id(&self) -> &str {
       "0x0214"
    }
}

impl Debug for PacketZcAckStatusGm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckStatusGm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("str[2, 3]", &self.str)
            .field("standard_str[3, 4]", &self.standard_str)
            .field("agi[4, 5]", &self.agi)
            .field("standard_agi[5, 6]", &self.standard_agi)
            .field("vit[6, 7]", &self.vit)
            .field("standard_vit[7, 8]", &self.standard_vit)
            .field("int[8, 9]", &self.int)
            .field("standard_int[9, 10]", &self.standard_int)
            .field("dex[10, 11]", &self.dex)
            .field("standard_dex[11, 12]", &self.standard_dex)
            .field("luk[12, 13]", &self.luk)
            .field("standard_luk[13, 14]", &self.standard_luk)
            .field("att_power[14, 16]", &self.att_power)
            .field("refining_power[16, 18]", &self.refining_power)
            .field("max_matt_power[18, 20]", &self.max_matt_power)
            .field("min_matt_power[20, 22]", &self.min_matt_power)
            .field("itemdef_power[22, 24]", &self.itemdef_power)
            .field("plusdef_power[24, 26]", &self.plusdef_power)
            .field("mdef_power[26, 28]", &self.mdef_power)
            .field("plusmdef_power[28, 30]", &self.plusmdef_power)
            .field("hit_success_value[30, 32]", &self.hit_success_value)
            .field("avoid_success_value[32, 34]", &self.avoid_success_value)
            .field("plus_avoid_success_value[34, 36]", &self.plus_avoid_success_value)
            .field("critical_success_value[36, 38]", &self.critical_success_value)
            .field("aspd[38, 40]", &self.aspd)
            .field("plus_aspd[40, 42]", &self.plus_aspd)
        .finish()
    }
}

pub struct PacketZcSkillmsg {
    pub packet_id: u16,
    pub msg_no: u32,
}

impl PacketId for PacketZcSkillmsg {
    fn id(&self) -> &str {
       "0x0215"
    }
}

impl Debug for PacketZcSkillmsg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillmsg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("msg_no[2, 6]", &self.msg_no)
        .finish()
    }
}

pub struct PacketZcBabymsg {
    pub packet_id: u16,
    pub msg_no: u32,
}

impl PacketId for PacketZcBabymsg {
    fn id(&self) -> &str {
       "0x0216"
    }
}

impl Debug for PacketZcBabymsg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBabymsg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("msg_no[2, 6]", &self.msg_no)
        .finish()
    }
}

pub struct PacketCzBlacksmithRank {
    pub packet_id: u16,
}

impl PacketId for PacketCzBlacksmithRank {
    fn id(&self) -> &str {
       "0x0217"
    }
}

impl Debug for PacketCzBlacksmithRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBlacksmithRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzAlchemistRank {
    pub packet_id: u16,
}

impl PacketId for PacketCzAlchemistRank {
    fn id(&self) -> &str {
       "0x0218"
    }
}

impl Debug for PacketCzAlchemistRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAlchemistRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcBlacksmithRank {
    pub packet_id: u16,
    pub name: String,
    pub point: u32,
}

impl PacketId for PacketZcBlacksmithRank {
    fn id(&self) -> &str {
       "0x0219"
    }
}

impl Debug for PacketZcBlacksmithRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBlacksmithRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 12]", &self.name)
            .field("point[242, 246]", &self.point)
        .finish()
    }
}

pub struct PacketZcAlchemistRank {
    pub packet_id: u16,
    pub name: String,
    pub point: u32,
}

impl PacketId for PacketZcAlchemistRank {
    fn id(&self) -> &str {
       "0x021a"
    }
}

impl Debug for PacketZcAlchemistRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAlchemistRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 12]", &self.name)
            .field("point[242, 246]", &self.point)
        .finish()
    }
}

pub struct PacketZcBlacksmithPoint {
    pub packet_id: u16,
    pub point: u32,
    pub total_point: u32,
}

impl PacketId for PacketZcBlacksmithPoint {
    fn id(&self) -> &str {
       "0x021b"
    }
}

impl Debug for PacketZcBlacksmithPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBlacksmithPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point[2, 6]", &self.point)
            .field("total_point[6, 10]", &self.total_point)
        .finish()
    }
}

pub struct PacketZcAlchemistPoint {
    pub packet_id: u16,
    pub point: u32,
    pub total_point: u32,
}

impl PacketId for PacketZcAlchemistPoint {
    fn id(&self) -> &str {
       "0x021c"
    }
}

impl Debug for PacketZcAlchemistPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAlchemistPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point[2, 6]", &self.point)
            .field("total_point[6, 10]", &self.total_point)
        .finish()
    }
}

pub struct PacketCzLesseffect {
    pub packet_id: u16,
    pub is_less: u32,
}

impl PacketId for PacketCzLesseffect {
    fn id(&self) -> &str {
       "0x021d"
    }
}

impl Debug for PacketCzLesseffect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzLesseffect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("is_less[2, 6]", &self.is_less)
        .finish()
    }
}

pub struct PacketZcLesseffect {
    pub packet_id: u16,
    pub is_less: u32,
}

impl PacketId for PacketZcLesseffect {
    fn id(&self) -> &str {
       "0x021e"
    }
}

impl Debug for PacketZcLesseffect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcLesseffect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("is_less[2, 6]", &self.is_less)
        .finish()
    }
}

pub struct PacketZcNotifyPkinfo {
    pub packet_id: u16,
    pub win_point: u32,
    pub lose_point: u32,
    pub kill_name: String,
    pub killed_name: String,
    pub expire_time: Filetime,
}

impl PacketId for PacketZcNotifyPkinfo {
    fn id(&self) -> &str {
       "0x021f"
    }
}

impl Debug for PacketZcNotifyPkinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPkinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("win_point[2, 6]", &self.win_point)
            .field("lose_point[6, 10]", &self.lose_point)
            .field("kill_name[10, 34]", &self.kill_name)
            .field("killed_name[34, 58]", &self.killed_name)
            .field("expire_time[58, ?]", &self.expire_time)
        .finish()
    }
}

pub struct PacketZcNotifyCrazykiller {
    pub packet_id: u16,
    pub aid: u32,
    pub is_crazy_killer: u32,
}

impl PacketId for PacketZcNotifyCrazykiller {
    fn id(&self) -> &str {
       "0x0220"
    }
}

impl Debug for PacketZcNotifyCrazykiller {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyCrazykiller")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("is_crazy_killer[6, 10]", &self.is_crazy_killer)
        .finish()
    }
}

pub struct PacketZcNotifyWeaponitemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_list: Vec<RepairitemInfo>,
}

impl PacketId for PacketZcNotifyWeaponitemlist {
    fn id(&self) -> &str {
       "0x0221"
    }
}

impl Debug for PacketZcNotifyWeaponitemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyWeaponitemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_list[4, 17]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzReqWeaponrefine {
    pub packet_id: u16,
    pub index: u32,
}

impl PacketId for PacketCzReqWeaponrefine {
    fn id(&self) -> &str {
       "0x0222"
    }
}

impl Debug for PacketCzReqWeaponrefine {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqWeaponrefine")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 6]", &self.index)
        .finish()
    }
}

pub struct PacketZcAckWeaponrefine {
    pub packet_id: u16,
    pub msg: u32,
    pub itid: u16,
}

impl PacketId for PacketZcAckWeaponrefine {
    fn id(&self) -> &str {
       "0x0223"
    }
}

impl Debug for PacketZcAckWeaponrefine {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckWeaponrefine")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("msg[2, 6]", &self.msg)
            .field("itid[6, 8]", &self.itid)
        .finish()
    }
}

pub struct PacketZcTaekwonPoint {
    pub packet_id: u16,
    pub point: u32,
    pub total_point: u32,
}

impl PacketId for PacketZcTaekwonPoint {
    fn id(&self) -> &str {
       "0x0224"
    }
}

impl Debug for PacketZcTaekwonPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcTaekwonPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point[2, 6]", &self.point)
            .field("total_point[6, 10]", &self.total_point)
        .finish()
    }
}

pub struct PacketCzTaekwonRank {
    pub packet_id: u16,
}

impl PacketId for PacketCzTaekwonRank {
    fn id(&self) -> &str {
       "0x0225"
    }
}

impl Debug for PacketCzTaekwonRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzTaekwonRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcTaekwonRank {
    pub packet_id: u16,
    pub name: String,
    pub point: u32,
}

impl PacketId for PacketZcTaekwonRank {
    fn id(&self) -> &str {
       "0x0226"
    }
}

impl Debug for PacketZcTaekwonRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcTaekwonRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 12]", &self.name)
            .field("point[242, 246]", &self.point)
        .finish()
    }
}

pub struct PacketZcGameGuard {
    pub packet_id: u16,
    pub auth_data: u32,
}

impl PacketId for PacketZcGameGuard {
    fn id(&self) -> &str {
       "0x0227"
    }
}

impl Debug for PacketZcGameGuard {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGameGuard")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auth_data[2, 6]", &self.auth_data)
        .finish()
    }
}

pub struct PacketCzAckGameGuard {
    pub packet_id: u16,
    pub auth_data: u32,
}

impl PacketId for PacketCzAckGameGuard {
    fn id(&self) -> &str {
       "0x0228"
    }
}

impl Debug for PacketCzAckGameGuard {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckGameGuard")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auth_data[2, 6]", &self.auth_data)
        .finish()
    }
}

pub struct PacketZcStateChange3 {
    pub packet_id: u16,
    pub aid: u32,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub is_pkmode_on: bool,
}

impl PacketId for PacketZcStateChange3 {
    fn id(&self) -> &str {
       "0x0229"
    }
}

impl Debug for PacketZcStateChange3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStateChange3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("body_state[6, 8]", &self.body_state)
            .field("health_state[8, 10]", &self.health_state)
            .field("effect_state[10, 14]", &self.effect_state)
            .field("is_pkmode_on[14, 15]", &self.is_pkmode_on)
        .finish()
    }
}

pub struct PacketZcNotifyStandentry3 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub state: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyStandentry3 {
    fn id(&self) -> &str {
       "0x022a"
    }
}

impl Debug for PacketZcNotifyStandentry3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentry3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 16]", &self.effect_state)
            .field("job[16, 18]", &self.job)
            .field("head[18, 20]", &self.head)
            .field("weapon[20, 24]", &self.weapon)
            .field("accessory[24, 26]", &self.accessory)
            .field("accessory2[26, 28]", &self.accessory2)
            .field("accessory3[28, 30]", &self.accessory3)
            .field("headpalette[30, 32]", &self.headpalette)
            .field("bodypalette[32, 34]", &self.bodypalette)
            .field("head_dir[34, 36]", &self.head_dir)
            .field("guid[36, 40]", &self.guid)
            .field("gemblem_ver[40, 42]", &self.gemblem_ver)
            .field("honor[42, 44]", &self.honor)
            .field("virtue[44, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("pos_dir[50, 53]", &self.pos_dir)
            .field("x_size[53, 54]", &self.x_size)
            .field("y_size[54, 55]", &self.y_size)
            .field("state[55, 56]", &self.state)
            .field("clevel[56, 58]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyNewentry3 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyNewentry3 {
    fn id(&self) -> &str {
       "0x022b"
    }
}

impl Debug for PacketZcNotifyNewentry3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyNewentry3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 16]", &self.effect_state)
            .field("job[16, 18]", &self.job)
            .field("head[18, 20]", &self.head)
            .field("weapon[20, 24]", &self.weapon)
            .field("accessory[24, 26]", &self.accessory)
            .field("accessory2[26, 28]", &self.accessory2)
            .field("accessory3[28, 30]", &self.accessory3)
            .field("headpalette[30, 32]", &self.headpalette)
            .field("bodypalette[32, 34]", &self.bodypalette)
            .field("head_dir[34, 36]", &self.head_dir)
            .field("guid[36, 40]", &self.guid)
            .field("gemblem_ver[40, 42]", &self.gemblem_ver)
            .field("honor[42, 44]", &self.honor)
            .field("virtue[44, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("pos_dir[50, 53]", &self.pos_dir)
            .field("x_size[53, 54]", &self.x_size)
            .field("y_size[54, 55]", &self.y_size)
            .field("clevel[55, 57]", &self.clevel)
        .finish()
    }
}

pub struct PacketZcNotifyMoveentry3 {
    pub packet_id: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub move_start_time: u32,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub move_data: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
}

impl PacketId for PacketZcNotifyMoveentry3 {
    fn id(&self) -> &str {
       "0x022c"
    }
}

impl Debug for PacketZcNotifyMoveentry3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMoveentry3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("objecttype[2, 3]", &self.objecttype)
            .field("gid[3, 7]", &self.gid)
            .field("speed[7, 9]", &self.speed)
            .field("body_state[9, 11]", &self.body_state)
            .field("health_state[11, 13]", &self.health_state)
            .field("effect_state[13, 17]", &self.effect_state)
            .field("job[17, 19]", &self.job)
            .field("head[19, 21]", &self.head)
            .field("weapon[21, 25]", &self.weapon)
            .field("accessory[25, 27]", &self.accessory)
            .field("move_start_time[27, 31]", &self.move_start_time)
            .field("accessory2[31, 33]", &self.accessory2)
            .field("accessory3[33, 35]", &self.accessory3)
            .field("headpalette[35, 37]", &self.headpalette)
            .field("bodypalette[37, 39]", &self.bodypalette)
            .field("head_dir[39, 41]", &self.head_dir)
            .field("guid[41, 45]", &self.guid)
            .field("gemblem_ver[45, 47]", &self.gemblem_ver)
            .field("honor[47, 49]", &self.honor)
            .field("virtue[49, 53]", &self.virtue)
            .field("is_pkmode_on[53, 54]", &self.is_pkmode_on)
            .field("sex[54, 55]", &self.sex)
            .field("move_data[55, 61]", &self.move_data)
            .field("x_size[61, 62]", &self.x_size)
            .field("y_size[62, 63]", &self.y_size)
            .field("clevel[63, 65]", &self.clevel)
        .finish()
    }
}

pub struct PacketCzCommandMer {
    pub packet_id: u16,
    pub type_: u16,
    pub command: char,
}

impl PacketId for PacketCzCommandMer {
    fn id(&self) -> &str {
       "0x022d"
    }
}

impl Debug for PacketCzCommandMer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCommandMer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
            .field("command[4, 5]", &self.command)
        .finish()
    }
}

pub struct PacketZcPropertyHomun {
    pub packet_id: u16,
    pub sz_name: String,
    pub b_modified: char,
    pub n_level: u16,
    pub n_fullness: u16,
    pub n_relationship: u16,
    pub itid: u16,
    pub atk: u16,
    pub matk: u16,
    pub hit: u16,
    pub critical: u16,
    pub def: u16,
    pub mdef: u16,
    pub flee: u16,
    pub aspd: u16,
    pub hp: u16,
    pub max_hp: u16,
    pub sp: u16,
    pub max_sp: u16,
    pub exp: u32,
    pub max_exp: u32,
    pub skpoint: u16,
    pub atkrange: u16,
}

impl PacketId for PacketZcPropertyHomun {
    fn id(&self) -> &str {
       "0x022e"
    }
}

impl Debug for PacketZcPropertyHomun {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPropertyHomun")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("sz_name[2, 26]", &self.sz_name)
            .field("b_modified[26, 27]", &self.b_modified)
            .field("n_level[27, 29]", &self.n_level)
            .field("n_fullness[29, 31]", &self.n_fullness)
            .field("n_relationship[31, 33]", &self.n_relationship)
            .field("itid[33, 35]", &self.itid)
            .field("atk[35, 37]", &self.atk)
            .field("matk[37, 39]", &self.matk)
            .field("hit[39, 41]", &self.hit)
            .field("critical[41, 43]", &self.critical)
            .field("def[43, 45]", &self.def)
            .field("mdef[45, 47]", &self.mdef)
            .field("flee[47, 49]", &self.flee)
            .field("aspd[49, 51]", &self.aspd)
            .field("hp[51, 53]", &self.hp)
            .field("max_hp[53, 55]", &self.max_hp)
            .field("sp[55, 57]", &self.sp)
            .field("max_sp[57, 59]", &self.max_sp)
            .field("exp[59, 63]", &self.exp)
            .field("max_exp[63, 67]", &self.max_exp)
            .field("skpoint[67, 69]", &self.skpoint)
            .field("atkrange[69, 71]", &self.atkrange)
        .finish()
    }
}

pub struct PacketZcChangestateMer {
    pub packet_id: u16,
    pub type_: char,
    pub state: char,
    pub gid: u32,
    pub data: u32,
}

impl PacketId for PacketZcChangestateMer {
    fn id(&self) -> &str {
       "0x0230"
    }
}

impl Debug for PacketZcChangestateMer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangestateMer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 3]", &self.type_)
            .field("state[3, 4]", &self.state)
            .field("gid[4, 8]", &self.gid)
            .field("data[8, 12]", &self.data)
        .finish()
    }
}

pub struct PacketCzRenameMer {
    pub packet_id: u16,
    pub name: String,
}

impl PacketId for PacketCzRenameMer {
    fn id(&self) -> &str {
       "0x0231"
    }
}

impl Debug for PacketCzRenameMer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRenameMer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
        .finish()
    }
}

pub struct PacketCzRequestMovenpc {
    pub packet_id: u16,
    pub gid: u32,
    pub dest: String,
}

impl PacketId for PacketCzRequestMovenpc {
    fn id(&self) -> &str {
       "0x0232"
    }
}

impl Debug for PacketCzRequestMovenpc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestMovenpc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("dest[6, 9]", &self.dest)
        .finish()
    }
}

pub struct PacketCzRequestActnpc {
    pub packet_id: u16,
    pub gid: u32,
    pub target_gid: u32,
    pub action: char,
}

impl PacketId for PacketCzRequestActnpc {
    fn id(&self) -> &str {
       "0x0233"
    }
}

impl Debug for PacketCzRequestActnpc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestActnpc")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("target_gid[6, 10]", &self.target_gid)
            .field("action[10, 11]", &self.action)
        .finish()
    }
}

pub struct PacketCzRequestMovetoowner {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketCzRequestMovetoowner {
    fn id(&self) -> &str {
       "0x0234"
    }
}

impl Debug for PacketCzRequestMovetoowner {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestMovetoowner")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketZcReqStorePassword {
    pub packet_id: u16,
    pub info: u16,
}

impl PacketId for PacketZcReqStorePassword {
    fn id(&self) -> &str {
       "0x023a"
    }
}

impl Debug for PacketZcReqStorePassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqStorePassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, 4]", &self.info)
        .finish()
    }
}

pub struct PacketCzAckStorePassword {
    pub packet_id: u16,
    pub type_: u16,
    pub password: String,
    pub new_password: String,
}

impl PacketId for PacketCzAckStorePassword {
    fn id(&self) -> &str {
       "0x023b"
    }
}

impl Debug for PacketCzAckStorePassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckStorePassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
            .field("password[4, 20]", &self.password)
            .field("new_password[20, 36]", &self.new_password)
        .finish()
    }
}

pub struct PacketZcResultStorePassword {
    pub packet_id: u16,
    pub result: u16,
    pub error_count: u16,
}

impl PacketId for PacketZcResultStorePassword {
    fn id(&self) -> &str {
       "0x023c"
    }
}

impl Debug for PacketZcResultStorePassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcResultStorePassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("error_count[4, 6]", &self.error_count)
        .finish()
    }
}

pub struct PacketAcEventResult {
    pub packet_id: u16,
    pub event_item_count: u32,
}

impl PacketId for PacketAcEventResult {
    fn id(&self) -> &str {
       "0x023d"
    }
}

impl Debug for PacketAcEventResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcEventResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("event_item_count[2, 6]", &self.event_item_count)
        .finish()
    }
}

pub struct PacketHcRequestCharacterPassword {
    pub packet_id: u16,
    pub result: u16,
    pub dummy_value: u32,
}

impl PacketId for PacketHcRequestCharacterPassword {
    fn id(&self) -> &str {
       "0x023e"
    }
}

impl Debug for PacketHcRequestCharacterPassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcRequestCharacterPassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("dummy_value[4, 8]", &self.dummy_value)
        .finish()
    }
}

pub struct PacketCzMailGetList {
    pub packet_id: u16,
}

impl PacketId for PacketCzMailGetList {
    fn id(&self) -> &str {
       "0x023f"
    }
}

impl Debug for PacketCzMailGetList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailGetList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcMailReqGetList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub mail_number: u32,
    pub mail_list: Vec<MailList>,
}

impl PacketId for PacketZcMailReqGetList {
    fn id(&self) -> &str {
       "0x0240"
    }
}

impl Debug for PacketZcMailReqGetList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailReqGetList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("mail_number[4, 8]", &self.mail_number)
            .field("mail_list[8, 81]", &self.mail_list)
        .finish()
    }
}

pub struct PacketCzMailOpen {
    pub packet_id: u16,
    pub mail_id: u32,
}

impl PacketId for PacketCzMailOpen {
    fn id(&self) -> &str {
       "0x0241"
    }
}

impl Debug for PacketCzMailOpen {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailOpen")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
        .finish()
    }
}

pub struct PacketZcMailReqOpen {
    pub packet_id: u16,
    pub packet_length: u16,
    pub mail_id: u32,
    pub header: String,
    pub from_name: String,
    pub delete_time: u32,
    pub money: u32,
    pub count: u32,
    pub itid: u16,
    pub type_: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub msg_len: char,
    pub msg: String,
}

impl PacketId for PacketZcMailReqOpen {
    fn id(&self) -> &str {
       "0x0242"
    }
}

impl Debug for PacketZcMailReqOpen {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailReqOpen")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("mail_id[4, 8]", &self.mail_id)
            .field("header[8, 48]", &self.header)
            .field("from_name[48, 72]", &self.from_name)
            .field("delete_time[72, 76]", &self.delete_time)
            .field("money[76, 80]", &self.money)
            .field("count[80, 84]", &self.count)
            .field("itid[84, 86]", &self.itid)
            .field("type_[86, 88]", &self.type_)
            .field("is_identified[88, 89]", &self.is_identified)
            .field("is_damaged[89, 90]", &self.is_damaged)
            .field("refining_level[90, 91]", &self.refining_level)
            .field("slot[91, ?]", &self.slot)
            .field("msg_len[99, 100]", &self.msg_len)
            .field("msg[100, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketCzMailDelete {
    pub packet_id: u16,
    pub mail_id: u32,
}

impl PacketId for PacketCzMailDelete {
    fn id(&self) -> &str {
       "0x0243"
    }
}

impl Debug for PacketCzMailDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
        .finish()
    }
}

pub struct PacketCzMailGetItem {
    pub packet_id: u16,
    pub mail_id: u32,
}

impl PacketId for PacketCzMailGetItem {
    fn id(&self) -> &str {
       "0x0244"
    }
}

impl Debug for PacketCzMailGetItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailGetItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
        .finish()
    }
}

pub struct PacketZcMailReqGetItem {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcMailReqGetItem {
    fn id(&self) -> &str {
       "0x0245"
    }
}

impl Debug for PacketZcMailReqGetItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailReqGetItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzMailResetItem {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketCzMailResetItem {
    fn id(&self) -> &str {
       "0x0246"
    }
}

impl Debug for PacketCzMailResetItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailResetItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketCzMailAddItem {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzMailAddItem {
    fn id(&self) -> &str {
       "0x0247"
    }
}

impl Debug for PacketCzMailAddItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailAddItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzMailSend {
    pub packet_id: u16,
    pub packet_length: u16,
    pub receive_name: String,
    pub header: String,
    pub msg_len: u32,
    pub msg: String,
}

impl PacketId for PacketCzMailSend {
    fn id(&self) -> &str {
       "0x0248"
    }
}

impl Debug for PacketCzMailSend {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMailSend")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("receive_name[4, 28]", &self.receive_name)
            .field("header[28, 68]", &self.header)
            .field("msg_len[68, 72]", &self.msg_len)
            .field("msg[72, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcMailReqSend {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcMailReqSend {
    fn id(&self) -> &str {
       "0x0249"
    }
}

impl Debug for PacketZcMailReqSend {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailReqSend")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketZcMailReceive {
    pub packet_id: u16,
    pub mail_id: u32,
    pub header: String,
    pub from_name: String,
}

impl PacketId for PacketZcMailReceive {
    fn id(&self) -> &str {
       "0x024a"
    }
}

impl Debug for PacketZcMailReceive {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailReceive")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
            .field("header[6, 46]", &self.header)
            .field("from_name[46, 70]", &self.from_name)
        .finish()
    }
}

pub struct PacketCzAuctionCreate {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketCzAuctionCreate {
    fn id(&self) -> &str {
       "0x024b"
    }
}

impl Debug for PacketCzAuctionCreate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionCreate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketCzAuctionAddItem {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzAuctionAddItem {
    fn id(&self) -> &str {
       "0x024c"
    }
}

impl Debug for PacketCzAuctionAddItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionAddItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketCzAuctionAdd {
    pub packet_id: u16,
    pub now_money: u32,
    pub max_money: u32,
    pub delete_hour: u16,
}

impl PacketId for PacketCzAuctionAdd {
    fn id(&self) -> &str {
       "0x024d"
    }
}

impl Debug for PacketCzAuctionAdd {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionAdd")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("now_money[2, 6]", &self.now_money)
            .field("max_money[6, 10]", &self.max_money)
            .field("delete_hour[10, 12]", &self.delete_hour)
        .finish()
    }
}

pub struct PacketCzAuctionAddCancel {
    pub packet_id: u16,
    pub auction_id: u32,
}

impl PacketId for PacketCzAuctionAddCancel {
    fn id(&self) -> &str {
       "0x024e"
    }
}

impl Debug for PacketCzAuctionAddCancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionAddCancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auction_id[2, 6]", &self.auction_id)
        .finish()
    }
}

pub struct PacketCzAuctionBuy {
    pub packet_id: u16,
    pub auction_id: u32,
    pub money: u32,
}

impl PacketId for PacketCzAuctionBuy {
    fn id(&self) -> &str {
       "0x024f"
    }
}

impl Debug for PacketCzAuctionBuy {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionBuy")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auction_id[2, 6]", &self.auction_id)
            .field("money[6, 10]", &self.money)
        .finish()
    }
}

pub struct PacketZcAuctionResult {
    pub packet_id: u16,
    pub result: char,
}

impl PacketId for PacketZcAuctionResult {
    fn id(&self) -> &str {
       "0x0250"
    }
}

impl Debug for PacketZcAuctionResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAuctionResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 3]", &self.result)
        .finish()
    }
}

pub struct PacketCzAuctionItemSearch {
    pub packet_id: u16,
    pub type_: u16,
    pub auction_id: u32,
    pub name: String,
    pub page: u16,
}

impl PacketId for PacketCzAuctionItemSearch {
    fn id(&self) -> &str {
       "0x0251"
    }
}

impl Debug for PacketCzAuctionItemSearch {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionItemSearch")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
            .field("auction_id[4, 8]", &self.auction_id)
            .field("name[8, 32]", &self.name)
            .field("page[32, 34]", &self.page)
        .finish()
    }
}

pub struct PacketZcAuctionItemReqSearch {
    pub packet_id: u16,
    pub packet_length: u16,
    pub max_page: u32,
    pub number: u32,
    pub auction_item_list: Vec<AuctionItemSearchInfo>,
}

impl PacketId for PacketZcAuctionItemReqSearch {
    fn id(&self) -> &str {
       "0x0252"
    }
}

impl Debug for PacketZcAuctionItemReqSearch {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAuctionItemReqSearch")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("max_page[4, 8]", &self.max_page)
            .field("number[8, 12]", &self.number)
            .field("auction_item_list[12, 95]", &self.auction_item_list)
        .finish()
    }
}

pub struct PacketZcStarplace {
    pub packet_id: u16,
    pub which: char,
}

impl PacketId for PacketZcStarplace {
    fn id(&self) -> &str {
       "0x0253"
    }
}

impl Debug for PacketZcStarplace {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStarplace")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("which[2, 3]", &self.which)
        .finish()
    }
}

pub struct PacketCzAgreeStarplace {
    pub packet_id: u16,
    pub which: char,
}

impl PacketId for PacketCzAgreeStarplace {
    fn id(&self) -> &str {
       "0x0254"
    }
}

impl Debug for PacketCzAgreeStarplace {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAgreeStarplace")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("which[2, 3]", &self.which)
        .finish()
    }
}

pub struct PacketZcAckMailAddItem {
    pub packet_id: u16,
    pub index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckMailAddItem {
    fn id(&self) -> &str {
       "0x0255"
    }
}

impl Debug for PacketZcAckMailAddItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckMailAddItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketZcAckAuctionAddItem {
    pub packet_id: u16,
    pub index: u16,
    pub result: char,
}

impl PacketId for PacketZcAckAuctionAddItem {
    fn id(&self) -> &str {
       "0x0256"
    }
}

impl Debug for PacketZcAckAuctionAddItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckAuctionAddItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketZcAckMailDelete {
    pub packet_id: u16,
    pub mail_id: u32,
    pub result: u16,
}

impl PacketId for PacketZcAckMailDelete {
    fn id(&self) -> &str {
       "0x0257"
    }
}

impl Debug for PacketZcAckMailDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckMailDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
            .field("result[6, 8]", &self.result)
        .finish()
    }
}

pub struct PacketCaReqGameGuardCheck {
    pub packet_id: u16,
}

impl PacketId for PacketCaReqGameGuardCheck {
    fn id(&self) -> &str {
       "0x0258"
    }
}

impl Debug for PacketCaReqGameGuardCheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaReqGameGuardCheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketAcAckGameGuard {
    pub packet_id: u16,
    pub uc_answer: char,
}

impl PacketId for PacketAcAckGameGuard {
    fn id(&self) -> &str {
       "0x0259"
    }
}

impl Debug for PacketAcAckGameGuard {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckGameGuard")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("uc_answer[2, 3]", &self.uc_answer)
        .finish()
    }
}

pub struct PacketZcMakingitemList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub id_list: u16,
}

impl PacketId for PacketZcMakingitemList {
    fn id(&self) -> &str {
       "0x025a"
    }
}

impl Debug for PacketZcMakingitemList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMakingitemList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("id_list[4, 6]", &self.id_list)
        .finish()
    }
}

pub struct PacketCzReqMakingitem {
    pub packet_id: u16,
    pub mk_type: u16,
    pub id: u16,
}

impl PacketId for PacketCzReqMakingitem {
    fn id(&self) -> &str {
       "0x025b"
    }
}

impl Debug for PacketCzReqMakingitem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqMakingitem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mk_type[2, 4]", &self.mk_type)
            .field("id[4, 6]", &self.id)
        .finish()
    }
}

pub struct PacketCzAuctionReqMyInfo {
    pub packet_id: u16,
    pub type_: u16,
}

impl PacketId for PacketCzAuctionReqMyInfo {
    fn id(&self) -> &str {
       "0x025c"
    }
}

impl Debug for PacketCzAuctionReqMyInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionReqMyInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
        .finish()
    }
}

pub struct PacketCzAuctionReqMySellStop {
    pub packet_id: u16,
    pub auction_id: u32,
}

impl PacketId for PacketCzAuctionReqMySellStop {
    fn id(&self) -> &str {
       "0x025d"
    }
}

impl Debug for PacketCzAuctionReqMySellStop {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAuctionReqMySellStop")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auction_id[2, 6]", &self.auction_id)
        .finish()
    }
}

pub struct PacketZcAuctionAckMySellStop {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketZcAuctionAckMySellStop {
    fn id(&self) -> &str {
       "0x025e"
    }
}

impl Debug for PacketZcAuctionAckMySellStop {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAuctionAckMySellStop")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketZcAuctionWindows {
    pub packet_id: u16,
    pub type_: u32,
}

impl PacketId for PacketZcAuctionWindows {
    fn id(&self) -> &str {
       "0x025f"
    }
}

impl Debug for PacketZcAuctionWindows {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAuctionWindows")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
        .finish()
    }
}

pub struct PacketZcMailWindows {
    pub packet_id: u16,
    pub type_: u32,
}

impl PacketId for PacketZcMailWindows {
    fn id(&self) -> &str {
       "0x0260"
    }
}

impl Debug for PacketZcMailWindows {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMailWindows")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
        .finish()
    }
}

pub struct PacketAcReqLoginOldekey {
    pub packet_id: u16,
    pub m_seed_value: String,
}

impl PacketId for PacketAcReqLoginOldekey {
    fn id(&self) -> &str {
       "0x0261"
    }
}

impl Debug for PacketAcReqLoginOldekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcReqLoginOldekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("m_seed_value[2, 11]", &self.m_seed_value)
        .finish()
    }
}

pub struct PacketAcReqLoginNewekey {
    pub packet_id: u16,
    pub m_seed_value: String,
}

impl PacketId for PacketAcReqLoginNewekey {
    fn id(&self) -> &str {
       "0x0262"
    }
}

impl Debug for PacketAcReqLoginNewekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcReqLoginNewekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("m_seed_value[2, 11]", &self.m_seed_value)
        .finish()
    }
}

pub struct PacketAcReqLoginCardpass {
    pub packet_id: u16,
    pub m_seed_value: String,
}

impl PacketId for PacketAcReqLoginCardpass {
    fn id(&self) -> &str {
       "0x0263"
    }
}

impl Debug for PacketAcReqLoginCardpass {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcReqLoginCardpass")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("m_seed_value[2, 11]", &self.m_seed_value)
        .finish()
    }
}

pub struct PacketCaAckLoginOldekey {
    pub packet_id: u16,
    pub m_seed_value: String,
    pub m_ekey: String,
}

impl PacketId for PacketCaAckLoginOldekey {
    fn id(&self) -> &str {
       "0x0264"
    }
}

impl Debug for PacketCaAckLoginOldekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaAckLoginOldekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("m_seed_value[2, 11]", &self.m_seed_value)
            .field("m_ekey[11, 20]", &self.m_ekey)
        .finish()
    }
}

pub struct PacketCaAckLoginNewekey {
    pub packet_id: u16,
    pub m_seed_value: String,
    pub m_ekey: String,
}

impl PacketId for PacketCaAckLoginNewekey {
    fn id(&self) -> &str {
       "0x0265"
    }
}

impl Debug for PacketCaAckLoginNewekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaAckLoginNewekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("m_seed_value[2, 11]", &self.m_seed_value)
            .field("m_ekey[11, 20]", &self.m_ekey)
        .finish()
    }
}

pub struct PacketCaAckLoginCardpass {
    pub packet_id: u16,
    pub mcard_pass: String,
}

impl PacketId for PacketCaAckLoginCardpass {
    fn id(&self) -> &str {
       "0x0266"
    }
}

impl Debug for PacketCaAckLoginCardpass {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaAckLoginCardpass")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mcard_pass[2, 30]", &self.mcard_pass)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailNotexist {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailNotexist {
    fn id(&self) -> &str {
       "0x0267"
    }
}

impl Debug for PacketAcAckEkeyFailNotexist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailNotexist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailNotusesekey {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailNotusesekey {
    fn id(&self) -> &str {
       "0x0268"
    }
}

impl Debug for PacketAcAckEkeyFailNotusesekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailNotusesekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailNotusedekey {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailNotusedekey {
    fn id(&self) -> &str {
       "0x0269"
    }
}

impl Debug for PacketAcAckEkeyFailNotusedekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailNotusedekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailAuthrefuse {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailAuthrefuse {
    fn id(&self) -> &str {
       "0x026a"
    }
}

impl Debug for PacketAcAckEkeyFailAuthrefuse {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailAuthrefuse")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailInputekey {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailInputekey {
    fn id(&self) -> &str {
       "0x026b"
    }
}

impl Debug for PacketAcAckEkeyFailInputekey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailInputekey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailNotice {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailNotice {
    fn id(&self) -> &str {
       "0x026c"
    }
}

impl Debug for PacketAcAckEkeyFailNotice {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailNotice")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckEkeyFailNeedcardpass {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckEkeyFailNeedcardpass {
    fn id(&self) -> &str {
       "0x026d"
    }
}

impl Debug for PacketAcAckEkeyFailNeedcardpass {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckEkeyFailNeedcardpass")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckAuthekeyFailNotmatchcardpass {
    pub packet_id: u16,
    pub error_code: u16,
}

impl PacketId for PacketAcAckAuthekeyFailNotmatchcardpass {
    fn id(&self) -> &str {
       "0x026e"
    }
}

impl Debug for PacketAcAckAuthekeyFailNotmatchcardpass {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckAuthekeyFailNotmatchcardpass")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 4]", &self.error_code)
        .finish()
    }
}

pub struct PacketAcAckFirstLogin {
    pub packet_id: u16,
}

impl PacketId for PacketAcAckFirstLogin {
    fn id(&self) -> &str {
       "0x026f"
    }
}

impl Debug for PacketAcAckFirstLogin {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckFirstLogin")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketAcReqLoginAccountInfo {
    pub packet_id: u16,
}

impl PacketId for PacketAcReqLoginAccountInfo {
    fn id(&self) -> &str {
       "0x0270"
    }
}

impl Debug for PacketAcReqLoginAccountInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcReqLoginAccountInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCaAckLoginAccountInfo {
    pub packet_id: u16,
    pub sex: u16,
    pub b_point: u16,
    pub email: String,
}

impl PacketId for PacketCaAckLoginAccountInfo {
    fn id(&self) -> &str {
       "0x0271"
    }
}

impl Debug for PacketCaAckLoginAccountInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaAckLoginAccountInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("sex[2, 4]", &self.sex)
            .field("b_point[4, 6]", &self.b_point)
            .field("email[6, 40]", &self.email)
        .finish()
    }
}

pub struct PacketAcAckPtIdInfo {
    pub packet_id: u16,
    pub sz_ptid: String,
    pub sz_ptnum_id: String,
}

impl PacketId for PacketAcAckPtIdInfo {
    fn id(&self) -> &str {
       "0x0272"
    }
}

impl Debug for PacketAcAckPtIdInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAckPtIdInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("sz_ptid[2, 23]", &self.sz_ptid)
            .field("sz_ptnum_id[23, 44]", &self.sz_ptnum_id)
        .finish()
    }
}

pub struct PacketCzReqMailReturn {
    pub packet_id: u16,
    pub mail_id: u32,
    pub receive_name: String,
}

impl PacketId for PacketCzReqMailReturn {
    fn id(&self) -> &str {
       "0x0273"
    }
}

impl Debug for PacketCzReqMailReturn {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqMailReturn")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
            .field("receive_name[6, 30]", &self.receive_name)
        .finish()
    }
}

pub struct PacketZcAckMailReturn {
    pub packet_id: u16,
    pub mail_id: u32,
    pub result: u16,
}

impl PacketId for PacketZcAckMailReturn {
    fn id(&self) -> &str {
       "0x0274"
    }
}

impl Debug for PacketZcAckMailReturn {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckMailReturn")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("mail_id[2, 6]", &self.mail_id)
            .field("result[6, 8]", &self.result)
        .finish()
    }
}

pub struct PacketChEnter2 {
    pub packet_id: u16,
    pub aid: u32,
    pub auth_code: u32,
    pub user_level: u32,
    pub client_type: u16,
    pub sex: char,
    pub mac_data: String,
    pub i_account_sid: u32,
}

impl PacketId for PacketChEnter2 {
    fn id(&self) -> &str {
       "0x0275"
    }
}

impl Debug for PacketChEnter2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChEnter2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("auth_code[6, 10]", &self.auth_code)
            .field("user_level[10, 14]", &self.user_level)
            .field("client_type[14, 16]", &self.client_type)
            .field("sex[16, 17]", &self.sex)
            .field("mac_data[17, 33]", &self.mac_data)
            .field("i_account_sid[33, 37]", &self.i_account_sid)
        .finish()
    }
}

pub struct PacketAcAcceptLogin2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub auth_code: u32,
    pub aid: u32,
    pub user_level: u32,
    pub last_login_ip: u32,
    pub last_login_time: String,
    pub sex: char,
    pub i_account_sid: u32,
}

impl PacketId for PacketAcAcceptLogin2 {
    fn id(&self) -> &str {
       "0x0276"
    }
}

impl Debug for PacketAcAcceptLogin2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcAcceptLogin2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("auth_code[4, 8]", &self.auth_code)
            .field("aid[8, 12]", &self.aid)
            .field("user_level[12, 16]", &self.user_level)
            .field("last_login_ip[16, 20]", &self.last_login_ip)
            .field("last_login_time[20, 46]", &self.last_login_time)
            .field("sex[46, 47]", &self.sex)
            .field("i_account_sid[47, 51]", &self.i_account_sid)
        .finish()
    }
}

pub struct PacketCaLoginPcbang {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd: String,
    pub clienttype: char,
    pub ip: String,
    pub mac_adress: String,
}

impl PacketId for PacketCaLoginPcbang {
    fn id(&self) -> &str {
       "0x0277"
    }
}

impl Debug for PacketCaLoginPcbang {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLoginPcbang")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd[30, 54]", &self.passwd)
            .field("clienttype[54, 55]", &self.clienttype)
            .field("ip[55, 71]", &self.ip)
            .field("mac_adress[71, 84]", &self.mac_adress)
        .finish()
    }
}

pub struct PacketZcNotifyPcbang {
    pub packet_id: u16,
}

impl PacketId for PacketZcNotifyPcbang {
    fn id(&self) -> &str {
       "0x0278"
    }
}

impl Debug for PacketZcNotifyPcbang {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPcbang")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzHuntinglist {
    pub packet_id: u16,
}

impl PacketId for PacketCzHuntinglist {
    fn id(&self) -> &str {
       "0x0279"
    }
}

impl Debug for PacketCzHuntinglist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzHuntinglist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcHuntinglist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub hunting_list: Vec<PacketMobHunting>,
}

impl PacketId for PacketZcHuntinglist {
    fn id(&self) -> &str {
       "0x027a"
    }
}

impl Debug for PacketZcHuntinglist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcHuntinglist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("hunting_list[4, 16]", &self.hunting_list)
        .finish()
    }
}

pub struct PacketZcPcbangEffect {
    pub packet_id: u16,
    pub exp_factor: u32,
    pub exp_factor2: u32,
    pub drop_factor: u32,
}

impl PacketId for PacketZcPcbangEffect {
    fn id(&self) -> &str {
       "0x027b"
    }
}

impl Debug for PacketZcPcbangEffect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcbangEffect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp_factor[2, 6]", &self.exp_factor)
            .field("exp_factor2[6, 10]", &self.exp_factor2)
            .field("drop_factor[10, 14]", &self.drop_factor)
        .finish()
    }
}

pub struct PacketCaLogin4 {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd_md5: String,
    pub clienttype: char,
    pub mac_data: String,
}

impl PacketId for PacketCaLogin4 {
    fn id(&self) -> &str {
       "0x027c"
    }
}

impl Debug for PacketCaLogin4 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLogin4")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd_md5[30, 46]", &self.passwd_md5)
            .field("clienttype[46, 47]", &self.clienttype)
            .field("mac_data[47, 60]", &self.mac_data)
        .finish()
    }
}

pub struct PacketZcPropertyMerce {
    pub packet_id: u16,
    pub name: String,
    pub level: u16,
    pub faith: u16,
    pub summon_count: u16,
    pub atk: u16,
    pub matk: u16,
    pub hit: u16,
    pub critical: u16,
    pub def: u16,
    pub mdef: u16,
    pub flee: u16,
    pub aspd: u16,
    pub hp: u16,
    pub max_hp: u16,
    pub sp: u16,
    pub max_sp: u16,
    pub atkrange: u16,
    pub exp: u32,
}

impl PacketId for PacketZcPropertyMerce {
    fn id(&self) -> &str {
       "0x027d"
    }
}

impl Debug for PacketZcPropertyMerce {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPropertyMerce")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("level[26, 28]", &self.level)
            .field("faith[28, 30]", &self.faith)
            .field("summon_count[30, 32]", &self.summon_count)
            .field("atk[32, 34]", &self.atk)
            .field("matk[34, 36]", &self.matk)
            .field("hit[36, 38]", &self.hit)
            .field("critical[38, 40]", &self.critical)
            .field("def[40, 42]", &self.def)
            .field("mdef[42, 44]", &self.mdef)
            .field("flee[44, 46]", &self.flee)
            .field("aspd[46, 48]", &self.aspd)
            .field("hp[48, 50]", &self.hp)
            .field("max_hp[50, 52]", &self.max_hp)
            .field("sp[52, 54]", &self.sp)
            .field("max_sp[54, 56]", &self.max_sp)
            .field("atkrange[56, 58]", &self.atkrange)
            .field("exp[58, 62]", &self.exp)
        .finish()
    }
}

pub struct PacketZcShandaProtect {
    pub packet_id: u16,
    pub packet_length: u16,
    pub code_len: u16,
    pub code: String,
}

impl PacketId for PacketZcShandaProtect {
    fn id(&self) -> &str {
       "0x027e"
    }
}

impl Debug for PacketZcShandaProtect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShandaProtect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("code_len[4, 6]", &self.code_len)
            .field("code[6, ?]", &self.code)
        .finish()
    }
}

pub struct PacketCaClientType {
    pub packet_id: u16,
    pub client_type: u16,
    pub n_ver: u32,
}

impl PacketId for PacketCaClientType {
    fn id(&self) -> &str {
       "0x027f"
    }
}

impl Debug for PacketCaClientType {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaClientType")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("client_type[2, 4]", &self.client_type)
            .field("n_ver[4, 8]", &self.n_ver)
        .finish()
    }
}

pub struct PacketZcGangsiPoint {
    pub packet_id: u16,
    pub point: u32,
    pub total_point: u32,
    pub packet_switch: u16,
}

impl PacketId for PacketZcGangsiPoint {
    fn id(&self) -> &str {
       "0x0280"
    }
}

impl Debug for PacketZcGangsiPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGangsiPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point[2, 6]", &self.point)
            .field("total_point[6, 10]", &self.total_point)
            .field("packet_switch[10, 12]", &self.packet_switch)
        .finish()
    }
}

pub struct PacketCzGangsiRank {
    pub packet_id: u16,
    pub packet_switch: u16,
}

impl PacketId for PacketCzGangsiRank {
    fn id(&self) -> &str {
       "0x0281"
    }
}

impl Debug for PacketCzGangsiRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGangsiRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_switch[2, 4]", &self.packet_switch)
        .finish()
    }
}

pub struct PacketZcGangsiRank {
    pub packet_id: u16,
    pub name: String,
    pub point: u32,
    pub packet_switch: u16,
}

impl PacketId for PacketZcGangsiRank {
    fn id(&self) -> &str {
       "0x0282"
    }
}

impl Debug for PacketZcGangsiRank {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGangsiRank")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 12]", &self.name)
            .field("point[242, 246]", &self.point)
            .field("packet_switch[282, 284]", &self.packet_switch)
        .finish()
    }
}

pub struct PacketZcAid {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketZcAid {
    fn id(&self) -> &str {
       "0x0283"
    }
}

impl Debug for PacketZcAid {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAid")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcNotifyEffect3 {
    pub packet_id: u16,
    pub aid: u32,
    pub effect_id: u32,
    pub numdata: u32,
}

impl PacketId for PacketZcNotifyEffect3 {
    fn id(&self) -> &str {
       "0x0284"
    }
}

impl Debug for PacketZcNotifyEffect3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyEffect3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("effect_id[6, 10]", &self.effect_id)
            .field("numdata[10, 14]", &self.numdata)
        .finish()
    }
}

pub struct PacketZcDeathQuestion {
    pub packet_id: u16,
    pub qcategory: u16,
    pub qnum: u16,
}

impl PacketId for PacketZcDeathQuestion {
    fn id(&self) -> &str {
       "0x0285"
    }
}

impl Debug for PacketZcDeathQuestion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeathQuestion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("qcategory[2, 4]", &self.qcategory)
            .field("qnum[4, 6]", &self.qnum)
        .finish()
    }
}

pub struct PacketCzDeathQuestion {
    pub packet_id: u16,
    pub qanswer: u16,
}

impl PacketId for PacketCzDeathQuestion {
    fn id(&self) -> &str {
       "0x0286"
    }
}

impl Debug for PacketCzDeathQuestion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzDeathQuestion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("qanswer[2, 4]", &self.qanswer)
        .finish()
    }
}

pub struct PacketZcPcCashPointItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub cash_point: u32,
    pub item_list: Vec<PurchaseItem>,
}

impl PacketId for PacketZcPcCashPointItemlist {
    fn id(&self) -> &str {
       "0x0287"
    }
}

impl Debug for PacketZcPcCashPointItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcCashPointItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("cash_point[4, 8]", &self.cash_point)
            .field("item_list[8, 19]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPcBuyCashPointItem {
    pub packet_id: u16,
    pub itid: u16,
    pub count: u16,
}

impl PacketId for PacketCzPcBuyCashPointItem {
    fn id(&self) -> &str {
       "0x0288"
    }
}

impl Debug for PacketCzPcBuyCashPointItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPcBuyCashPointItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketZcPcCashPointUpdate {
    pub packet_id: u16,
    pub cash_point: u32,
    pub error: u16,
}

impl PacketId for PacketZcPcCashPointUpdate {
    fn id(&self) -> &str {
       "0x0289"
    }
}

impl Debug for PacketZcPcCashPointUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcCashPointUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("cash_point[2, 6]", &self.cash_point)
            .field("error[6, 8]", &self.error)
        .finish()
    }
}

pub struct PacketZcNpcShowefstUpdate {
    pub packet_id: u16,
    pub aid: u32,
    pub effect_state: u32,
    pub clevel: u32,
    pub show_efst: u32,
}

impl PacketId for PacketZcNpcShowefstUpdate {
    fn id(&self) -> &str {
       "0x028a"
    }
}

impl Debug for PacketZcNpcShowefstUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcShowefstUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("effect_state[6, 10]", &self.effect_state)
            .field("clevel[10, 14]", &self.clevel)
            .field("show_efst[14, 18]", &self.show_efst)
        .finish()
    }
}

pub struct PacketChSelectCharGoingtobeused {
    pub packet_id: u16,
    pub dw_aid: u32,
    pub n_count_selected_char: u32,
    pub ardw_selected_gid: u32,
}

impl PacketId for PacketChSelectCharGoingtobeused {
    fn id(&self) -> &str {
       "0x028c"
    }
}

impl Debug for PacketChSelectCharGoingtobeused {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChSelectCharGoingtobeused")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("dw_aid[2, 6]", &self.dw_aid)
            .field("n_count_selected_char[6, 10]", &self.n_count_selected_char)
            .field("ardw_selected_gid[10, 14]", &self.ardw_selected_gid)
        .finish()
    }
}

pub struct PacketChReqIsValidCharname {
    pub packet_id: u16,
    pub dw_aid: u32,
    pub dw_gid: u32,
    pub sz_char_name: String,
}

impl PacketId for PacketChReqIsValidCharname {
    fn id(&self) -> &str {
       "0x028d"
    }
}

impl Debug for PacketChReqIsValidCharname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChReqIsValidCharname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("dw_aid[2, 6]", &self.dw_aid)
            .field("dw_gid[6, 10]", &self.dw_gid)
            .field("sz_char_name[10, 34]", &self.sz_char_name)
        .finish()
    }
}

pub struct PacketHcAckIsValidCharname {
    pub packet_id: u16,
    pub s_result: u16,
}

impl PacketId for PacketHcAckIsValidCharname {
    fn id(&self) -> &str {
       "0x028e"
    }
}

impl Debug for PacketHcAckIsValidCharname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcAckIsValidCharname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("s_result[2, 4]", &self.s_result)
        .finish()
    }
}

pub struct PacketChReqChangeCharname {
    pub packet_id: u16,
    pub dw_gid: u32,
}

impl PacketId for PacketChReqChangeCharname {
    fn id(&self) -> &str {
       "0x028f"
    }
}

impl Debug for PacketChReqChangeCharname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChReqChangeCharname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("dw_gid[2, 6]", &self.dw_gid)
        .finish()
    }
}

pub struct PacketHcAckChangeCharname {
    pub packet_id: u16,
    pub s_result: u16,
}

impl PacketId for PacketHcAckChangeCharname {
    fn id(&self) -> &str {
       "0x0290"
    }
}

impl Debug for PacketHcAckChangeCharname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcAckChangeCharname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("s_result[2, 4]", &self.s_result)
        .finish()
    }
}

pub struct PacketZcMsg {
    pub packet_id: u16,
    pub msg: u16,
}

impl PacketId for PacketZcMsg {
    fn id(&self) -> &str {
       "0x0291"
    }
}

impl Debug for PacketZcMsg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMsg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("msg[2, 4]", &self.msg)
        .finish()
    }
}

pub struct PacketCzStandingResurrection {
    pub packet_id: u16,
}

impl PacketId for PacketCzStandingResurrection {
    fn id(&self) -> &str {
       "0x0292"
    }
}

impl Debug for PacketCzStandingResurrection {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzStandingResurrection")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcBossInfo {
    pub packet_id: u16,
    pub info_type: char,
    pub x_pos: u32,
    pub y_pos: u32,
    pub min_hour: u16,
    pub min_minute: u16,
    pub max_hour: u16,
    pub max_minute: u16,
    pub name: String,
}

impl PacketId for PacketZcBossInfo {
    fn id(&self) -> &str {
       "0x0293"
    }
}

impl Debug for PacketZcBossInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBossInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info_type[2, 3]", &self.info_type)
            .field("x_pos[3, 7]", &self.x_pos)
            .field("y_pos[7, 11]", &self.y_pos)
            .field("min_hour[11, 13]", &self.min_hour)
            .field("min_minute[13, 15]", &self.min_minute)
            .field("max_hour[15, 17]", &self.max_hour)
            .field("max_minute[17, 19]", &self.max_minute)
            .field("name[19, 70]", &self.name)
        .finish()
    }
}

pub struct PacketZcReadBook {
    pub packet_id: u16,
    pub book_id: u32,
    pub page: u32,
}

impl PacketId for PacketZcReadBook {
    fn id(&self) -> &str {
       "0x0294"
    }
}

impl Debug for PacketZcReadBook {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReadBook")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("book_id[2, 6]", &self.book_id)
            .field("page[6, 10]", &self.page)
        .finish()
    }
}

pub struct PacketZcEquipmentItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo2>,
}

impl PacketId for PacketZcEquipmentItemlist2 {
    fn id(&self) -> &str {
       "0x0295"
    }
}

impl Debug for PacketZcEquipmentItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipmentItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 28]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreEquipmentItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo2>,
}

impl PacketId for PacketZcStoreEquipmentItemlist2 {
    fn id(&self) -> &str {
       "0x0296"
    }
}

impl Debug for PacketZcStoreEquipmentItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreEquipmentItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 28]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCartEquipmentItemlist2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo2>,
}

impl PacketId for PacketZcCartEquipmentItemlist2 {
    fn id(&self) -> &str {
       "0x0297"
    }
}

impl Debug for PacketZcCartEquipmentItemlist2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartEquipmentItemlist2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 28]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCashTimeCounter {
    pub packet_id: u16,
    pub itid: u16,
    pub remain_second: u32,
}

impl PacketId for PacketZcCashTimeCounter {
    fn id(&self) -> &str {
       "0x0298"
    }
}

impl Debug for PacketZcCashTimeCounter {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCashTimeCounter")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
            .field("remain_second[4, 8]", &self.remain_second)
        .finish()
    }
}

pub struct PacketZcCashItemDelete {
    pub packet_id: u16,
    pub index: u16,
    pub itid: u16,
}

impl PacketId for PacketZcCashItemDelete {
    fn id(&self) -> &str {
       "0x0299"
    }
}

impl Debug for PacketZcCashItemDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCashItemDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("itid[4, 6]", &self.itid)
        .finish()
    }
}

pub struct PacketZcItemPickupAck2 {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub location: u16,
    pub type_: char,
    pub result: char,
    pub hire_expire_date: u32,
}

impl PacketId for PacketZcItemPickupAck2 {
    fn id(&self) -> &str {
       "0x029a"
    }
}

impl Debug for PacketZcItemPickupAck2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemPickupAck2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("is_damaged[9, 10]", &self.is_damaged)
            .field("refining_level[10, 11]", &self.refining_level)
            .field("slot[11, ?]", &self.slot)
            .field("location[19, 21]", &self.location)
            .field("type_[21, 22]", &self.type_)
            .field("result[22, 23]", &self.result)
            .field("hire_expire_date[23, 27]", &self.hire_expire_date)
        .finish()
    }
}

pub struct PacketZcMerInit {
    pub packet_id: u16,
    pub aid: u32,
    pub atk: u16,
    pub matk: u16,
    pub hit: u16,
    pub critical: u16,
    pub def: u16,
    pub mdef: u16,
    pub flee: u16,
    pub aspd: u16,
    pub name: String,
    pub level: u16,
    pub hp: u32,
    pub max_hp: u32,
    pub sp: u32,
    pub max_sp: u32,
    pub expire_date: u32,
    pub faith: u16,
    pub toal_call_num: u32,
    pub approval_monster_kill_counter: u32,
    pub atkrange: u16,
}

impl PacketId for PacketZcMerInit {
    fn id(&self) -> &str {
       "0x029b"
    }
}

impl Debug for PacketZcMerInit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMerInit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("atk[6, 8]", &self.atk)
            .field("matk[8, 10]", &self.matk)
            .field("hit[10, 12]", &self.hit)
            .field("critical[12, 14]", &self.critical)
            .field("def[14, 16]", &self.def)
            .field("mdef[16, 18]", &self.mdef)
            .field("flee[18, 20]", &self.flee)
            .field("aspd[20, 22]", &self.aspd)
            .field("name[22, 46]", &self.name)
            .field("level[46, 48]", &self.level)
            .field("hp[48, 52]", &self.hp)
            .field("max_hp[52, 56]", &self.max_hp)
            .field("sp[56, 60]", &self.sp)
            .field("max_sp[60, 64]", &self.max_sp)
            .field("expire_date[64, 68]", &self.expire_date)
            .field("faith[68, 70]", &self.faith)
            .field("toal_call_num[70, 74]", &self.toal_call_num)
            .field("approval_monster_kill_counter[74, 78]", &self.approval_monster_kill_counter)
            .field("atkrange[78, 80]", &self.atkrange)
        .finish()
    }
}

pub struct PacketZcMerProperty {
    pub packet_id: u16,
    pub atk: u16,
    pub matk: u16,
    pub hit: u16,
    pub critical: u16,
    pub def: u16,
    pub mdef: u16,
    pub flee: u16,
    pub aspd: u16,
    pub name: String,
    pub level: u16,
    pub hp: u16,
    pub max_hp: u16,
    pub sp: u16,
    pub max_sp: u16,
    pub expire_date: u32,
    pub faith: u16,
    pub toal_call_num: u32,
    pub approval_monster_kill_counter: u32,
}

impl PacketId for PacketZcMerProperty {
    fn id(&self) -> &str {
       "0x029c"
    }
}

impl Debug for PacketZcMerProperty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMerProperty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("atk[2, 4]", &self.atk)
            .field("matk[4, 6]", &self.matk)
            .field("hit[6, 8]", &self.hit)
            .field("critical[8, 10]", &self.critical)
            .field("def[10, 12]", &self.def)
            .field("mdef[12, 14]", &self.mdef)
            .field("flee[14, 16]", &self.flee)
            .field("aspd[16, 18]", &self.aspd)
            .field("name[18, 42]", &self.name)
            .field("level[42, 44]", &self.level)
            .field("hp[44, 46]", &self.hp)
            .field("max_hp[46, 48]", &self.max_hp)
            .field("sp[48, 50]", &self.sp)
            .field("max_sp[50, 52]", &self.max_sp)
            .field("expire_date[52, 56]", &self.expire_date)
            .field("faith[56, 58]", &self.faith)
            .field("toal_call_num[58, 62]", &self.toal_call_num)
            .field("approval_monster_kill_counter[62, 66]", &self.approval_monster_kill_counter)
        .finish()
    }
}

pub struct PacketZcMerSkillinfoList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub skill_list: Vec<SKILLINFO>,
}

impl PacketId for PacketZcMerSkillinfoList {
    fn id(&self) -> &str {
       "0x029d"
    }
}

impl Debug for PacketZcMerSkillinfoList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMerSkillinfoList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("skill_list[4, 41]", &self.skill_list)
        .finish()
    }
}

pub struct PacketZcMerSkillinfoUpdate {
    pub packet_id: u16,
    pub skid: u16,
    pub level: u16,
    pub spcost: u16,
    pub attack_range: u16,
    pub upgradable: bool,
}

impl PacketId for PacketZcMerSkillinfoUpdate {
    fn id(&self) -> &str {
       "0x029e"
    }
}

impl Debug for PacketZcMerSkillinfoUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMerSkillinfoUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("level[4, 6]", &self.level)
            .field("spcost[6, 8]", &self.spcost)
            .field("attack_range[8, 10]", &self.attack_range)
            .field("upgradable[10, 11]", &self.upgradable)
        .finish()
    }
}

pub struct PacketCzMerCommand {
    pub packet_id: u16,
    pub command: char,
}

impl PacketId for PacketCzMerCommand {
    fn id(&self) -> &str {
       "0x029f"
    }
}

impl Debug for PacketCzMerCommand {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMerCommand")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("command[2, 3]", &self.command)
        .finish()
    }
}

pub struct UnusedPacketCzMerUseSkill {
    pub packet_id: u16,
    pub selected_level: u16,
    pub skid: u16,
    pub target_id: u32,
}

impl PacketId for UnusedPacketCzMerUseSkill {
    fn id(&self) -> &str {
       "0x02a0"
    }
}

impl Debug for UnusedPacketCzMerUseSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("UnusedPacketCzMerUseSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("selected_level[2, 4]", &self.selected_level)
            .field("skid[4, 6]", &self.skid)
            .field("target_id[6, 10]", &self.target_id)
        .finish()
    }
}

pub struct UnusedPacketCzMerUpgradeSkilllevel {
    pub packet_id: u16,
    pub skid: u16,
}

impl PacketId for UnusedPacketCzMerUpgradeSkilllevel {
    fn id(&self) -> &str {
       "0x02a1"
    }
}

impl Debug for UnusedPacketCzMerUpgradeSkilllevel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("UnusedPacketCzMerUpgradeSkilllevel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
        .finish()
    }
}

pub struct PacketZcMerParChange {
    pub packet_id: u16,
    pub var: u16,
    pub value: u32,
}

impl PacketId for PacketZcMerParChange {
    fn id(&self) -> &str {
       "0x02a2"
    }
}

impl Debug for PacketZcMerParChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMerParChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var[2, 4]", &self.var)
            .field("value[4, 8]", &self.value)
        .finish()
    }
}

pub struct PacketZcGameguardLingoKey {
    pub packet_id: u16,
    pub lingo_key: PggLingoKeyTemp,
}

impl PacketId for PacketZcGameguardLingoKey {
    fn id(&self) -> &str {
       "0x02a3"
    }
}

impl Debug for PacketZcGameguardLingoKey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcGameguardLingoKey")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("lingo_key[2, ?]", &self.lingo_key)
        .finish()
    }
}

pub struct PacketCzKsyEvent {
    pub packet_id: u16,
    pub index: u16,
    pub count: u32,
}

impl PacketId for PacketCzKsyEvent {
    fn id(&self) -> &str {
       "0x02a5"
    }
}

impl Debug for PacketCzKsyEvent {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzKsyEvent")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcReqCashPassword {
    pub packet_id: u16,
    pub info: u16,
}

impl PacketId for PacketZcReqCashPassword {
    fn id(&self) -> &str {
       "0x02aa"
    }
}

impl Debug for PacketZcReqCashPassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqCashPassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, 4]", &self.info)
        .finish()
    }
}

pub struct PacketCzAckCashPassword {
    pub packet_id: u16,
    pub type_: u16,
    pub password: String,
    pub new_password: String,
}

impl PacketId for PacketCzAckCashPassword {
    fn id(&self) -> &str {
       "0x02ab"
    }
}

impl Debug for PacketCzAckCashPassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzAckCashPassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 4]", &self.type_)
            .field("password[4, 20]", &self.password)
            .field("new_password[20, 36]", &self.new_password)
        .finish()
    }
}

pub struct PacketZcResultCashPassword {
    pub packet_id: u16,
    pub result: u16,
    pub error_count: u16,
}

impl PacketId for PacketZcResultCashPassword {
    fn id(&self) -> &str {
       "0x02ac"
    }
}

impl Debug for PacketZcResultCashPassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcResultCashPassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("error_count[4, 6]", &self.error_count)
        .finish()
    }
}

pub struct PacketAcRequestSecondPassword {
    pub packet_id: u16,
    pub result: u16,
    pub dw_seed: u32,
}

impl PacketId for PacketAcRequestSecondPassword {
    fn id(&self) -> &str {
       "0x02ad"
    }
}

impl Debug for PacketAcRequestSecondPassword {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcRequestSecondPassword")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("dw_seed[4, 8]", &self.dw_seed)
        .finish()
    }
}

pub struct PacketCaLoginHan {
    pub packet_id: u16,
    pub version: u32,
    pub id: String,
    pub passwd: String,
    pub clienttype: char,
    pub m_sz_ip: String,
    pub m_sz_mac_addr: String,
    pub is_han_game_user: char,
}

impl PacketId for PacketCaLoginHan {
    fn id(&self) -> &str {
       "0x02b0"
    }
}

impl Debug for PacketCaLoginHan {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaLoginHan")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("version[2, 6]", &self.version)
            .field("id[6, 30]", &self.id)
            .field("passwd[30, 54]", &self.passwd)
            .field("clienttype[54, 55]", &self.clienttype)
            .field("m_sz_ip[55, 71]", &self.m_sz_ip)
            .field("m_sz_mac_addr[71, 84]", &self.m_sz_mac_addr)
            .field("is_han_game_user[84, 85]", &self.is_han_game_user)
        .finish()
    }
}

pub struct PacketZcAllQuestList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub quest_count: u32,
    pub quest_list: Vec<PacketZcQuestInfo>,
}

impl PacketId for PacketZcAllQuestList {
    fn id(&self) -> &str {
       "0x02b1"
    }
}

impl Debug for PacketZcAllQuestList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAllQuestList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("quest_count[4, 8]", &self.quest_count)
            .field("quest_list[8, 13]", &self.quest_list)
        .finish()
    }
}

pub struct PacketZcAllQuestMission {
    pub packet_id: u16,
    pub packet_length: u16,
    pub count: u32,
    pub quest_mission_list: Vec<PacketZcQuestMissionInfo>,
}

impl PacketId for PacketZcAllQuestMission {
    fn id(&self) -> &str {
       "0x02b2"
    }
}

impl Debug for PacketZcAllQuestMission {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAllQuestMission")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("count[4, 8]", &self.count)
            .field("quest_mission_list[8, 112]", &self.quest_mission_list)
        .finish()
    }
}

pub struct PacketZcAddQuest {
    pub packet_id: u16,
    pub quest_id: u32,
    pub active: bool,
    pub quest_svr_time: u32,
    pub quest_end_time: u32,
    pub count: u16,
    pub hunt: Vec<PacketZcMissionHunt>,
}

impl PacketId for PacketZcAddQuest {
    fn id(&self) -> &str {
       "0x02b3"
    }
}

impl Debug for PacketZcAddQuest {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddQuest")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("quest_id[2, 6]", &self.quest_id)
            .field("active[6, 7]", &self.active)
            .field("quest_svr_time[7, 11]", &self.quest_svr_time)
            .field("quest_end_time[11, 15]", &self.quest_end_time)
            .field("count[15, 17]", &self.count)
            .field("hunt[17, 47]", &self.hunt)
        .finish()
    }
}

pub struct PacketZcDelQuest {
    pub packet_id: u16,
    pub quest_id: u32,
}

impl PacketId for PacketZcDelQuest {
    fn id(&self) -> &str {
       "0x02b4"
    }
}

impl Debug for PacketZcDelQuest {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDelQuest")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("quest_id[2, 6]", &self.quest_id)
        .finish()
    }
}

pub struct PacketZcUpdateMissionHunt {
    pub packet_id: u16,
    pub packet_length: u16,
    pub count: u16,
    pub mob_hunt_list: Vec<PacketMobHunting>,
}

impl PacketId for PacketZcUpdateMissionHunt {
    fn id(&self) -> &str {
       "0x02b5"
    }
}

impl Debug for PacketZcUpdateMissionHunt {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateMissionHunt")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("count[4, 6]", &self.count)
            .field("mob_hunt_list[6, 18]", &self.mob_hunt_list)
        .finish()
    }
}

pub struct PacketCzActiveQuest {
    pub packet_id: u16,
    pub quest_id: u32,
    pub active: bool,
}

impl PacketId for PacketCzActiveQuest {
    fn id(&self) -> &str {
       "0x02b6"
    }
}

impl Debug for PacketCzActiveQuest {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzActiveQuest")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("quest_id[2, 6]", &self.quest_id)
            .field("active[6, 7]", &self.active)
        .finish()
    }
}

pub struct PacketZcActiveQuest {
    pub packet_id: u16,
    pub quest_id: u32,
    pub active: bool,
}

impl PacketId for PacketZcActiveQuest {
    fn id(&self) -> &str {
       "0x02b7"
    }
}

impl Debug for PacketZcActiveQuest {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcActiveQuest")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("quest_id[2, 6]", &self.quest_id)
            .field("active[6, 7]", &self.active)
        .finish()
    }
}

pub struct PacketZcItemPickupParty {
    pub packet_id: u16,
    pub account_id: u32,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub location: u16,
    pub type_: char,
}

impl PacketId for PacketZcItemPickupParty {
    fn id(&self) -> &str {
       "0x02b8"
    }
}

impl Debug for PacketZcItemPickupParty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemPickupParty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_id[2, 6]", &self.account_id)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("is_damaged[9, 10]", &self.is_damaged)
            .field("refining_level[10, 11]", &self.refining_level)
            .field("slot[11, ?]", &self.slot)
            .field("location[19, 21]", &self.location)
            .field("type_[21, 22]", &self.type_)
        .finish()
    }
}

pub struct PacketZcShortcutKeyList {
    pub packet_id: u16,
    pub short_cut_key: Vec<ShortCutKey>,
}

impl PacketId for PacketZcShortcutKeyList {
    fn id(&self) -> &str {
       "0x02b9"
    }
}

impl Debug for PacketZcShortcutKeyList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShortcutKeyList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("short_cut_key[2, 9]", &self.short_cut_key)
        .finish()
    }
}

pub struct PacketCzShortcutKeyChange {
    pub packet_id: u16,
    pub index: u16,
    pub short_cut_key: ShortCutKey,
}

impl PacketId for PacketCzShortcutKeyChange {
    fn id(&self) -> &str {
       "0x02ba"
    }
}

impl Debug for PacketCzShortcutKeyChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzShortcutKeyChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("short_cut_key[4, ?]", &self.short_cut_key)
        .finish()
    }
}

pub struct PacketZcEquipitemDamaged {
    pub packet_id: u16,
    pub wear_location: u16,
    pub account_id: u32,
}

impl PacketId for PacketZcEquipitemDamaged {
    fn id(&self) -> &str {
       "0x02bb"
    }
}

impl Debug for PacketZcEquipitemDamaged {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipitemDamaged")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("wear_location[2, 4]", &self.wear_location)
            .field("account_id[4, 8]", &self.account_id)
        .finish()
    }
}

pub struct PacketZcNotifyPcbangPlayingTime {
    pub packet_id: u16,
    pub time_minute: u32,
}

impl PacketId for PacketZcNotifyPcbangPlayingTime {
    fn id(&self) -> &str {
       "0x02bc"
    }
}

impl Debug for PacketZcNotifyPcbangPlayingTime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyPcbangPlayingTime")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("time_minute[2, 6]", &self.time_minute)
        .finish()
    }
}

pub struct PacketZcSrpacketr2Init {
    pub packet_id: u16,
    pub protect_factor: u16,
    pub deform_seed_factor: u32,
    pub deform_add_factor: u32,
}

impl PacketId for PacketZcSrpacketr2Init {
    fn id(&self) -> &str {
       "0x02bf"
    }
}

impl Debug for PacketZcSrpacketr2Init {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSrpacketr2Init")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("protect_factor[2, 4]", &self.protect_factor)
            .field("deform_seed_factor[4, 8]", &self.deform_seed_factor)
            .field("deform_add_factor[8, 12]", &self.deform_add_factor)
        .finish()
    }
}

pub struct PacketCzSrpacketr2Start {
    pub packet_id: u16,
    pub protect_factor: u16,
}

impl PacketId for PacketCzSrpacketr2Start {
    fn id(&self) -> &str {
       "0x02c0"
    }
}

impl Debug for PacketCzSrpacketr2Start {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSrpacketr2Start")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("protect_factor[2, 4]", &self.protect_factor)
        .finish()
    }
}

pub struct PacketZcNpcChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub account_id: u32,
    pub color: u32,
    pub msg: String,
}

impl PacketId for PacketZcNpcChat {
    fn id(&self) -> &str {
       "0x02c1"
    }
}

impl Debug for PacketZcNpcChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNpcChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("account_id[4, 8]", &self.account_id)
            .field("color[8, 12]", &self.color)
            .field("msg[12, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcFormatstringMsg {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: u16,
    pub value: String,
}

impl PacketId for PacketZcFormatstringMsg {
    fn id(&self) -> &str {
       "0x02c2"
    }
}

impl Debug for PacketZcFormatstringMsg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFormatstringMsg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, 6]", &self.msg)
            .field("value[6, ?]", &self.value)
        .finish()
    }
}

pub struct PacketCzPartyJoinReq {
    pub packet_id: u16,
    pub character_name: String,
}

impl PacketId for PacketCzPartyJoinReq {
    fn id(&self) -> &str {
       "0x02c4"
    }
}

impl Debug for PacketCzPartyJoinReq {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyJoinReq")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("character_name[2, 26]", &self.character_name)
        .finish()
    }
}

pub struct PacketZcPartyJoinReqAck {
    pub packet_id: u16,
    pub character_name: String,
    pub answer: u32,
}

impl PacketId for PacketZcPartyJoinReqAck {
    fn id(&self) -> &str {
       "0x02c5"
    }
}

impl Debug for PacketZcPartyJoinReqAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyJoinReqAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("character_name[2, 26]", &self.character_name)
            .field("answer[26, 30]", &self.answer)
        .finish()
    }
}

pub struct PacketZcPartyJoinReq {
    pub packet_id: u16,
    pub grid: u32,
    pub group_name: String,
}

impl PacketId for PacketZcPartyJoinReq {
    fn id(&self) -> &str {
       "0x02c6"
    }
}

impl Debug for PacketZcPartyJoinReq {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyJoinReq")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("grid[2, 6]", &self.grid)
            .field("group_name[6, 30]", &self.group_name)
        .finish()
    }
}

pub struct PacketCzPartyJoinReqAck {
    pub packet_id: u16,
    pub grid: u32,
    pub b_accept: bool,
}

impl PacketId for PacketCzPartyJoinReqAck {
    fn id(&self) -> &str {
       "0x02c7"
    }
}

impl Debug for PacketCzPartyJoinReqAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyJoinReqAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("grid[2, 6]", &self.grid)
            .field("b_accept[6, 7]", &self.b_accept)
        .finish()
    }
}

pub struct PacketCzPartyConfig {
    pub packet_id: u16,
    pub b_refuse_join_msg: bool,
}

impl PacketId for PacketCzPartyConfig {
    fn id(&self) -> &str {
       "0x02c8"
    }
}

impl Debug for PacketCzPartyConfig {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyConfig")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("b_refuse_join_msg[2, 3]", &self.b_refuse_join_msg)
        .finish()
    }
}

pub struct PacketZcPartyConfig {
    pub packet_id: u16,
    pub b_refuse_join_msg: bool,
}

impl PacketId for PacketZcPartyConfig {
    fn id(&self) -> &str {
       "0x02c9"
    }
}

impl Debug for PacketZcPartyConfig {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyConfig")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("b_refuse_join_msg[2, 3]", &self.b_refuse_join_msg)
        .finish()
    }
}

pub struct PacketHcRefuseSelectchar {
    pub packet_id: u16,
    pub error_code: char,
}

impl PacketId for PacketHcRefuseSelectchar {
    fn id(&self) -> &str {
       "0x02ca"
    }
}

impl Debug for PacketHcRefuseSelectchar {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcRefuseSelectchar")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 3]", &self.error_code)
        .finish()
    }
}

pub struct PacketZcMemorialdungeonSubscriptionInfo {
    pub packet_id: u16,
    pub memorial_dungeon_name: String,
    pub priority_order_num: u16,
}

impl PacketId for PacketZcMemorialdungeonSubscriptionInfo {
    fn id(&self) -> &str {
       "0x02cb"
    }
}

impl Debug for PacketZcMemorialdungeonSubscriptionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemorialdungeonSubscriptionInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("memorial_dungeon_name[2, 63]", &self.memorial_dungeon_name)
            .field("priority_order_num[63, 65]", &self.priority_order_num)
        .finish()
    }
}

pub struct PacketZcMemorialdungeonSubscriptionNotify {
    pub packet_id: u16,
    pub priority_order_num: u16,
}

impl PacketId for PacketZcMemorialdungeonSubscriptionNotify {
    fn id(&self) -> &str {
       "0x02cc"
    }
}

impl Debug for PacketZcMemorialdungeonSubscriptionNotify {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemorialdungeonSubscriptionNotify")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("priority_order_num[2, 4]", &self.priority_order_num)
        .finish()
    }
}

pub struct PacketZcMemorialdungeonInfo {
    pub packet_id: u16,
    pub memorial_dungeon_name: String,
    pub destroy_date: u32,
    pub enter_time_out_date: u32,
}

impl PacketId for PacketZcMemorialdungeonInfo {
    fn id(&self) -> &str {
       "0x02cd"
    }
}

impl Debug for PacketZcMemorialdungeonInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemorialdungeonInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("memorial_dungeon_name[2, 63]", &self.memorial_dungeon_name)
            .field("destroy_date[63, 67]", &self.destroy_date)
            .field("enter_time_out_date[67, 71]", &self.enter_time_out_date)
        .finish()
    }
}

pub struct PacketZcMemorialdungeonNotify {
    pub packet_id: u16,
    pub type_: u32,
    pub enter_limit_date: u32,
}

impl PacketId for PacketZcMemorialdungeonNotify {
    fn id(&self) -> &str {
       "0x02ce"
    }
}

impl Debug for PacketZcMemorialdungeonNotify {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMemorialdungeonNotify")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
            .field("enter_limit_date[6, 10]", &self.enter_limit_date)
        .finish()
    }
}

pub struct PacketCzMemorialdungeonCommand {
    pub packet_id: u16,
    pub command: u32,
}

impl PacketId for PacketCzMemorialdungeonCommand {
    fn id(&self) -> &str {
       "0x02cf"
    }
}

impl Debug for PacketCzMemorialdungeonCommand {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzMemorialdungeonCommand")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("command[2, 6]", &self.command)
        .finish()
    }
}

pub struct PacketZcEquipmentItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo301>,
}

impl PacketId for PacketZcEquipmentItemlist3 {
    fn id(&self) -> &str {
       "0x02d0"
    }
}

impl Debug for PacketZcEquipmentItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipmentItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 32]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreEquipmentItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo301>,
}

impl PacketId for PacketZcStoreEquipmentItemlist3 {
    fn id(&self) -> &str {
       "0x02d1"
    }
}

impl Debug for PacketZcStoreEquipmentItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreEquipmentItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 32]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCartEquipmentItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<EquipmentitemExtrainfo301>,
}

impl PacketId for PacketZcCartEquipmentItemlist3 {
    fn id(&self) -> &str {
       "0x02d2"
    }
}

impl Debug for PacketZcCartEquipmentItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartEquipmentItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 32]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcNotifyBindOnEquip {
    pub packet_id: u16,
    pub index: u16,
}

impl PacketId for PacketZcNotifyBindOnEquip {
    fn id(&self) -> &str {
       "0x02d3"
    }
}

impl Debug for PacketZcNotifyBindOnEquip {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyBindOnEquip")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PacketZcItemPickupAck3 {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
    pub itid: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub location: u16,
    pub type_: char,
    pub result: char,
    pub hire_expire_date: u32,
    pub bind_on_equip_type: u16,
}

impl PacketId for PacketZcItemPickupAck3 {
    fn id(&self) -> &str {
       "0x02d4"
    }
}

impl Debug for PacketZcItemPickupAck3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemPickupAck3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
            .field("itid[6, 8]", &self.itid)
            .field("is_identified[8, 9]", &self.is_identified)
            .field("is_damaged[9, 10]", &self.is_damaged)
            .field("refining_level[10, 11]", &self.refining_level)
            .field("slot[11, ?]", &self.slot)
            .field("location[19, 21]", &self.location)
            .field("type_[21, 22]", &self.type_)
            .field("result[22, 23]", &self.result)
            .field("hire_expire_date[23, 27]", &self.hire_expire_date)
            .field("bind_on_equip_type[27, 29]", &self.bind_on_equip_type)
        .finish()
    }
}

pub struct PacketZcIsvrDisconnect {
    pub packet_id: u16,
}

impl PacketId for PacketZcIsvrDisconnect {
    fn id(&self) -> &str {
       "0x02d5"
    }
}

impl Debug for PacketZcIsvrDisconnect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcIsvrDisconnect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzEquipwinMicroscope {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzEquipwinMicroscope {
    fn id(&self) -> &str {
       "0x02d6"
    }
}

impl Debug for PacketCzEquipwinMicroscope {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEquipwinMicroscope")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcEquipwinMicroscope {
    pub packet_id: u16,
    pub packet_length: u16,
    pub character_name: String,
    pub job: u16,
    pub head: u16,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub sex: char,
    pub item_info: Vec<EquipmentitemExtrainfo301>,
}

impl PacketId for PacketZcEquipwinMicroscope {
    fn id(&self) -> &str {
       "0x02d7"
    }
}

impl Debug for PacketZcEquipwinMicroscope {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEquipwinMicroscope")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("character_name[4, 28]", &self.character_name)
            .field("job[28, 30]", &self.job)
            .field("head[30, 32]", &self.head)
            .field("accessory[32, 34]", &self.accessory)
            .field("accessory2[34, 36]", &self.accessory2)
            .field("accessory3[36, 38]", &self.accessory3)
            .field("headpalette[38, 40]", &self.headpalette)
            .field("bodypalette[40, 42]", &self.bodypalette)
            .field("sex[42, 43]", &self.sex)
            .field("item_info[43, 71]", &self.item_info)
        .finish()
    }
}

pub struct PacketCzConfig {
    pub packet_id: u16,
    pub config: u32,
    pub value: u32,
}

impl PacketId for PacketCzConfig {
    fn id(&self) -> &str {
       "0x02d8"
    }
}

impl Debug for PacketCzConfig {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzConfig")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("config[2, 6]", &self.config)
            .field("value[6, 10]", &self.value)
        .finish()
    }
}

pub struct PacketZcConfig {
    pub packet_id: u16,
    pub config: u32,
    pub value: u32,
}

impl PacketId for PacketZcConfig {
    fn id(&self) -> &str {
       "0x02d9"
    }
}

impl Debug for PacketZcConfig {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcConfig")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("config[2, 6]", &self.config)
            .field("value[6, 10]", &self.value)
        .finish()
    }
}

pub struct PacketZcConfigNotify {
    pub packet_id: u16,
    pub b_open_equipment_win: bool,
}

impl PacketId for PacketZcConfigNotify {
    fn id(&self) -> &str {
       "0x02da"
    }
}

impl Debug for PacketZcConfigNotify {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcConfigNotify")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("b_open_equipment_win[2, 3]", &self.b_open_equipment_win)
        .finish()
    }
}

pub struct PacketCzBattlefieldChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub msg: String,
}

impl PacketId for PacketCzBattlefieldChat {
    fn id(&self) -> &str {
       "0x02db"
    }
}

impl Debug for PacketCzBattlefieldChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBattlefieldChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msg[4, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcBattlefieldChat {
    pub packet_id: u16,
    pub packet_length: u16,
    pub account_id: u32,
    pub name: String,
    pub msg: String,
}

impl PacketId for PacketZcBattlefieldChat {
    fn id(&self) -> &str {
       "0x02dc"
    }
}

impl Debug for PacketZcBattlefieldChat {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattlefieldChat")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("account_id[4, 8]", &self.account_id)
            .field("name[8, 32]", &self.name)
            .field("msg[32, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcBattlefieldNotifyCampinfo {
    pub packet_id: u16,
    pub account_id: u32,
    pub name: String,
    pub camp: u16,
}

impl PacketId for PacketZcBattlefieldNotifyCampinfo {
    fn id(&self) -> &str {
       "0x02dd"
    }
}

impl Debug for PacketZcBattlefieldNotifyCampinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattlefieldNotifyCampinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_id[2, 6]", &self.account_id)
            .field("name[6, 30]", &self.name)
            .field("camp[30, 32]", &self.camp)
        .finish()
    }
}

pub struct PacketZcBattlefieldNotifyPoint {
    pub packet_id: u16,
    pub point_camp_a: u16,
    pub point_camp_b: u16,
}

impl PacketId for PacketZcBattlefieldNotifyPoint {
    fn id(&self) -> &str {
       "0x02de"
    }
}

impl Debug for PacketZcBattlefieldNotifyPoint {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattlefieldNotifyPoint")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("point_camp_a[2, 4]", &self.point_camp_a)
            .field("point_camp_b[4, 6]", &self.point_camp_b)
        .finish()
    }
}

pub struct PacketZcBattlefieldNotifyPosition {
    pub packet_id: u16,
    pub account_id: u32,
    pub name: String,
    pub job: u16,
    pub x: u16,
    pub y: u16,
}

impl PacketId for PacketZcBattlefieldNotifyPosition {
    fn id(&self) -> &str {
       "0x02df"
    }
}

impl Debug for PacketZcBattlefieldNotifyPosition {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattlefieldNotifyPosition")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_id[2, 6]", &self.account_id)
            .field("name[6, 30]", &self.name)
            .field("job[30, 32]", &self.job)
            .field("x[32, 34]", &self.x)
            .field("y[34, 36]", &self.y)
        .finish()
    }
}

pub struct PacketZcBattlefieldNotifyHp {
    pub packet_id: u16,
    pub account_id: u32,
    pub name: String,
    pub hp: u16,
    pub max_hp: u16,
}

impl PacketId for PacketZcBattlefieldNotifyHp {
    fn id(&self) -> &str {
       "0x02e0"
    }
}

impl Debug for PacketZcBattlefieldNotifyHp {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattlefieldNotifyHp")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("account_id[2, 6]", &self.account_id)
            .field("name[6, 30]", &self.name)
            .field("hp[30, 32]", &self.hp)
            .field("max_hp[32, 34]", &self.max_hp)
        .finish()
    }
}

pub struct PacketZcNotifyAct2 {
    pub packet_id: u16,
    pub gid: u32,
    pub target_gid: u32,
    pub start_time: u32,
    pub attack_mt: u32,
    pub attacked_mt: u32,
    pub damage: u32,
    pub count: u16,
    pub action: char,
    pub left_damage: u32,
}

impl PacketId for PacketZcNotifyAct2 {
    fn id(&self) -> &str {
       "0x02e1"
    }
}

impl Debug for PacketZcNotifyAct2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyAct2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("target_gid[6, 10]", &self.target_gid)
            .field("start_time[10, 14]", &self.start_time)
            .field("attack_mt[14, 18]", &self.attack_mt)
            .field("attacked_mt[18, 22]", &self.attacked_mt)
            .field("damage[22, 26]", &self.damage)
            .field("count[26, 28]", &self.count)
            .field("action[28, 29]", &self.action)
            .field("left_damage[29, 33]", &self.left_damage)
        .finish()
    }
}

pub struct PacketCzBotCheck {
    pub packet_id: u16,
    pub is_bot: u32,
}

impl PacketId for PacketCzBotCheck {
    fn id(&self) -> &str {
       "0x02e6"
    }
}

impl Debug for PacketCzBotCheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBotCheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("is_bot[2, 6]", &self.is_bot)
        .finish()
    }
}

pub struct PacketZcMapproperty {
    pub packet_id: u16,
    pub packet_length: u16,
    pub type_: u16,
    pub map_info_table: u32,
}

impl PacketId for PacketZcMapproperty {
    fn id(&self) -> &str {
       "0x02e7"
    }
}

impl Debug for PacketZcMapproperty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMapproperty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("type_[4, 6]", &self.type_)
            .field("map_info_table[6, 10]", &self.map_info_table)
        .finish()
    }
}

pub struct PacketZcNormalItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo3>,
}

impl PacketId for PacketZcNormalItemlist3 {
    fn id(&self) -> &str {
       "0x02e8"
    }
}

impl Debug for PacketZcNormalItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNormalItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 26]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcCartNormalItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo3>,
}

impl PacketId for PacketZcCartNormalItemlist3 {
    fn id(&self) -> &str {
       "0x02e9"
    }
}

impl Debug for PacketZcCartNormalItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCartNormalItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 26]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcStoreNormalItemlist3 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub item_info: Vec<NormalitemExtrainfo3>,
}

impl PacketId for PacketZcStoreNormalItemlist3 {
    fn id(&self) -> &str {
       "0x02ea"
    }
}

impl Debug for PacketZcStoreNormalItemlist3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcStoreNormalItemlist3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("item_info[4, 26]", &self.item_info)
        .finish()
    }
}

pub struct PacketZcAcceptEnter2 {
    pub packet_id: u16,
    pub start_time: u32,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub font: u16,
}

impl PacketId for PacketZcAcceptEnter2 {
    fn id(&self) -> &str {
       "0x02eb"
    }
}

impl Debug for PacketZcAcceptEnter2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAcceptEnter2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("start_time[2, 6]", &self.start_time)
            .field("pos_dir[6, 9]", &self.pos_dir)
            .field("x_size[9, 10]", &self.x_size)
            .field("y_size[10, 11]", &self.y_size)
            .field("font[11, 13]", &self.font)
        .finish()
    }
}

pub struct PacketZcNotifyMoveentry4 {
    pub packet_id: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub move_start_time: u32,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub move_data: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
    pub font: u16,
}

impl PacketId for PacketZcNotifyMoveentry4 {
    fn id(&self) -> &str {
       "0x02ec"
    }
}

impl Debug for PacketZcNotifyMoveentry4 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMoveentry4")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("objecttype[2, 3]", &self.objecttype)
            .field("gid[3, 7]", &self.gid)
            .field("speed[7, 9]", &self.speed)
            .field("body_state[9, 11]", &self.body_state)
            .field("health_state[11, 13]", &self.health_state)
            .field("effect_state[13, 17]", &self.effect_state)
            .field("job[17, 19]", &self.job)
            .field("head[19, 21]", &self.head)
            .field("weapon[21, 25]", &self.weapon)
            .field("accessory[25, 27]", &self.accessory)
            .field("move_start_time[27, 31]", &self.move_start_time)
            .field("accessory2[31, 33]", &self.accessory2)
            .field("accessory3[33, 35]", &self.accessory3)
            .field("headpalette[35, 37]", &self.headpalette)
            .field("bodypalette[37, 39]", &self.bodypalette)
            .field("head_dir[39, 41]", &self.head_dir)
            .field("guid[41, 45]", &self.guid)
            .field("gemblem_ver[45, 47]", &self.gemblem_ver)
            .field("honor[47, 49]", &self.honor)
            .field("virtue[49, 53]", &self.virtue)
            .field("is_pkmode_on[53, 54]", &self.is_pkmode_on)
            .field("sex[54, 55]", &self.sex)
            .field("move_data[55, 61]", &self.move_data)
            .field("x_size[61, 62]", &self.x_size)
            .field("y_size[62, 63]", &self.y_size)
            .field("clevel[63, 65]", &self.clevel)
            .field("font[65, 67]", &self.font)
        .finish()
    }
}

pub struct PacketZcNotifyNewentry4 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
    pub font: u16,
}

impl PacketId for PacketZcNotifyNewentry4 {
    fn id(&self) -> &str {
       "0x02ed"
    }
}

impl Debug for PacketZcNotifyNewentry4 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyNewentry4")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 16]", &self.effect_state)
            .field("job[16, 18]", &self.job)
            .field("head[18, 20]", &self.head)
            .field("weapon[20, 24]", &self.weapon)
            .field("accessory[24, 26]", &self.accessory)
            .field("accessory2[26, 28]", &self.accessory2)
            .field("accessory3[28, 30]", &self.accessory3)
            .field("headpalette[30, 32]", &self.headpalette)
            .field("bodypalette[32, 34]", &self.bodypalette)
            .field("head_dir[34, 36]", &self.head_dir)
            .field("guid[36, 40]", &self.guid)
            .field("gemblem_ver[40, 42]", &self.gemblem_ver)
            .field("honor[42, 44]", &self.honor)
            .field("virtue[44, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("pos_dir[50, 53]", &self.pos_dir)
            .field("x_size[53, 54]", &self.x_size)
            .field("y_size[54, 55]", &self.y_size)
            .field("clevel[55, 57]", &self.clevel)
            .field("font[57, 59]", &self.font)
        .finish()
    }
}

pub struct PacketZcNotifyStandentry4 {
    pub packet_id: u16,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub state: char,
    pub clevel: u16,
    pub font: u16,
}

impl PacketId for PacketZcNotifyStandentry4 {
    fn id(&self) -> &str {
       "0x02ee"
    }
}

impl Debug for PacketZcNotifyStandentry4 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentry4")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("speed[6, 8]", &self.speed)
            .field("body_state[8, 10]", &self.body_state)
            .field("health_state[10, 12]", &self.health_state)
            .field("effect_state[12, 16]", &self.effect_state)
            .field("job[16, 18]", &self.job)
            .field("head[18, 20]", &self.head)
            .field("weapon[20, 24]", &self.weapon)
            .field("accessory[24, 26]", &self.accessory)
            .field("accessory2[26, 28]", &self.accessory2)
            .field("accessory3[28, 30]", &self.accessory3)
            .field("headpalette[30, 32]", &self.headpalette)
            .field("bodypalette[32, 34]", &self.bodypalette)
            .field("head_dir[34, 36]", &self.head_dir)
            .field("guid[36, 40]", &self.guid)
            .field("gemblem_ver[40, 42]", &self.gemblem_ver)
            .field("honor[42, 44]", &self.honor)
            .field("virtue[44, 48]", &self.virtue)
            .field("is_pkmode_on[48, 49]", &self.is_pkmode_on)
            .field("sex[49, 50]", &self.sex)
            .field("pos_dir[50, 53]", &self.pos_dir)
            .field("x_size[53, 54]", &self.x_size)
            .field("y_size[54, 55]", &self.y_size)
            .field("state[55, 56]", &self.state)
            .field("clevel[56, 58]", &self.clevel)
            .field("font[58, 60]", &self.font)
        .finish()
    }
}

pub struct PacketZcNotifyFont {
    pub packet_id: u16,
    pub aid: u32,
    pub font: u16,
}

impl PacketId for PacketZcNotifyFont {
    fn id(&self) -> &str {
       "0x02ef"
    }
}

impl Debug for PacketZcNotifyFont {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyFont")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("font[6, 8]", &self.font)
        .finish()
    }
}

pub struct PacketZcProgress {
    pub packet_id: u16,
    pub color: u32,
    pub time: u32,
}

impl PacketId for PacketZcProgress {
    fn id(&self) -> &str {
       "0x02f0"
    }
}

impl Debug for PacketZcProgress {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcProgress")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("color[2, 6]", &self.color)
            .field("time[6, 10]", &self.time)
        .finish()
    }
}

pub struct PacketCzProgress {
    pub packet_id: u16,
}

impl PacketId for PacketCzProgress {
    fn id(&self) -> &str {
       "0x02f1"
    }
}

impl Debug for PacketCzProgress {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzProgress")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcProgressCancel {
    pub packet_id: u16,
}

impl PacketId for PacketZcProgressCancel {
    fn id(&self) -> &str {
       "0x02f2"
    }
}

impl Debug for PacketZcProgressCancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcProgressCancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzOpenSimpleCashshopItemlist {
    pub packet_id: u16,
}

impl PacketId for PacketCzOpenSimpleCashshopItemlist {
    fn id(&self) -> &str {
       "0x035c"
    }
}

impl Debug for PacketCzOpenSimpleCashshopItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzOpenSimpleCashshopItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcSimpleCashshopPointItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub cash_point: u32,
    pub md_itemcount: u16,
    pub md_item_size: u16,
    pub best_itemcount: u16,
    pub best_itemsize: u16,
    pub item_list: Vec<PurchaseItem>,
}

impl PacketId for PacketZcSimpleCashshopPointItemlist {
    fn id(&self) -> &str {
       "0x035d"
    }
}

impl Debug for PacketZcSimpleCashshopPointItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSimpleCashshopPointItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("cash_point[4, 8]", &self.cash_point)
            .field("md_itemcount[8, 10]", &self.md_itemcount)
            .field("md_item_size[10, 12]", &self.md_item_size)
            .field("best_itemcount[12, 14]", &self.best_itemcount)
            .field("best_itemsize[14, 16]", &self.best_itemsize)
            .field("item_list[16, 27]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzCloseWindow {
    pub packet_id: u16,
}

impl PacketId for PacketCzCloseWindow {
    fn id(&self) -> &str {
       "0x035e"
    }
}

impl Debug for PacketCzCloseWindow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCloseWindow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketAhcGameGuard {
    pub packet_id: u16,
    pub auth_data: u32,
}

impl PacketId for PacketAhcGameGuard {
    fn id(&self) -> &str {
       "0x03dd"
    }
}

impl Debug for PacketAhcGameGuard {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAhcGameGuard")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auth_data[2, 6]", &self.auth_data)
        .finish()
    }
}

pub struct PacketCahAckGameGuard {
    pub packet_id: u16,
    pub auth_data: u32,
}

impl PacketId for PacketCahAckGameGuard {
    fn id(&self) -> &str {
       "0x03de"
    }
}

impl Debug for PacketCahAckGameGuard {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCahAckGameGuard")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("auth_data[2, 6]", &self.auth_data)
        .finish()
    }
}

pub struct PacketCzEnter2 {
    pub packet_id: u16,
    pub aid: u32,
    pub gid: u32,
    pub auth_code: u32,
    pub client_time: u32,
    pub sex: char,
}

impl PacketId for PacketCzEnter2 {
    fn id(&self) -> &str {
       "0x0436"
    }
}

impl Debug for PacketCzEnter2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEnter2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("gid[6, 10]", &self.gid)
            .field("auth_code[10, 14]", &self.auth_code)
            .field("client_time[14, 18]", &self.client_time)
            .field("sex[18, 19]", &self.sex)
        .finish()
    }
}

pub struct PacketCzRequestAct2 {
    pub packet_id: u16,
    pub target_gid: u32,
    pub action: char,
}

impl PacketId for PacketCzRequestAct2 {
    fn id(&self) -> &str {
       "0x0437"
    }
}

impl Debug for PacketCzRequestAct2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzRequestAct2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_gid[2, 6]", &self.target_gid)
            .field("action[6, 7]", &self.action)
        .finish()
    }
}

pub struct PacketCzUseSkill2 {
    pub packet_id: u16,
    pub selected_level: u16,
    pub skid: u16,
    pub target_id: u32,
}

impl PacketId for PacketCzUseSkill2 {
    fn id(&self) -> &str {
       "0x0438"
    }
}

impl Debug for PacketCzUseSkill2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseSkill2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("selected_level[2, 4]", &self.selected_level)
            .field("skid[4, 6]", &self.skid)
            .field("target_id[6, 10]", &self.target_id)
        .finish()
    }
}

pub struct PacketCzUseItem2 {
    pub packet_id: u16,
    pub index: u16,
    pub aid: u32,
}

impl PacketId for PacketCzUseItem2 {
    fn id(&self) -> &str {
       "0x0439"
    }
}

impl Debug for PacketCzUseItem2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzUseItem2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("aid[4, 8]", &self.aid)
        .finish()
    }
}

pub struct PacketZcSkillPostdelay {
    pub packet_id: u16,
    pub skid: u16,
    pub delay_tm: u32,
}

impl PacketId for PacketZcSkillPostdelay {
    fn id(&self) -> &str {
       "0x043d"
    }
}

impl Debug for PacketZcSkillPostdelay {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillPostdelay")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("delay_tm[4, 8]", &self.delay_tm)
        .finish()
    }
}

pub struct PacketZcSkillPostdelayList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub delay_list: Vec<SkillPostdelay>,
}

impl PacketId for PacketZcSkillPostdelayList {
    fn id(&self) -> &str {
       "0x043e"
    }
}

impl Debug for PacketZcSkillPostdelayList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillPostdelayList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("delay_list[4, 10]", &self.delay_list)
        .finish()
    }
}

pub struct PacketZcMsgStateChange2 {
    pub packet_id: u16,
    pub index: u16,
    pub aid: u32,
    pub state: bool,
    pub remain_ms: u32,
    pub val: u32,
}

impl PacketId for PacketZcMsgStateChange2 {
    fn id(&self) -> &str {
       "0x043f"
    }
}

impl Debug for PacketZcMsgStateChange2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMsgStateChange2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("aid[4, 8]", &self.aid)
            .field("state[8, 9]", &self.state)
            .field("remain_ms[9, 13]", &self.remain_ms)
            .field("val[13, 17]", &self.val)
        .finish()
    }
}

pub struct PacketZcMillenniumshield {
    pub packet_id: u16,
    pub aid: u32,
    pub num: u16,
    pub state: u16,
}

impl PacketId for PacketZcMillenniumshield {
    fn id(&self) -> &str {
       "0x0440"
    }
}

impl Debug for PacketZcMillenniumshield {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMillenniumshield")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("num[6, 8]", &self.num)
            .field("state[8, 10]", &self.state)
        .finish()
    }
}

pub struct PacketZcSkillinfoDelete {
    pub packet_id: u16,
    pub skid: u16,
}

impl PacketId for PacketZcSkillinfoDelete {
    fn id(&self) -> &str {
       "0x0441"
    }
}

impl Debug for PacketZcSkillinfoDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillinfoDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
        .finish()
    }
}

pub struct PacketZcSkillSelectRequest {
    pub packet_id: u16,
    pub packet_length: u16,
    pub why: u32,
    pub skidlist: u16,
}

impl PacketId for PacketZcSkillSelectRequest {
    fn id(&self) -> &str {
       "0x0442"
    }
}

impl Debug for PacketZcSkillSelectRequest {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillSelectRequest")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("why[4, 8]", &self.why)
            .field("skidlist[8, 10]", &self.skidlist)
        .finish()
    }
}

pub struct PacketCzSkillSelectResponse {
    pub packet_id: u16,
    pub why: u32,
    pub skid: u16,
}

impl PacketId for PacketCzSkillSelectResponse {
    fn id(&self) -> &str {
       "0x0443"
    }
}

impl Debug for PacketCzSkillSelectResponse {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSkillSelectResponse")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("why[2, 6]", &self.why)
            .field("skid[6, 8]", &self.skid)
        .finish()
    }
}

pub struct PacketZcSimpleCashPointItemlist {
    pub packet_id: u16,
    pub packet_length: u16,
    pub cash_point: u32,
    pub item_list: Vec<PurchaseItem>,
}

impl PacketId for PacketZcSimpleCashPointItemlist {
    fn id(&self) -> &str {
       "0x0444"
    }
}

impl Debug for PacketZcSimpleCashPointItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSimpleCashPointItemlist")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("cash_point[4, 8]", &self.cash_point)
            .field("item_list[8, 19]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzSimpleBuyCashPointItem {
    pub packet_id: u16,
    pub itid: u16,
    pub count: u16,
}

impl PacketId for PacketCzSimpleBuyCashPointItem {
    fn id(&self) -> &str {
       "0x0445"
    }
}

impl Debug for PacketCzSimpleBuyCashPointItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSimpleBuyCashPointItem")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketZcQuestNotifyEffect {
    pub packet_id: u16,
    pub npc_id: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub effect: u16,
    pub type_: u16,
}

impl PacketId for PacketZcQuestNotifyEffect {
    fn id(&self) -> &str {
       "0x0446"
    }
}

impl Debug for PacketZcQuestNotifyEffect {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcQuestNotifyEffect")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("npc_id[2, 6]", &self.npc_id)
            .field("x_pos[6, 8]", &self.x_pos)
            .field("y_pos[8, 10]", &self.y_pos)
            .field("effect[10, 12]", &self.effect)
            .field("type_[12, 14]", &self.type_)
        .finish()
    }
}

pub struct PacketCzBlockingPlayCancel {
    pub packet_id: u16,
}

impl PacketId for PacketCzBlockingPlayCancel {
    fn id(&self) -> &str {
       "0x0447"
    }
}

impl Debug for PacketCzBlockingPlayCancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBlockingPlayCancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketHcCharacterList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub character_list: Vec<CharacterList>,
}

impl PacketId for PacketHcCharacterList {
    fn id(&self) -> &str {
       "0x0448"
    }
}

impl Debug for PacketHcCharacterList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcCharacterList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("character_list[4, 9]", &self.character_list)
        .finish()
    }
}

pub struct PacketZcHackshErrorMsg {
    pub packet_id: u16,
    pub error_id: u16,
}

impl PacketId for PacketZcHackshErrorMsg {
    fn id(&self) -> &str {
       "0x0449"
    }
}

impl Debug for PacketZcHackshErrorMsg {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcHackshErrorMsg")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_id[2, 4]", &self.error_id)
        .finish()
    }
}

pub struct PacketCzClientVersion {
    pub packet_id: u16,
    pub client_ver: u32,
}

impl PacketId for PacketCzClientVersion {
    fn id(&self) -> &str {
       "0x044a"
    }
}

impl Debug for PacketCzClientVersion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzClientVersion")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("client_ver[2, 6]", &self.client_ver)
        .finish()
    }
}

pub struct PacketCzCloseSimplecashShop {
    pub packet_id: u16,
}

impl PacketId for PacketCzCloseSimplecashShop {
    fn id(&self) -> &str {
       "0x044b"
    }
}

impl Debug for PacketCzCloseSimplecashShop {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCloseSimplecashShop")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcEsResult {
    pub packet_id: u16,
    pub es_no: u16,
    pub es_msg: u16,
}

impl PacketId for PacketZcEsResult {
    fn id(&self) -> &str {
       "0x07d0"
    }
}

impl Debug for PacketZcEsResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEsResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
            .field("es_msg[4, 6]", &self.es_msg)
        .finish()
    }
}

pub struct PacketCzEsGetList {
    pub packet_id: u16,
}

impl PacketId for PacketCzEsGetList {
    fn id(&self) -> &str {
       "0x07d1"
    }
}

impl Debug for PacketCzEsGetList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEsGetList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcEsList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub count: u16,
}

impl PacketId for PacketZcEsList {
    fn id(&self) -> &str {
       "0x07d2"
    }
}

impl Debug for PacketZcEsList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEsList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct PacketCzEsChoose {
    pub packet_id: u16,
    pub es_no: u16,
}

impl PacketId for PacketCzEsChoose {
    fn id(&self) -> &str {
       "0x07d3"
    }
}

impl Debug for PacketCzEsChoose {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEsChoose")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
        .finish()
    }
}

pub struct PacketCzEsCancel {
    pub packet_id: u16,
    pub es_no: u16,
}

impl PacketId for PacketCzEsCancel {
    fn id(&self) -> &str {
       "0x07d4"
    }
}

impl Debug for PacketCzEsCancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzEsCancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
        .finish()
    }
}

pub struct PacketZcEsReady {
    pub packet_id: u16,
    pub es_no: u16,
}

impl PacketId for PacketZcEsReady {
    fn id(&self) -> &str {
       "0x07d5"
    }
}

impl Debug for PacketZcEsReady {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEsReady")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
        .finish()
    }
}

pub struct PacketZcEsGoto {
    pub packet_id: u16,
    pub es_no: u16,
}

impl PacketId for PacketZcEsGoto {
    fn id(&self) -> &str {
       "0x07d6"
    }
}

impl Debug for PacketZcEsGoto {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEsGoto")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
        .finish()
    }
}

pub struct PacketCzGroupinfoChangeV2 {
    pub packet_id: u16,
    pub exp_option: u32,
    pub item_pickup_rule: char,
    pub item_division_rule: char,
}

impl PacketId for PacketCzGroupinfoChangeV2 {
    fn id(&self) -> &str {
       "0x07d7"
    }
}

impl Debug for PacketCzGroupinfoChangeV2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGroupinfoChangeV2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp_option[2, 6]", &self.exp_option)
            .field("item_pickup_rule[6, 7]", &self.item_pickup_rule)
            .field("item_division_rule[7, 8]", &self.item_division_rule)
        .finish()
    }
}

pub struct PacketZcReqGroupinfoChangeV2 {
    pub packet_id: u16,
    pub exp_option: u32,
    pub item_pickup_rule: char,
    pub item_division_rule: char,
}

impl PacketId for PacketZcReqGroupinfoChangeV2 {
    fn id(&self) -> &str {
       "0x07d8"
    }
}

impl Debug for PacketZcReqGroupinfoChangeV2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcReqGroupinfoChangeV2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("exp_option[2, 6]", &self.exp_option)
            .field("item_pickup_rule[6, 7]", &self.item_pickup_rule)
            .field("item_division_rule[7, 8]", &self.item_division_rule)
        .finish()
    }
}

pub struct PacketZcShortcutKeyListV2 {
    pub packet_id: u16,
    pub short_cut_key: Vec<ShortCutKey>,
}

impl PacketId for PacketZcShortcutKeyListV2 {
    fn id(&self) -> &str {
       "0x07d9"
    }
}

impl Debug for PacketZcShortcutKeyListV2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcShortcutKeyListV2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("short_cut_key[2, 9]", &self.short_cut_key)
        .finish()
    }
}

pub struct PacketCzChangeGroupMaster {
    pub packet_id: u16,
    pub aid: u32,
}

impl PacketId for PacketCzChangeGroupMaster {
    fn id(&self) -> &str {
       "0x07da"
    }
}

impl Debug for PacketCzChangeGroupMaster {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzChangeGroupMaster")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
        .finish()
    }
}

pub struct PacketZcHoParChange {
    pub packet_id: u16,
    pub var: u16,
    pub value: u32,
}

impl PacketId for PacketZcHoParChange {
    fn id(&self) -> &str {
       "0x07db"
    }
}

impl Debug for PacketZcHoParChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcHoParChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var[2, 4]", &self.var)
            .field("value[4, 8]", &self.value)
        .finish()
    }
}

pub struct PacketCzSeekParty {
    pub packet_id: u16,
    pub option: u32,
}

impl PacketId for PacketCzSeekParty {
    fn id(&self) -> &str {
       "0x07dc"
    }
}

impl Debug for PacketCzSeekParty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSeekParty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("option[2, 6]", &self.option)
        .finish()
    }
}

pub struct PacketZcSeekParty {
    pub packet_id: u16,
    pub name: String,
    pub job: u32,
    pub level: u32,
    pub map_name: String,
    pub option: u32,
}

impl PacketId for PacketZcSeekParty {
    fn id(&self) -> &str {
       "0x07dd"
    }
}

impl Debug for PacketZcSeekParty {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSeekParty")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("job[26, 30]", &self.job)
            .field("level[30, 34]", &self.level)
            .field("map_name[34, 50]", &self.map_name)
            .field("option[50, 54]", &self.option)
        .finish()
    }
}

pub struct PacketCzSeekPartyMember {
    pub packet_id: u16,
    pub job: u32,
    pub level: u32,
    pub map_name: String,
    pub option: u32,
}

impl PacketId for PacketCzSeekPartyMember {
    fn id(&self) -> &str {
       "0x07de"
    }
}

impl Debug for PacketCzSeekPartyMember {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSeekPartyMember")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("job[2, 6]", &self.job)
            .field("level[6, 10]", &self.level)
            .field("map_name[10, 26]", &self.map_name)
            .field("option[26, 30]", &self.option)
        .finish()
    }
}

pub struct PacketZcSeekPartyMember {
    pub packet_id: u16,
    pub name: String,
    pub job: u32,
    pub level: u32,
    pub map_name: String,
    pub option: u32,
}

impl PacketId for PacketZcSeekPartyMember {
    fn id(&self) -> &str {
       "0x07df"
    }
}

impl Debug for PacketZcSeekPartyMember {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSeekPartyMember")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("name[2, 26]", &self.name)
            .field("job[26, 30]", &self.job)
            .field("level[30, 34]", &self.level)
            .field("map_name[34, 50]", &self.map_name)
            .field("option[50, 54]", &self.option)
        .finish()
    }
}

pub struct PacketZcEsNotiMyinfo {
    pub packet_id: u16,
    pub es_no: u16,
    pub esname: String,
}

impl PacketId for PacketZcEsNotiMyinfo {
    fn id(&self) -> &str {
       "0x07e0"
    }
}

impl Debug for PacketZcEsNotiMyinfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcEsNotiMyinfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("es_no[2, 4]", &self.es_no)
            .field("esname[4, 58]", &self.esname)
        .finish()
    }
}

pub struct PacketZcSkillinfoUpdate2 {
    pub packet_id: u16,
    pub skid: u16,
    pub type_: u32,
    pub level: u16,
    pub spcost: u16,
    pub attack_range: u16,
    pub upgradable: bool,
}

impl PacketId for PacketZcSkillinfoUpdate2 {
    fn id(&self) -> &str {
       "0x07e1"
    }
}

impl Debug for PacketZcSkillinfoUpdate2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSkillinfoUpdate2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("type_[4, 8]", &self.type_)
            .field("level[8, 10]", &self.level)
            .field("spcost[10, 12]", &self.spcost)
            .field("attack_range[12, 14]", &self.attack_range)
            .field("upgradable[14, 15]", &self.upgradable)
        .finish()
    }
}

pub struct PacketZcMsgValue {
    pub packet_id: u16,
    pub msg: u16,
    pub value: u32,
}

impl PacketId for PacketZcMsgValue {
    fn id(&self) -> &str {
       "0x07e2"
    }
}

impl Debug for PacketZcMsgValue {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMsgValue")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("msg[2, 4]", &self.msg)
            .field("value[4, 8]", &self.value)
        .finish()
    }
}

pub struct PacketZcItemlistwinOpen {
    pub packet_id: u16,
    pub type_: u32,
}

impl PacketId for PacketZcItemlistwinOpen {
    fn id(&self) -> &str {
       "0x07e3"
    }
}

impl Debug for PacketZcItemlistwinOpen {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemlistwinOpen")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("type_[2, 6]", &self.type_)
        .finish()
    }
}

pub struct PacketCzItemlistwinRes {
    pub packet_id: u16,
    pub packet_length: u16,
    pub type_: u32,
    pub action: u32,
    pub material_list: u16,
}

impl PacketId for PacketCzItemlistwinRes {
    fn id(&self) -> &str {
       "0x07e4"
    }
}

impl Debug for PacketCzItemlistwinRes {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzItemlistwinRes")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("type_[4, 8]", &self.type_)
            .field("action[8, 12]", &self.action)
            .field("material_list[12, 14]", &self.material_list)
        .finish()
    }
}

pub struct PacketChEnterCheckbot {
    pub packet_id: u16,
    pub packet_length: u16,
    pub dw_aid: u32,
    pub sz_string_info: String,
}

impl PacketId for PacketChEnterCheckbot {
    fn id(&self) -> &str {
       "0x07e5"
    }
}

impl Debug for PacketChEnterCheckbot {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChEnterCheckbot")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("dw_aid[4, 8]", &self.dw_aid)
            .field("sz_string_info[8, ?]", &self.sz_string_info)
        .finish()
    }
}

pub struct PacketZcMsgSkill {
    pub packet_id: u16,
    pub skid: u16,
    pub msgid: u32,
}

impl PacketId for PacketZcMsgSkill {
    fn id(&self) -> &str {
       "0x07e6"
    }
}

impl Debug for PacketZcMsgSkill {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMsgSkill")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("skid[2, 4]", &self.skid)
            .field("msgid[4, 8]", &self.msgid)
        .finish()
    }
}

pub struct PacketChCheckbot {
    pub packet_id: u16,
    pub packet_length: u16,
    pub dw_aid: u32,
    pub sz_string_info: String,
}

impl PacketId for PacketChCheckbot {
    fn id(&self) -> &str {
       "0x07e7"
    }
}

impl Debug for PacketChCheckbot {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChCheckbot")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("dw_aid[4, 8]", &self.dw_aid)
            .field("sz_string_info[8, 32]", &self.sz_string_info)
        .finish()
    }
}

pub struct PacketHcCheckbot {
    pub packet_id: u16,
    pub packet_length: u16,
    pub img: String,
}

impl PacketId for PacketHcCheckbot {
    fn id(&self) -> &str {
       "0x07e8"
    }
}

impl Debug for PacketHcCheckbot {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcCheckbot")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("img[4, ?]", &self.img)
        .finish()
    }
}

pub struct PacketHcCheckbotResult {
    pub packet_id: u16,
    pub packet_length: u16,
    pub result: char,
}

impl PacketId for PacketHcCheckbotResult {
    fn id(&self) -> &str {
       "0x07e9"
    }
}

impl Debug for PacketHcCheckbotResult {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcCheckbotResult")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("result[4, 5]", &self.result)
        .finish()
    }
}

pub struct PacketCzBattleFieldList {
    pub packet_id: u16,
}

impl PacketId for PacketCzBattleFieldList {
    fn id(&self) -> &str {
       "0x07ea"
    }
}

impl Debug for PacketCzBattleFieldList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzBattleFieldList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcBattleFieldList {
    pub packet_id: u16,
    pub packet_length: u16,
    pub count: u16,
    pub ack_type: u16,
    pub info_list: Vec<BattleFieldInfo>,
}

impl PacketId for PacketZcBattleFieldList {
    fn id(&self) -> &str {
       "0x07eb"
    }
}

impl Debug for PacketZcBattleFieldList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattleFieldList")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("count[4, 6]", &self.count)
            .field("ack_type[6, 8]", &self.ack_type)
            .field("info_list[8, 70]", &self.info_list)
        .finish()
    }
}

pub struct PacketCzJoinBattleField {
    pub packet_id: u16,
    pub bfno: u32,
    pub join_team: u16,
}

impl PacketId for PacketCzJoinBattleField {
    fn id(&self) -> &str {
       "0x07ec"
    }
}

impl Debug for PacketCzJoinBattleField {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzJoinBattleField")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("join_team[6, 8]", &self.join_team)
        .finish()
    }
}

pub struct PacketZcJoinBattleField {
    pub packet_id: u16,
    pub bfno: u32,
    pub join_team: u16,
    pub result: u16,
}

impl PacketId for PacketZcJoinBattleField {
    fn id(&self) -> &str {
       "0x07ed"
    }
}

impl Debug for PacketZcJoinBattleField {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcJoinBattleField")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("join_team[6, 8]", &self.join_team)
            .field("result[8, 10]", &self.result)
        .finish()
    }
}

pub struct PacketCzCancelBattleField {
    pub packet_id: u16,
    pub bfno: u32,
}

impl PacketId for PacketCzCancelBattleField {
    fn id(&self) -> &str {
       "0x07ee"
    }
}

impl Debug for PacketCzCancelBattleField {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCancelBattleField")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
        .finish()
    }
}

pub struct PacketZcCancelBattleField {
    pub packet_id: u16,
    pub bfno: u32,
    pub result: u16,
}

impl PacketId for PacketZcCancelBattleField {
    fn id(&self) -> &str {
       "0x07ef"
    }
}

impl Debug for PacketZcCancelBattleField {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCancelBattleField")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("result[6, 8]", &self.result)
        .finish()
    }
}

pub struct PacketCzReqBattleStateMonitor {
    pub packet_id: u16,
    pub bfno: u32,
    pub power_switch: u16,
}

impl PacketId for PacketCzReqBattleStateMonitor {
    fn id(&self) -> &str {
       "0x07f0"
    }
}

impl Debug for PacketCzReqBattleStateMonitor {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqBattleStateMonitor")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("power_switch[6, 8]", &self.power_switch)
        .finish()
    }
}

pub struct PacketZcAckBattleStateMonitor {
    pub packet_id: u16,
    pub bfno: u32,
    pub play_count: u16,
    pub battle_state: u16,
    pub team_count_a: u16,
    pub team_count_b: u16,
    pub my_count: u16,
    pub join_team: u16,
}

impl PacketId for PacketZcAckBattleStateMonitor {
    fn id(&self) -> &str {
       "0x07f1"
    }
}

impl Debug for PacketZcAckBattleStateMonitor {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckBattleStateMonitor")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("play_count[6, 8]", &self.play_count)
            .field("battle_state[8, 10]", &self.battle_state)
            .field("team_count_a[10, 12]", &self.team_count_a)
            .field("team_count_b[12, 14]", &self.team_count_b)
            .field("my_count[14, 16]", &self.my_count)
            .field("join_team[16, 18]", &self.join_team)
        .finish()
    }
}

pub struct PacketZcBattleNotiStartStep {
    pub packet_id: u16,
    pub bfno: u32,
    pub result: u16,
}

impl PacketId for PacketZcBattleNotiStartStep {
    fn id(&self) -> &str {
       "0x07f2"
    }
}

impl Debug for PacketZcBattleNotiStartStep {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattleNotiStartStep")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
            .field("result[6, 8]", &self.result)
        .finish()
    }
}

pub struct PacketZcBattleJoinNotiDefer {
    pub packet_id: u16,
    pub bfno: u32,
}

impl PacketId for PacketZcBattleJoinNotiDefer {
    fn id(&self) -> &str {
       "0x07f3"
    }
}

impl Debug for PacketZcBattleJoinNotiDefer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattleJoinNotiDefer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bfno[2, 6]", &self.bfno)
        .finish()
    }
}

pub struct PacketZcBattleJoinDisableState {
    pub packet_id: u16,
    pub enable: bool,
}

impl PacketId for PacketZcBattleJoinDisableState {
    fn id(&self) -> &str {
       "0x07f4"
    }
}

impl Debug for PacketZcBattleJoinDisableState {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBattleJoinDisableState")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("enable[2, 3]", &self.enable)
        .finish()
    }
}

pub struct PacketCzGmFullstrip {
    pub packet_id: u16,
    pub target_aid: u32,
}

impl PacketId for PacketCzGmFullstrip {
    fn id(&self) -> &str {
       "0x07f5"
    }
}

impl Debug for PacketCzGmFullstrip {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzGmFullstrip")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("target_aid[2, 6]", &self.target_aid)
        .finish()
    }
}

pub struct PacketZcNotifyExp {
    pub packet_id: u16,
    pub aid: u32,
    pub amount: u32,
    pub var_id: u16,
    pub exp_type: u16,
}

impl PacketId for PacketZcNotifyExp {
    fn id(&self) -> &str {
       "0x07f6"
    }
}

impl Debug for PacketZcNotifyExp {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyExp")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("amount[6, 10]", &self.amount)
            .field("var_id[10, 12]", &self.var_id)
            .field("exp_type[12, 14]", &self.exp_type)
        .finish()
    }
}

pub struct PacketZcNotifyMoveentry7 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub move_start_time: u32,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub move_data: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
    pub font: u16,
    pub name: String,
}

impl PacketId for PacketZcNotifyMoveentry7 {
    fn id(&self) -> &str {
       "0x07f7"
    }
}

impl Debug for PacketZcNotifyMoveentry7 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyMoveentry7")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("objecttype[4, 5]", &self.objecttype)
            .field("gid[5, 9]", &self.gid)
            .field("speed[9, 11]", &self.speed)
            .field("body_state[11, 13]", &self.body_state)
            .field("health_state[13, 15]", &self.health_state)
            .field("effect_state[15, 19]", &self.effect_state)
            .field("job[19, 21]", &self.job)
            .field("head[21, 23]", &self.head)
            .field("weapon[23, 27]", &self.weapon)
            .field("accessory[27, 29]", &self.accessory)
            .field("move_start_time[29, 33]", &self.move_start_time)
            .field("accessory2[33, 35]", &self.accessory2)
            .field("accessory3[35, 37]", &self.accessory3)
            .field("headpalette[37, 39]", &self.headpalette)
            .field("bodypalette[39, 41]", &self.bodypalette)
            .field("head_dir[41, 43]", &self.head_dir)
            .field("guid[43, 47]", &self.guid)
            .field("gemblem_ver[47, 49]", &self.gemblem_ver)
            .field("honor[49, 51]", &self.honor)
            .field("virtue[51, 55]", &self.virtue)
            .field("is_pkmode_on[55, 56]", &self.is_pkmode_on)
            .field("sex[56, 57]", &self.sex)
            .field("move_data[57, 63]", &self.move_data)
            .field("x_size[63, 64]", &self.x_size)
            .field("y_size[64, 65]", &self.y_size)
            .field("clevel[65, 67]", &self.clevel)
            .field("font[67, 69]", &self.font)
            .field("name[69, 93]", &self.name)
        .finish()
    }
}

pub struct PacketZcNotifyNewentry5 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub clevel: u16,
    pub font: u16,
    pub name: String,
}

impl PacketId for PacketZcNotifyNewentry5 {
    fn id(&self) -> &str {
       "0x07f8"
    }
}

impl Debug for PacketZcNotifyNewentry5 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyNewentry5")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("objecttype[4, 5]", &self.objecttype)
            .field("gid[5, 9]", &self.gid)
            .field("speed[9, 11]", &self.speed)
            .field("body_state[11, 13]", &self.body_state)
            .field("health_state[13, 15]", &self.health_state)
            .field("effect_state[15, 19]", &self.effect_state)
            .field("job[19, 21]", &self.job)
            .field("head[21, 23]", &self.head)
            .field("weapon[23, 27]", &self.weapon)
            .field("accessory[27, 29]", &self.accessory)
            .field("accessory2[29, 31]", &self.accessory2)
            .field("accessory3[31, 33]", &self.accessory3)
            .field("headpalette[33, 35]", &self.headpalette)
            .field("bodypalette[35, 37]", &self.bodypalette)
            .field("head_dir[37, 39]", &self.head_dir)
            .field("guid[39, 43]", &self.guid)
            .field("gemblem_ver[43, 45]", &self.gemblem_ver)
            .field("honor[45, 47]", &self.honor)
            .field("virtue[47, 51]", &self.virtue)
            .field("is_pkmode_on[51, 52]", &self.is_pkmode_on)
            .field("sex[52, 53]", &self.sex)
            .field("pos_dir[53, 56]", &self.pos_dir)
            .field("x_size[56, 57]", &self.x_size)
            .field("y_size[57, 58]", &self.y_size)
            .field("clevel[58, 60]", &self.clevel)
            .field("font[60, 62]", &self.font)
            .field("name[62, 86]", &self.name)
        .finish()
    }
}

pub struct PacketZcNotifyStandentry5 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub objecttype: char,
    pub gid: u32,
    pub speed: u16,
    pub body_state: u16,
    pub health_state: u16,
    pub effect_state: u32,
    pub job: u16,
    pub head: u16,
    pub weapon: u32,
    pub accessory: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub head_dir: u16,
    pub guid: u32,
    pub gemblem_ver: u16,
    pub honor: u16,
    pub virtue: u32,
    pub is_pkmode_on: bool,
    pub sex: char,
    pub pos_dir: String,
    pub x_size: char,
    pub y_size: char,
    pub state: char,
    pub clevel: u16,
    pub font: u16,
    pub name: String,
}

impl PacketId for PacketZcNotifyStandentry5 {
    fn id(&self) -> &str {
       "0x07f9"
    }
}

impl Debug for PacketZcNotifyStandentry5 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyStandentry5")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("objecttype[4, 5]", &self.objecttype)
            .field("gid[5, 9]", &self.gid)
            .field("speed[9, 11]", &self.speed)
            .field("body_state[11, 13]", &self.body_state)
            .field("health_state[13, 15]", &self.health_state)
            .field("effect_state[15, 19]", &self.effect_state)
            .field("job[19, 21]", &self.job)
            .field("head[21, 23]", &self.head)
            .field("weapon[23, 27]", &self.weapon)
            .field("accessory[27, 29]", &self.accessory)
            .field("accessory2[29, 31]", &self.accessory2)
            .field("accessory3[31, 33]", &self.accessory3)
            .field("headpalette[33, 35]", &self.headpalette)
            .field("bodypalette[35, 37]", &self.bodypalette)
            .field("head_dir[37, 39]", &self.head_dir)
            .field("guid[39, 43]", &self.guid)
            .field("gemblem_ver[43, 45]", &self.gemblem_ver)
            .field("honor[45, 47]", &self.honor)
            .field("virtue[47, 51]", &self.virtue)
            .field("is_pkmode_on[51, 52]", &self.is_pkmode_on)
            .field("sex[52, 53]", &self.sex)
            .field("pos_dir[53, 56]", &self.pos_dir)
            .field("x_size[56, 57]", &self.x_size)
            .field("y_size[57, 58]", &self.y_size)
            .field("state[58, 59]", &self.state)
            .field("clevel[59, 61]", &self.clevel)
            .field("font[61, 63]", &self.font)
            .field("name[63, 87]", &self.name)
        .finish()
    }
}

pub struct PacketZcDeleteItemFromBody {
    pub packet_id: u16,
    pub delete_type: u16,
    pub index: u16,
    pub count: u16,
}

impl PacketId for PacketZcDeleteItemFromBody {
    fn id(&self) -> &str {
       "0x07fa"
    }
}

impl Debug for PacketZcDeleteItemFromBody {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDeleteItemFromBody")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("delete_type[2, 4]", &self.delete_type)
            .field("index[4, 6]", &self.index)
            .field("count[6, 8]", &self.count)
        .finish()
    }
}

pub struct PacketZcUseskillAck2 {
    pub packet_id: u16,
    pub aid: u32,
    pub target_id: u32,
    pub x_pos: u16,
    pub y_pos: u16,
    pub skid: u16,
    pub property: u32,
    pub delay_time: u32,
    pub is_disposable: bool,
}

impl PacketId for PacketZcUseskillAck2 {
    fn id(&self) -> &str {
       "0x07fb"
    }
}

impl Debug for PacketZcUseskillAck2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUseskillAck2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("target_id[6, 10]", &self.target_id)
            .field("x_pos[10, 12]", &self.x_pos)
            .field("y_pos[12, 14]", &self.y_pos)
            .field("skid[14, 16]", &self.skid)
            .field("property[16, 20]", &self.property)
            .field("delay_time[20, 24]", &self.delay_time)
            .field("is_disposable[24, 25]", &self.is_disposable)
        .finish()
    }
}

pub struct PacketZcChangeGroupMaster {
    pub packet_id: u16,
    pub old_master_aid: u32,
    pub new_master_aid: u32,
}

impl PacketId for PacketZcChangeGroupMaster {
    fn id(&self) -> &str {
       "0x07fc"
    }
}

impl Debug for PacketZcChangeGroupMaster {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcChangeGroupMaster")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("old_master_aid[2, 6]", &self.old_master_aid)
            .field("new_master_aid[6, 10]", &self.new_master_aid)
        .finish()
    }
}

pub struct PacketZcPlayNpcBgm {
    pub packet_id: u16,
    pub bgm: String,
}

impl PacketId for PacketZcPlayNpcBgm {
    fn id(&self) -> &str {
       "0x07fe"
    }
}

impl Debug for PacketZcPlayNpcBgm {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPlayNpcBgm")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("bgm[2, 26]", &self.bgm)
        .finish()
    }
}

pub struct PacketZcDefineCheck {
    pub packet_id: u16,
    pub packet_length: u16,
    pub result: u32,
}

impl PacketId for PacketZcDefineCheck {
    fn id(&self) -> &str {
       "0x07ff"
    }
}

impl Debug for PacketZcDefineCheck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDefineCheck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("result[4, 8]", &self.result)
        .finish()
    }
}

pub struct PacketZcPcPurchaseItemlistFrommc2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub unique_id: u32,
    pub item_list: Vec<PurchaseItemFrommc>,
}

impl PacketId for PacketZcPcPurchaseItemlistFrommc2 {
    fn id(&self) -> &str {
       "0x0800"
    }
}

impl Debug for PacketZcPcPurchaseItemlistFrommc2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPcPurchaseItemlistFrommc2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("unique_id[8, 12]", &self.unique_id)
            .field("item_list[12, 34]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPcPurchaseItemlistFrommc2 {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub unique_id: u32,
    pub item_list: Vec<CzPurchaseItemFrommc>,
}

impl PacketId for PacketCzPcPurchaseItemlistFrommc2 {
    fn id(&self) -> &str {
       "0x0801"
    }
}

impl Debug for PacketCzPcPurchaseItemlistFrommc2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPcPurchaseItemlistFrommc2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("unique_id[8, 12]", &self.unique_id)
            .field("item_list[12, 16]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzPartyBookingReqRegister {
    pub packet_id: u16,
    pub register_info: PartyBookingDetail,
}

impl PacketId for PacketCzPartyBookingReqRegister {
    fn id(&self) -> &str {
       "0x0802"
    }
}

impl Debug for PacketCzPartyBookingReqRegister {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyBookingReqRegister")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("register_info[2, ?]", &self.register_info)
        .finish()
    }
}

pub struct PacketZcPartyBookingAckRegister {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketZcPartyBookingAckRegister {
    fn id(&self) -> &str {
       "0x0803"
    }
}

impl Debug for PacketZcPartyBookingAckRegister {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingAckRegister")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketCzPartyBookingReqSearch {
    pub packet_id: u16,
    pub level: u16,
    pub map_id: u16,
    pub job: u16,
    pub last_index: u32,
    pub result_count: u16,
}

impl PacketId for PacketCzPartyBookingReqSearch {
    fn id(&self) -> &str {
       "0x0804"
    }
}

impl Debug for PacketCzPartyBookingReqSearch {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyBookingReqSearch")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("level[2, 4]", &self.level)
            .field("map_id[4, 6]", &self.map_id)
            .field("job[6, 8]", &self.job)
            .field("last_index[8, 12]", &self.last_index)
            .field("result_count[12, 14]", &self.result_count)
        .finish()
    }
}

pub struct PacketZcPartyBookingAckSearch {
    pub packet_id: u16,
    pub packet_length: u16,
    pub is_exist_more_result: bool,
    pub info: Vec<PartyBookingAdInfo>,
}

impl PacketId for PacketZcPartyBookingAckSearch {
    fn id(&self) -> &str {
       "0x0805"
    }
}

impl Debug for PacketZcPartyBookingAckSearch {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingAckSearch")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("is_exist_more_result[4, 5]", &self.is_exist_more_result)
            .field("info[5, 53]", &self.info)
        .finish()
    }
}

pub struct PacketCzPartyBookingReqDelete {
    pub packet_id: u16,
}

impl PacketId for PacketCzPartyBookingReqDelete {
    fn id(&self) -> &str {
       "0x0806"
    }
}

impl Debug for PacketCzPartyBookingReqDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyBookingReqDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcPartyBookingAckDelete {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketZcPartyBookingAckDelete {
    fn id(&self) -> &str {
       "0x0807"
    }
}

impl Debug for PacketZcPartyBookingAckDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingAckDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketCzPartyBookingReqUpdate {
    pub packet_id: u16,
    pub job: u16,
}

impl PacketId for PacketCzPartyBookingReqUpdate {
    fn id(&self) -> &str {
       "0x0808"
    }
}

impl Debug for PacketCzPartyBookingReqUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzPartyBookingReqUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("job[2, 4]", &self.job)
        .finish()
    }
}

pub struct PacketZcPartyBookingNotifyInsert {
    pub packet_id: u16,
    pub info: PartyBookingAdInfo,
}

impl PacketId for PacketZcPartyBookingNotifyInsert {
    fn id(&self) -> &str {
       "0x0809"
    }
}

impl Debug for PacketZcPartyBookingNotifyInsert {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingNotifyInsert")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("info[2, ?]", &self.info)
        .finish()
    }
}

pub struct PacketZcPartyBookingNotifyUpdate {
    pub packet_id: u16,
    pub index: u32,
    pub job1: u16,
    pub job2: u16,
    pub job3: u16,
    pub job4: u16,
    pub job5: u16,
    pub job6: u16,
}

impl PacketId for PacketZcPartyBookingNotifyUpdate {
    fn id(&self) -> &str {
       "0x080a"
    }
}

impl Debug for PacketZcPartyBookingNotifyUpdate {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingNotifyUpdate")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 6]", &self.index)
            .field("job1[6, 8]", &self.job1)
            .field("job2[8, 10]", &self.job2)
            .field("job3[10, 12]", &self.job3)
            .field("job4[12, 14]", &self.job4)
            .field("job5[14, 16]", &self.job5)
            .field("job6[16, 18]", &self.job6)
        .finish()
    }
}

pub struct PacketZcPartyBookingNotifyDelete {
    pub packet_id: u16,
    pub index: u32,
}

impl PacketId for PacketZcPartyBookingNotifyDelete {
    fn id(&self) -> &str {
       "0x080b"
    }
}

impl Debug for PacketZcPartyBookingNotifyDelete {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcPartyBookingNotifyDelete")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 6]", &self.index)
        .finish()
    }
}

pub struct PacketCzSimpleCashBtnshow {
    pub packet_id: u16,
}

impl PacketId for PacketCzSimpleCashBtnshow {
    fn id(&self) -> &str {
       "0x080c"
    }
}

impl Debug for PacketCzSimpleCashBtnshow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSimpleCashBtnshow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcSimpleCashBtnshow {
    pub packet_id: u16,
    pub show: bool,
}

impl PacketId for PacketZcSimpleCashBtnshow {
    fn id(&self) -> &str {
       "0x080d"
    }
}

impl Debug for PacketZcSimpleCashBtnshow {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSimpleCashBtnshow")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("show[2, 3]", &self.show)
        .finish()
    }
}

pub struct PacketZcNotifyHpToGroupmR2 {
    pub packet_id: u16,
    pub aid: u32,
    pub hp: u32,
    pub maxhp: u32,
}

impl PacketId for PacketZcNotifyHpToGroupmR2 {
    fn id(&self) -> &str {
       "0x080e"
    }
}

impl Debug for PacketZcNotifyHpToGroupmR2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcNotifyHpToGroupmR2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("hp[6, 10]", &self.hp)
            .field("maxhp[10, 14]", &self.maxhp)
        .finish()
    }
}

pub struct PacketZcAddExchangeItem2 {
    pub packet_id: u16,
    pub itid: u16,
    pub type_: char,
    pub count: u32,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl PacketId for PacketZcAddExchangeItem2 {
    fn id(&self) -> &str {
       "0x080f"
    }
}

impl Debug for PacketZcAddExchangeItem2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAddExchangeItem2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("count[5, 9]", &self.count)
            .field("is_identified[9, 10]", &self.is_identified)
            .field("is_damaged[10, 11]", &self.is_damaged)
            .field("refining_level[11, 12]", &self.refining_level)
            .field("slot[12, ?]", &self.slot)
        .finish()
    }
}

pub struct PacketZcOpenBuyingStore {
    pub packet_id: u16,
    pub count: char,
}

impl PacketId for PacketZcOpenBuyingStore {
    fn id(&self) -> &str {
       "0x0810"
    }
}

impl Debug for PacketZcOpenBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOpenBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("count[2, 3]", &self.count)
        .finish()
    }
}

pub struct PacketCzReqOpenBuyingStore {
    pub packet_id: u16,
    pub packet_length: u16,
    pub limit_zeny: u32,
    pub result: char,
    pub store_name: String,
    pub item_list: Vec<ProductinfoInBuyingStore>,
}

impl PacketId for PacketCzReqOpenBuyingStore {
    fn id(&self) -> &str {
       "0x0811"
    }
}

impl Debug for PacketCzReqOpenBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqOpenBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("limit_zeny[4, 8]", &self.limit_zeny)
            .field("result[8, 9]", &self.result)
            .field("store_name[9, 89]", &self.store_name)
            .field("item_list[89, 97]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcFailedOpenBuyingStoreToBuyer {
    pub packet_id: u16,
    pub result: u16,
    pub total_weight: u32,
}

impl PacketId for PacketZcFailedOpenBuyingStoreToBuyer {
    fn id(&self) -> &str {
       "0x0812"
    }
}

impl Debug for PacketZcFailedOpenBuyingStoreToBuyer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFailedOpenBuyingStoreToBuyer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("total_weight[4, 8]", &self.total_weight)
        .finish()
    }
}

pub struct PacketZcMyitemlistBuyingStore {
    pub packet_id: u16,
    pub packet_length: u16,
    pub aid: u32,
    pub limit_zeny: u32,
    pub item_list: Vec<BuyingStoreItemlist>,
}

impl PacketId for PacketZcMyitemlistBuyingStore {
    fn id(&self) -> &str {
       "0x0813"
    }
}

impl Debug for PacketZcMyitemlistBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMyitemlistBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("aid[4, 8]", &self.aid)
            .field("limit_zeny[8, 12]", &self.limit_zeny)
            .field("item_list[12, 21]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcBuyingStoreEntry {
    pub packet_id: u16,
    pub maker_aid: u32,
    pub store_name: String,
}

impl PacketId for PacketZcBuyingStoreEntry {
    fn id(&self) -> &str {
       "0x0814"
    }
}

impl Debug for PacketZcBuyingStoreEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBuyingStoreEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("maker_aid[2, 6]", &self.maker_aid)
            .field("store_name[6, 86]", &self.store_name)
        .finish()
    }
}

pub struct PacketCzReqCloseBuyingStore {
    pub packet_id: u16,
}

impl PacketId for PacketCzReqCloseBuyingStore {
    fn id(&self) -> &str {
       "0x0815"
    }
}

impl Debug for PacketCzReqCloseBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqCloseBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcDisappearBuyingStoreEntry {
    pub packet_id: u16,
    pub maker_aid: u32,
}

impl PacketId for PacketZcDisappearBuyingStoreEntry {
    fn id(&self) -> &str {
       "0x0816"
    }
}

impl Debug for PacketZcDisappearBuyingStoreEntry {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcDisappearBuyingStoreEntry")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("maker_aid[2, 6]", &self.maker_aid)
        .finish()
    }
}

pub struct PacketCzReqClickToBuyingStore {
    pub packet_id: u16,
    pub maker_aid: u32,
}

impl PacketId for PacketCzReqClickToBuyingStore {
    fn id(&self) -> &str {
       "0x0817"
    }
}

impl Debug for PacketCzReqClickToBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqClickToBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("maker_aid[2, 6]", &self.maker_aid)
        .finish()
    }
}

pub struct PacketZcAckItemlistBuyingStore {
    pub packet_id: u16,
    pub packet_length: u16,
    pub maker_aid: u32,
    pub store_id: u32,
    pub limit_zeny: u32,
    pub item_list: Vec<BuyingStoreItemlist>,
}

impl PacketId for PacketZcAckItemlistBuyingStore {
    fn id(&self) -> &str {
       "0x0818"
    }
}

impl Debug for PacketZcAckItemlistBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckItemlistBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("maker_aid[4, 8]", &self.maker_aid)
            .field("store_id[8, 12]", &self.store_id)
            .field("limit_zeny[12, 16]", &self.limit_zeny)
            .field("item_list[16, 25]", &self.item_list)
        .finish()
    }
}

pub struct PacketCzReqTradeBuyingStore {
    pub packet_id: u16,
    pub packet_length: u16,
    pub maker_aid: u32,
    pub store_id: u32,
    pub item_list: Vec<TradeItemBuyingStore>,
}

impl PacketId for PacketCzReqTradeBuyingStore {
    fn id(&self) -> &str {
       "0x0819"
    }
}

impl Debug for PacketCzReqTradeBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzReqTradeBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("maker_aid[4, 8]", &self.maker_aid)
            .field("store_id[8, 12]", &self.store_id)
            .field("item_list[12, 18]", &self.item_list)
        .finish()
    }
}

pub struct PacketZcFailedTradeBuyingStoreToBuyer {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketZcFailedTradeBuyingStoreToBuyer {
    fn id(&self) -> &str {
       "0x081a"
    }
}

impl Debug for PacketZcFailedTradeBuyingStoreToBuyer {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFailedTradeBuyingStoreToBuyer")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketZcUpdateItemFromBuyingStore {
    pub packet_id: u16,
    pub itid: u16,
    pub count: u16,
    pub limit_zeny: u32,
}

impl PacketId for PacketZcUpdateItemFromBuyingStore {
    fn id(&self) -> &str {
       "0x081b"
    }
}

impl Debug for PacketZcUpdateItemFromBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcUpdateItemFromBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("itid[2, 4]", &self.itid)
            .field("count[4, 6]", &self.count)
            .field("limit_zeny[6, 10]", &self.limit_zeny)
        .finish()
    }
}

pub struct PacketZcItemDeleteBuyingStore {
    pub packet_id: u16,
    pub index: u16,
    pub count: u16,
    pub zeny: u32,
}

impl PacketId for PacketZcItemDeleteBuyingStore {
    fn id(&self) -> &str {
       "0x081c"
    }
}

impl Debug for PacketZcItemDeleteBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcItemDeleteBuyingStore")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("index[2, 4]", &self.index)
            .field("count[4, 6]", &self.count)
            .field("zeny[6, 10]", &self.zeny)
        .finish()
    }
}

pub struct PacketZcElInit {
    pub packet_id: u16,
    pub aid: u32,
    pub hp: u32,
    pub max_hp: u32,
    pub sp: u32,
    pub max_sp: u32,
}

impl PacketId for PacketZcElInit {
    fn id(&self) -> &str {
       "0x081d"
    }
}

impl Debug for PacketZcElInit {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcElInit")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("hp[6, 10]", &self.hp)
            .field("max_hp[10, 14]", &self.max_hp)
            .field("sp[14, 18]", &self.sp)
            .field("max_sp[18, 22]", &self.max_sp)
        .finish()
    }
}

pub struct PacketZcElParChange {
    pub packet_id: u16,
    pub var: u16,
    pub value: u32,
}

impl PacketId for PacketZcElParChange {
    fn id(&self) -> &str {
       "0x081e"
    }
}

impl Debug for PacketZcElParChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcElParChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("var[2, 4]", &self.var)
            .field("value[4, 8]", &self.value)
        .finish()
    }
}

pub struct PacketZcBroadcast4 {
    pub pakcet_type: u16,
    pub packet_length: u16,
    pub msgtype: char,
    pub color_rgb: u32,
    pub msg: String,
}

impl PacketId for PacketZcBroadcast4 {
    fn id(&self) -> &str {
       "0x081f"
    }
}

impl Debug for PacketZcBroadcast4 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcBroadcast4")
            .field("id", &self.id())
            .field("pakcet_type[0, 2]", &self.pakcet_type)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("msgtype[4, 5]", &self.msgtype)
            .field("color_rgb[5, 9]", &self.color_rgb)
            .field("msg[9, ?]", &self.msg)
        .finish()
    }
}

pub struct PacketZcCostumeSpriteChange {
    pub packet_id: u16,
    pub gid: u32,
    pub type_: char,
    pub value: u32,
}

impl PacketId for PacketZcCostumeSpriteChange {
    fn id(&self) -> &str {
       "0x0820"
    }
}

impl Debug for PacketZcCostumeSpriteChange {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcCostumeSpriteChange")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("type_[6, 7]", &self.type_)
            .field("value[7, 11]", &self.value)
        .finish()
    }
}

pub struct PacketAcOtpUser {
    pub packet_id: u16,
}

impl PacketId for PacketAcOtpUser {
    fn id(&self) -> &str {
       "0x0821"
    }
}

impl Debug for PacketAcOtpUser {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcOtpUser")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCaOtpAuthReq {
    pub packet_id: u16,
    pub otpcode: String,
}

impl PacketId for PacketCaOtpAuthReq {
    fn id(&self) -> &str {
       "0x0822"
    }
}

impl Debug for PacketCaOtpAuthReq {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaOtpAuthReq")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("otpcode[2, 9]", &self.otpcode)
        .finish()
    }
}

pub struct PacketAcOtpAuthAck {
    pub packet_id: u16,
    pub packet_length: u16,
    pub login_result: u16,
}

impl PacketId for PacketAcOtpAuthAck {
    fn id(&self) -> &str {
       "0x0823"
    }
}

impl Debug for PacketAcOtpAuthAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcOtpAuthAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("login_result[4, 6]", &self.login_result)
        .finish()
    }
}

pub struct PacketZcFailedTradeBuyingStoreToSeller {
    pub packet_id: u16,
    pub result: u16,
    pub itid: u16,
}

impl PacketId for PacketZcFailedTradeBuyingStoreToSeller {
    fn id(&self) -> &str {
       "0x0824"
    }
}

impl Debug for PacketZcFailedTradeBuyingStoreToSeller {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcFailedTradeBuyingStoreToSeller")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
            .field("itid[4, 6]", &self.itid)
        .finish()
    }
}

pub struct PacketCaSsoLoginReqa {
    pub packet_id: u16,
    pub packet_length: u16,
    pub version: u32,
    pub clienttype: char,
    pub id: String,
    pub mac_addr: String,
    pub ip_addr: String,
    pub t1: String,
}

impl PacketId for PacketCaSsoLoginReqa {
    fn id(&self) -> &str {
       "0x825a"
    }
}

impl Debug for PacketCaSsoLoginReqa {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaSsoLoginReqa")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("version[4, 8]", &self.version)
            .field("clienttype[8, 9]", &self.clienttype)
            .field("id[9, 33]", &self.id)
            .field("mac_addr[33, 50]", &self.mac_addr)
            .field("ip_addr[50, 65]", &self.ip_addr)
            .field("t1[65, ?]", &self.t1)
        .finish()
    }
}

pub struct PacketCaSsoLoginReq {
    pub packet_id: u16,
    pub packet_length: u16,
    pub version: u32,
    pub clienttype: char,
    pub id: String,
    pub passwd: String,
    pub mac_adress: String,
    pub ip: String,
    pub t1: String,
}

impl PacketId for PacketCaSsoLoginReq {
    fn id(&self) -> &str {
       "0x0825"
    }
}

impl Debug for PacketCaSsoLoginReq {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCaSsoLoginReq")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("version[4, 8]", &self.version)
            .field("clienttype[8, 9]", &self.clienttype)
            .field("id[9, 33]", &self.id)
            .field("passwd[33, 60]", &self.passwd)
            .field("mac_adress[60, 77]", &self.mac_adress)
            .field("ip[77, 92]", &self.ip)
            .field("t1[92, ?]", &self.t1)
        .finish()
    }
}

pub struct PacketAcSsoLoginAck {
    pub packet_id: u16,
    pub result: u16,
}

impl PacketId for PacketAcSsoLoginAck {
    fn id(&self) -> &str {
       "0x0826"
    }
}

impl Debug for PacketAcSsoLoginAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcSsoLoginAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("result[2, 4]", &self.result)
        .finish()
    }
}

pub struct PacketChDeleteChar3Reserved {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketChDeleteChar3Reserved {
    fn id(&self) -> &str {
       "0x0827"
    }
}

impl Debug for PacketChDeleteChar3Reserved {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChDeleteChar3Reserved")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketHcDeleteChar3Reserved {
    pub packet_id: u16,
    pub gid: u32,
    pub result: u32,
    pub delete_reserved_date: u32,
}

impl PacketId for PacketHcDeleteChar3Reserved {
    fn id(&self) -> &str {
       "0x0828"
    }
}

impl Debug for PacketHcDeleteChar3Reserved {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcDeleteChar3Reserved")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("result[6, 10]", &self.result)
            .field("delete_reserved_date[10, 14]", &self.delete_reserved_date)
        .finish()
    }
}

pub struct PacketChDeleteChar3 {
    pub packet_id: u16,
    pub gid: u32,
    pub birth: String,
}

impl PacketId for PacketChDeleteChar3 {
    fn id(&self) -> &str {
       "0x0829"
    }
}

impl Debug for PacketChDeleteChar3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChDeleteChar3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("birth[6, 12]", &self.birth)
        .finish()
    }
}

pub struct PacketHcDeleteChar3 {
    pub packet_id: u16,
    pub gid: u32,
    pub result: u32,
}

impl PacketId for PacketHcDeleteChar3 {
    fn id(&self) -> &str {
       "0x082a"
    }
}

impl Debug for PacketHcDeleteChar3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcDeleteChar3")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("result[6, 10]", &self.result)
        .finish()
    }
}

pub struct PacketChDeleteChar3Cancel {
    pub packet_id: u16,
    pub gid: u32,
}

impl PacketId for PacketChDeleteChar3Cancel {
    fn id(&self) -> &str {
       "0x082b"
    }
}

impl Debug for PacketChDeleteChar3Cancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChDeleteChar3Cancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
        .finish()
    }
}

pub struct PacketHcDeleteChar3Cancel {
    pub packet_id: u16,
    pub gid: u32,
    pub result: u32,
}

impl PacketId for PacketHcDeleteChar3Cancel {
    fn id(&self) -> &str {
       "0x082c"
    }
}

impl Debug for PacketHcDeleteChar3Cancel {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketHcDeleteChar3Cancel")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("gid[2, 6]", &self.gid)
            .field("result[6, 10]", &self.result)
        .finish()
    }
}

pub struct PacketCzSearchStoreInfo {
    pub packet_id: u16,
    pub packet_length: u16,
    pub store_type: char,
    pub max_price: u32,
    pub min_price: u32,
    pub item_idlist_size: char,
    pub card_idlist_size: char,
}

impl PacketId for PacketCzSearchStoreInfo {
    fn id(&self) -> &str {
       "0x0835"
    }
}

impl Debug for PacketCzSearchStoreInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSearchStoreInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("store_type[4, 5]", &self.store_type)
            .field("max_price[5, 9]", &self.max_price)
            .field("min_price[9, 13]", &self.min_price)
            .field("item_idlist_size[13, 14]", &self.item_idlist_size)
            .field("card_idlist_size[14, 15]", &self.card_idlist_size)
        .finish()
    }
}

pub struct PacketZcSearchStoreInfoAck {
    pub packet_id: u16,
    pub packet_length: u16,
    pub is_first_page: bool,
    pub is_nex_page: bool,
    pub remained_search_cnt: char,
    pub ssilist: Vec<ResultItemInfo>,
}

impl PacketId for PacketZcSearchStoreInfoAck {
    fn id(&self) -> &str {
       "0x0836"
    }
}

impl Debug for PacketZcSearchStoreInfoAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSearchStoreInfoAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("packet_length[2, 4]", &self.packet_length)
            .field("is_first_page[4, 5]", &self.is_first_page)
            .field("is_nex_page[5, 6]", &self.is_nex_page)
            .field("remained_search_cnt[6, 7]", &self.remained_search_cnt)
            .field("ssilist[7, 113]", &self.ssilist)
        .finish()
    }
}

pub struct PacketZcSearchStoreInfoFailed {
    pub packet_id: u16,
    pub reason: char,
}

impl PacketId for PacketZcSearchStoreInfoFailed {
    fn id(&self) -> &str {
       "0x0837"
    }
}

impl Debug for PacketZcSearchStoreInfoFailed {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSearchStoreInfoFailed")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("reason[2, 3]", &self.reason)
        .finish()
    }
}

pub struct PacketCzSearchStoreInfoNextPage {
    pub packet_id: u16,
}

impl PacketId for PacketCzSearchStoreInfoNextPage {
    fn id(&self) -> &str {
       "0x0838"
    }
}

impl Debug for PacketCzSearchStoreInfoNextPage {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSearchStoreInfoNextPage")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketZcAckBanGuildSso {
    pub packet_id: u16,
    pub char_name: String,
    pub reason_desc: String,
}

impl PacketId for PacketZcAckBanGuildSso {
    fn id(&self) -> &str {
       "0x0839"
    }
}

impl Debug for PacketZcAckBanGuildSso {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcAckBanGuildSso")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_name[2, 26]", &self.char_name)
            .field("reason_desc[26, 66]", &self.reason_desc)
        .finish()
    }
}

pub struct PacketZcOpenSearchStoreInfo {
    pub packet_id: u16,
    pub open_type: u16,
    pub search_cnt_max: char,
}

impl PacketId for PacketZcOpenSearchStoreInfo {
    fn id(&self) -> &str {
       "0x083a"
    }
}

impl Debug for PacketZcOpenSearchStoreInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcOpenSearchStoreInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("open_type[2, 4]", &self.open_type)
            .field("search_cnt_max[4, 5]", &self.search_cnt_max)
        .finish()
    }
}

pub struct PacketCzCloseSearchStoreInfo {
    pub packet_id: u16,
}

impl PacketId for PacketCzCloseSearchStoreInfo {
    fn id(&self) -> &str {
       "0x083b"
    }
}

impl Debug for PacketCzCloseSearchStoreInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzCloseSearchStoreInfo")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
        .finish()
    }
}

pub struct PacketCzSsilistItemClick {
    pub packet_id: u16,
    pub aid: u32,
    pub ssiid: u32,
    pub itid: u16,
}

impl PacketId for PacketCzSsilistItemClick {
    fn id(&self) -> &str {
       "0x083c"
    }
}

impl Debug for PacketCzSsilistItemClick {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketCzSsilistItemClick")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("aid[2, 6]", &self.aid)
            .field("ssiid[6, 10]", &self.ssiid)
            .field("itid[10, 12]", &self.itid)
        .finish()
    }
}

pub struct PacketZcSsilistItemClickAck {
    pub packet_id: u16,
    pub x: u16,
    pub y: u16,
}

impl PacketId for PacketZcSsilistItemClickAck {
    fn id(&self) -> &str {
       "0x083d"
    }
}

impl Debug for PacketZcSsilistItemClickAck {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcSsilistItemClickAck")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("x[2, 4]", &self.x)
            .field("y[4, 6]", &self.y)
        .finish()
    }
}

pub struct PacketAcRefuseLoginR2 {
    pub packet_id: u16,
    pub error_code: u32,
    pub block_date: String,
}

impl PacketId for PacketAcRefuseLoginR2 {
    fn id(&self) -> &str {
       "0x083e"
    }
}

impl Debug for PacketAcRefuseLoginR2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketAcRefuseLoginR2")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("error_code[2, 6]", &self.error_code)
            .field("block_date[6, 26]", &self.block_date)
        .finish()
    }
}

pub struct PacketChSelectAccessibleMapname {
    pub packet_id: u16,
    pub char_num: char,
    pub map_list_num: char,
}

impl PacketId for PacketChSelectAccessibleMapname {
    fn id(&self) -> &str {
       "0x0841"
    }
}

impl Debug for PacketChSelectAccessibleMapname {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketChSelectAccessibleMapname")
            .field("id", &self.id())
            .field("packet_id[0, 2]", &self.packet_id)
            .field("char_num[2, 3]", &self.char_num)
            .field("map_list_num[3, 4]", &self.map_list_num)
        .finish()
    }
}

pub struct ServerAddr {
    pub ip: u32,
    pub port: u16,
    pub name: String,
    pub user_count: u16,
    pub state: u16,
    pub property: u16,
}

impl Debug for ServerAddr {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ServerAddr")
            .field("ip[0, 4]", &self.ip)
            .field("port[4, 6]", &self.port)
            .field("name[6, 26]", &self.name)
            .field("user_count[26, 28]", &self.user_count)
            .field("state[28, 30]", &self.state)
            .field("property[30, 32]", &self.property)
        .finish()
    }
}

pub struct CharacterInfoNeoUnion {
    pub gid: u32,
    pub exp: u32,
    pub money: u32,
    pub jobexp: u32,
    pub joblevel: u32,
    pub bodystate: u32,
    pub healthstate: u32,
    pub effectstate: u32,
    pub virtue: u32,
    pub honor: u32,
    pub jobpoint: u16,
    pub hp: u32,
    pub maxhp: u32,
    pub sp: u16,
    pub maxsp: u16,
    pub speed: u16,
    pub job: u16,
    pub head: u16,
    pub weapon: u16,
    pub level: u16,
    pub sppoint: u16,
    pub accessory: u16,
    pub shield: u16,
    pub accessory2: u16,
    pub accessory3: u16,
    pub headpalette: u16,
    pub bodypalette: u16,
    pub name: String,
    pub str: char,
    pub agi: char,
    pub vit: char,
    pub int: char,
    pub dex: char,
    pub luk: char,
    pub char_num: char,
    pub haircolor: char,
    pub b_is_changed_char_name: u16,
    pub last_map: String,
    pub delete_date: u32,
    pub robe: u32,
    pub slot_addon: u32,
    pub rename_addon: u32,
}

impl Debug for CharacterInfoNeoUnion {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("CharacterInfoNeoUnion")
            .field("gid[0, 4]", &self.gid)
            .field("exp[4, 8]", &self.exp)
            .field("money[8, 12]", &self.money)
            .field("jobexp[12, 16]", &self.jobexp)
            .field("joblevel[16, 20]", &self.joblevel)
            .field("bodystate[20, 24]", &self.bodystate)
            .field("healthstate[24, 28]", &self.healthstate)
            .field("effectstate[28, 32]", &self.effectstate)
            .field("virtue[32, 36]", &self.virtue)
            .field("honor[36, 40]", &self.honor)
            .field("jobpoint[40, 42]", &self.jobpoint)
            .field("hp[42, 46]", &self.hp)
            .field("maxhp[46, 50]", &self.maxhp)
            .field("sp[50, 52]", &self.sp)
            .field("maxsp[52, 54]", &self.maxsp)
            .field("speed[54, 56]", &self.speed)
            .field("job[56, 58]", &self.job)
            .field("head[58, 60]", &self.head)
            .field("weapon[60, 62]", &self.weapon)
            .field("level[62, 64]", &self.level)
            .field("sppoint[64, 66]", &self.sppoint)
            .field("accessory[66, 68]", &self.accessory)
            .field("shield[68, 70]", &self.shield)
            .field("accessory2[70, 72]", &self.accessory2)
            .field("accessory3[72, 74]", &self.accessory3)
            .field("headpalette[74, 76]", &self.headpalette)
            .field("bodypalette[76, 78]", &self.bodypalette)
            .field("name[78, 102]", &self.name)
            .field("str[102, 103]", &self.str)
            .field("agi[103, 104]", &self.agi)
            .field("vit[104, 105]", &self.vit)
            .field("int[105, 106]", &self.int)
            .field("dex[106, 107]", &self.dex)
            .field("luk[107, 108]", &self.luk)
            .field("char_num[108, 109]", &self.char_num)
            .field("haircolor[109, 110]", &self.haircolor)
            .field("b_is_changed_char_name[110, 112]", &self.b_is_changed_char_name)
            .field("last_map[112, 128]", &self.last_map)
            .field("delete_date[128, 132]", &self.delete_date)
            .field("robe[132, 136]", &self.robe)
            .field("slot_addon[136, 140]", &self.slot_addon)
            .field("rename_addon[140, 144]", &self.rename_addon)
        .finish()
    }
}

pub struct ZserverAddr {
    pub ip: u32,
    pub port: u16,
}

impl Debug for ZserverAddr {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ZserverAddr")
            .field("ip[0, 4]", &self.ip)
            .field("port[4, 6]", &self.port)
        .finish()
    }
}

pub struct EQUIPSLOTINFOEQUIPSLOTINFO {
    pub card1: u16,
    pub card2: u16,
    pub card3: u16,
    pub card4: u16,
}

impl Debug for EQUIPSLOTINFOEQUIPSLOTINFO {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("EQUIPSLOTINFOEQUIPSLOTINFO")
            .field("card1[0, 2]", &self.card1)
            .field("card2[2, 4]", &self.card2)
            .field("card3[4, 6]", &self.card3)
            .field("card4[6, 8]", &self.card4)
        .finish()
    }
}

pub struct NormalitemExtrainfo {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub count: u16,
    pub wear_state: u16,
}

impl Debug for NormalitemExtrainfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("NormalitemExtrainfo")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("count[6, 8]", &self.count)
            .field("wear_state[8, 10]", &self.wear_state)
        .finish()
    }
}

pub struct EQUIPSLOTINFO {
    pub card1: u16,
    pub card2: u16,
    pub card3: u16,
    pub card4: u16,
}

impl Debug for EQUIPSLOTINFO {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("EQUIPSLOTINFO")
            .field("card1[0, 2]", &self.card1)
            .field("card2[2, 4]", &self.card2)
            .field("card3[4, 6]", &self.card3)
            .field("card4[6, 8]", &self.card4)
        .finish()
    }
}

pub struct EquipmentitemExtrainfo {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub location: u16,
    pub wear_state: u16,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl Debug for EquipmentitemExtrainfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("EquipmentitemExtrainfo")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("location[6, 8]", &self.location)
            .field("wear_state[8, 10]", &self.wear_state)
            .field("is_damaged[10, 11]", &self.is_damaged)
            .field("refining_level[11, 12]", &self.refining_level)
            .field("slot[12, ?]", &self.slot)
        .finish()
    }
}

pub struct PurchaseItem {
    pub price: u32,
    pub discountprice: u32,
    pub type_: char,
    pub itid: u16,
}

impl Debug for PurchaseItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PurchaseItem")
            .field("price[0, 4]", &self.price)
            .field("discountprice[4, 8]", &self.discountprice)
            .field("type_[8, 9]", &self.type_)
            .field("itid[9, 11]", &self.itid)
        .finish()
    }
}

pub struct SellItem {
    pub index: u16,
    pub price: u32,
    pub overchargeprice: u32,
}

impl Debug for SellItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("SellItem")
            .field("index[0, 2]", &self.index)
            .field("price[2, 6]", &self.price)
            .field("overchargeprice[6, 10]", &self.overchargeprice)
        .finish()
    }
}

pub struct CzPurchaseItem {
    pub count: u16,
    pub itid: u16,
}

impl Debug for CzPurchaseItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("CzPurchaseItem")
            .field("count[0, 2]", &self.count)
            .field("itid[2, 4]", &self.itid)
        .finish()
    }
}

pub struct CzSellItem {
    pub index: u16,
    pub count: u16,
}

impl Debug for CzSellItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("CzSellItem")
            .field("index[0, 2]", &self.index)
            .field("count[2, 4]", &self.count)
        .finish()
    }
}

pub struct WhisperItem {
    pub name: String,
}

impl Debug for WhisperItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("WhisperItem")
            .field("name[0, 24]", &self.name)
        .finish()
    }
}

pub struct RoomMember {
    pub role: u32,
    pub name: String,
}

impl Debug for RoomMember {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("RoomMember")
            .field("role[0, 4]", &self.role)
            .field("name[4, 28]", &self.name)
        .finish()
    }
}

pub struct GroupmemberInfo {
    pub aid: u32,
    pub character_name: String,
    pub map_name: String,
    pub role: char,
    pub state: char,
}

impl Debug for GroupmemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GroupmemberInfo")
            .field("aid[0, 4]", &self.aid)
            .field("character_name[4, 28]", &self.character_name)
            .field("map_name[28, 44]", &self.map_name)
            .field("role[44, 45]", &self.role)
            .field("state[45, 46]", &self.state)
        .finish()
    }
}

pub struct SKILLINFO {
    pub skid: u16,
    pub type_: u32,
    pub level: u16,
    pub spcost: u16,
    pub attack_range: u16,
    pub skill_name: String,
    pub upgradable: char,
}

impl Debug for SKILLINFO {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("SKILLINFO")
            .field("skid[0, 2]", &self.skid)
            .field("type_[2, 6]", &self.type_)
            .field("level[6, 8]", &self.level)
            .field("spcost[8, 10]", &self.spcost)
            .field("attack_range[10, 12]", &self.attack_range)
            .field("skill_name[12, 36]", &self.skill_name)
            .field("upgradable[36, 37]", &self.upgradable)
        .finish()
    }
}

pub struct StoreItem {
    pub index: u16,
    pub count: u16,
    pub price: u32,
}

impl Debug for StoreItem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("StoreItem")
            .field("index[0, 2]", &self.index)
            .field("count[2, 4]", &self.count)
            .field("price[4, 8]", &self.price)
        .finish()
    }
}

pub struct PurchaseItemFrommc {
    pub price: u32,
    pub count: u16,
    pub index: u16,
    pub type_: char,
    pub itid: u16,
    pub is_identified: char,
    pub is_damaged: char,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl Debug for PurchaseItemFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PurchaseItemFrommc")
            .field("price[0, 4]", &self.price)
            .field("count[4, 6]", &self.count)
            .field("index[6, 8]", &self.index)
            .field("type_[8, 9]", &self.type_)
            .field("itid[9, 11]", &self.itid)
            .field("is_identified[11, 12]", &self.is_identified)
            .field("is_damaged[12, 13]", &self.is_damaged)
            .field("refining_level[13, 14]", &self.refining_level)
            .field("slot[14, ?]", &self.slot)
        .finish()
    }
}

pub struct CzPurchaseItemFrommc {
    pub count: u16,
    pub index: u16,
}

impl Debug for CzPurchaseItemFrommc {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("CzPurchaseItemFrommc")
            .field("count[0, 2]", &self.count)
            .field("index[2, 4]", &self.index)
        .finish()
    }
}

pub struct PurchaseMyitem {
    pub price: u32,
    pub index: u16,
    pub count: u16,
    pub type_: char,
    pub itid: u16,
    pub is_identified: char,
    pub is_damaged: char,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl Debug for PurchaseMyitem {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PurchaseMyitem")
            .field("price[0, 4]", &self.price)
            .field("index[4, 6]", &self.index)
            .field("count[6, 8]", &self.count)
            .field("type_[8, 9]", &self.type_)
            .field("itid[9, 11]", &self.itid)
            .field("is_identified[11, 12]", &self.is_identified)
            .field("is_damaged[12, 13]", &self.is_damaged)
            .field("refining_level[13, 14]", &self.refining_level)
            .field("slot[14, ?]", &self.slot)
        .finish()
    }
}

pub struct RelatedGuild {
    pub gdid: u32,
    pub relation: u32,
    pub guild_name: String,
}

impl Debug for RelatedGuild {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("RelatedGuild")
            .field("gdid[0, 4]", &self.gdid)
            .field("relation[4, 8]", &self.relation)
            .field("guild_name[8, 32]", &self.guild_name)
        .finish()
    }
}

pub struct GuildMembermgrInfo {
    pub aid: u32,
    pub gid: u32,
    pub head_type: u16,
    pub head_palette: u16,
    pub sex: u16,
    pub job: u16,
    pub level: u16,
    pub member_exp: u32,
    pub current_state: u32,
    pub gposition_id: u32,
    pub memo: String,
    pub char_name: String,
}

impl Debug for GuildMembermgrInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GuildMembermgrInfo")
            .field("aid[0, 4]", &self.aid)
            .field("gid[4, 8]", &self.gid)
            .field("head_type[8, 10]", &self.head_type)
            .field("head_palette[10, 12]", &self.head_palette)
            .field("sex[12, 14]", &self.sex)
            .field("job[14, 16]", &self.job)
            .field("level[16, 18]", &self.level)
            .field("member_exp[18, 22]", &self.member_exp)
            .field("current_state[22, 26]", &self.current_state)
            .field("gposition_id[26, 30]", &self.gposition_id)
            .field("memo[30, 80]", &self.memo)
            .field("char_name[80, 104]", &self.char_name)
        .finish()
    }
}

pub struct MemberPositionInfo {
    pub aid: u32,
    pub gid: u32,
    pub position_id: u32,
}

impl Debug for MemberPositionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("MemberPositionInfo")
            .field("aid[0, 4]", &self.aid)
            .field("gid[4, 8]", &self.gid)
            .field("position_id[8, 12]", &self.position_id)
        .finish()
    }
}

pub struct GuildMemberPositionInfo {
    pub position_id: u32,
    pub right: u32,
    pub ranking: u32,
    pub pay_rate: u32,
}

impl Debug for GuildMemberPositionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GuildMemberPositionInfo")
            .field("position_id[0, 4]", &self.position_id)
            .field("right[4, 8]", &self.right)
            .field("ranking[8, 12]", &self.ranking)
            .field("pay_rate[12, 16]", &self.pay_rate)
        .finish()
    }
}

pub struct GuildRegPositionInfo {
    pub position_id: u32,
    pub right: u32,
    pub ranking: u32,
    pub pay_rate: u32,
    pub pos_name: String,
}

impl Debug for GuildRegPositionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GuildRegPositionInfo")
            .field("position_id[0, 4]", &self.position_id)
            .field("right[4, 8]", &self.right)
            .field("ranking[8, 12]", &self.ranking)
            .field("pay_rate[12, 16]", &self.pay_rate)
            .field("pos_name[16, 40]", &self.pos_name)
        .finish()
    }
}

pub struct GuildBanInfo {
    pub charname: String,
    pub account: String,
    pub reason: String,
}

impl Debug for GuildBanInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GuildBanInfo")
            .field("charname[0, 24]", &self.charname)
            .field("account[24, 48]", &self.account)
            .field("reason[48, 88]", &self.reason)
        .finish()
    }
}

pub struct OtherGuildInfo {
    pub guildname: String,
    pub guild_level: u32,
    pub guild_member_size: u32,
    pub guild_ranking: u32,
}

impl Debug for OtherGuildInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("OtherGuildInfo")
            .field("guildname[0, 24]", &self.guildname)
            .field("guild_level[24, 28]", &self.guild_level)
            .field("guild_member_size[28, 32]", &self.guild_member_size)
            .field("guild_ranking[32, 36]", &self.guild_ranking)
        .finish()
    }
}

pub struct MemberPositionIdNameInfo {
    pub position_id: u32,
    pub pos_name: String,
}

impl Debug for MemberPositionIdNameInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("MemberPositionIdNameInfo")
            .field("position_id[0, 4]", &self.position_id)
            .field("pos_name[4, 28]", &self.pos_name)
        .finish()
    }
}

pub struct GuildMemberInfo {
    pub aid: u32,
    pub gid: u32,
    pub head: u16,
    pub head_palette: u16,
    pub sex: u16,
    pub job: u16,
    pub level: u16,
    pub contribution_exp: u32,
    pub current_state: u32,
    pub position_id: u32,
    pub intro: String,
    pub charname: String,
}

impl Debug for GuildMemberInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("GuildMemberInfo")
            .field("aid[0, 4]", &self.aid)
            .field("gid[4, 8]", &self.gid)
            .field("head[8, 10]", &self.head)
            .field("head_palette[10, 12]", &self.head_palette)
            .field("sex[12, 14]", &self.sex)
            .field("job[14, 16]", &self.job)
            .field("level[16, 18]", &self.level)
            .field("contribution_exp[18, 22]", &self.contribution_exp)
            .field("current_state[22, 26]", &self.current_state)
            .field("position_id[26, 30]", &self.position_id)
            .field("intro[30, 80]", &self.intro)
            .field("charname[80, 104]", &self.charname)
        .finish()
    }
}

pub struct RelatedGuildInfo {
    pub relation: u32,
    pub gdid: u32,
    pub guildname: String,
}

impl Debug for RelatedGuildInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("RelatedGuildInfo")
            .field("relation[0, 4]", &self.relation)
            .field("gdid[4, 8]", &self.gdid)
            .field("guildname[8, 32]", &self.guildname)
        .finish()
    }
}

pub struct MonsterInfoElement {
    pub water: char,
    pub earth: char,
    pub fire: char,
    pub wind: char,
    pub poison: char,
    pub saint: char,
    pub dark: char,
    pub mental: char,
    pub undead: char,
}

impl Debug for MonsterInfoElement {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("MonsterInfoElement")
            .field("water[0, 1]", &self.water)
            .field("earth[1, 2]", &self.earth)
            .field("fire[2, 3]", &self.fire)
            .field("wind[3, 4]", &self.wind)
            .field("poison[4, 5]", &self.poison)
            .field("saint[5, 6]", &self.saint)
            .field("dark[6, 7]", &self.dark)
            .field("mental[7, 8]", &self.mental)
            .field("undead[8, 9]", &self.undead)
        .finish()
    }
}

pub struct MakableitemInfo {
    pub itid: u16,
    pub material_id: u16,
}

impl Debug for MakableitemInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("MakableitemInfo")
            .field("itid[0, 2]", &self.itid)
            .field("material_id[2, 4]", &self.material_id)
        .finish()
    }
}

pub struct PeteggitemInfo {
    pub index: u16,
}

impl Debug for PeteggitemInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PeteggitemInfo")
            .field("index[0, 2]", &self.index)
        .finish()
    }
}

pub struct ArrowitemInfo {
    pub index: u16,
}

impl Debug for ArrowitemInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ArrowitemInfo")
            .field("index[0, 2]", &self.index)
        .finish()
    }
}

pub struct NormalitemExtrainfo2 {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub count: u16,
    pub wear_state: u16,
    pub slot: EQUIPSLOTINFO,
}

impl Debug for NormalitemExtrainfo2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("NormalitemExtrainfo2")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("count[6, 8]", &self.count)
            .field("wear_state[8, 10]", &self.wear_state)
            .field("slot[10, ?]", &self.slot)
        .finish()
    }
}

pub struct RepairitemInfo {
    pub index: u16,
    pub itid: u16,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
}

impl Debug for RepairitemInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("RepairitemInfo")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("refining_level[4, 5]", &self.refining_level)
            .field("slot[5, ?]", &self.slot)
        .finish()
    }
}

pub struct StructFriend {
    pub aid: u32,
    pub gid: u32,
    pub name: String,
}

impl Debug for StructFriend {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("StructFriend")
            .field("aid[0, 4]", &self.aid)
            .field("gid[4, 8]", &self.gid)
            .field("name[8, 32]", &self.name)
        .finish()
    }
}

pub struct TagCharacterBlockInfo {
    pub gid: u32,
    pub sz_expire_date: String,
}

impl Debug for TagCharacterBlockInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("TagCharacterBlockInfo")
            .field("gid[0, 4]", &self.gid)
            .field("sz_expire_date[4, 24]", &self.sz_expire_date)
        .finish()
    }
}

pub struct PVPINFO {
    pub win_point: u32,
    pub lose_point: u32,
    pub point: u32,
}

impl Debug for PVPINFO {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PVPINFO")
            .field("win_point[0, 4]", &self.win_point)
            .field("lose_point[4, 8]", &self.lose_point)
            .field("point[8, 12]", &self.point)
        .finish()
    }
}

pub struct Filetime {
    pub dw_low_date_time: u32,
    pub dw_high_date_time: u32,
}

impl Debug for Filetime {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("Filetime")
            .field("dw_low_date_time[0, 4]", &self.dw_low_date_time)
            .field("dw_high_date_time[4, 8]", &self.dw_high_date_time)
        .finish()
    }
}

pub struct MailList {
    pub mail_id: u32,
    pub header: String,
    pub is_open: char,
    pub from_name: String,
    pub delete_time: u32,
}

impl Debug for MailList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("MailList")
            .field("mail_id[0, 4]", &self.mail_id)
            .field("header[4, 44]", &self.header)
            .field("is_open[44, 45]", &self.is_open)
            .field("from_name[45, 69]", &self.from_name)
            .field("delete_time[69, 73]", &self.delete_time)
        .finish()
    }
}

pub struct AuctionItemSearchInfo {
    pub auction_id: u32,
    pub seller_name: String,
    pub itid: u16,
    pub type_: u32,
    pub count: u16,
    pub is_identified: bool,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub now_price: u32,
    pub max_price: u32,
    pub buyer_name: String,
    pub delete_time: u32,
}

impl Debug for AuctionItemSearchInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("AuctionItemSearchInfo")
            .field("auction_id[0, 4]", &self.auction_id)
            .field("seller_name[4, 28]", &self.seller_name)
            .field("itid[28, 30]", &self.itid)
            .field("type_[30, 34]", &self.type_)
            .field("count[34, 36]", &self.count)
            .field("is_identified[36, 37]", &self.is_identified)
            .field("is_damaged[37, 38]", &self.is_damaged)
            .field("refining_level[38, 39]", &self.refining_level)
            .field("slot[39, ?]", &self.slot)
            .field("now_price[47, 51]", &self.now_price)
            .field("max_price[51, 55]", &self.max_price)
            .field("buyer_name[55, 79]", &self.buyer_name)
            .field("delete_time[79, 83]", &self.delete_time)
        .finish()
    }
}

pub struct PacketMobHunting {
    pub quest_id: u32,
    pub mob_gid: u32,
    pub max_count: u16,
    pub count: u16,
}

impl Debug for PacketMobHunting {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketMobHunting")
            .field("quest_id[0, 4]", &self.quest_id)
            .field("mob_gid[4, 8]", &self.mob_gid)
            .field("max_count[8, 10]", &self.max_count)
            .field("count[10, 12]", &self.count)
        .finish()
    }
}

pub struct EquipmentitemExtrainfo2 {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub location: u16,
    pub wear_state: u16,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub hire_expire_date: u32,
}

impl Debug for EquipmentitemExtrainfo2 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("EquipmentitemExtrainfo2")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("location[6, 8]", &self.location)
            .field("wear_state[8, 10]", &self.wear_state)
            .field("is_damaged[10, 11]", &self.is_damaged)
            .field("refining_level[11, 12]", &self.refining_level)
            .field("slot[12, ?]", &self.slot)
            .field("hire_expire_date[20, 24]", &self.hire_expire_date)
        .finish()
    }
}

pub struct PggLingoKeyTemp {
    pub dw_alg_num: u32,
    pub dw_alg_key1: u32,
    pub dw_alg_key2: u32,
    pub dw_seed: u32,
}

impl Debug for PggLingoKeyTemp {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PggLingoKeyTemp")
            .field("dw_alg_num[0, 4]", &self.dw_alg_num)
            .field("dw_alg_key1[4, 8]", &self.dw_alg_key1)
            .field("dw_alg_key2[8, 12]", &self.dw_alg_key2)
            .field("dw_seed[12, 16]", &self.dw_seed)
        .finish()
    }
}

pub struct PacketZcQuestInfo {
    pub quest_id: u32,
    pub active: bool,
}

impl Debug for PacketZcQuestInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcQuestInfo")
            .field("quest_id[0, 4]", &self.quest_id)
            .field("active[4, 5]", &self.active)
        .finish()
    }
}

pub struct PacketZcMissionHunt {
    pub mob_gid: u32,
    pub hunt_count: u16,
    pub mob_name: String,
}

impl Debug for PacketZcMissionHunt {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcMissionHunt")
            .field("mob_gid[0, 4]", &self.mob_gid)
            .field("hunt_count[4, 6]", &self.hunt_count)
            .field("mob_name[6, 30]", &self.mob_name)
        .finish()
    }
}

pub struct PacketZcQuestMissionInfo {
    pub quest_id: u32,
    pub quest_svr_time: u32,
    pub quest_end_time: u32,
    pub count: u16,
    pub hunt: Vec<PacketZcMissionHunt>,
}

impl Debug for PacketZcQuestMissionInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PacketZcQuestMissionInfo")
            .field("quest_id[0, 4]", &self.quest_id)
            .field("quest_svr_time[4, 8]", &self.quest_svr_time)
            .field("quest_end_time[8, 12]", &self.quest_end_time)
            .field("count[12, 14]", &self.count)
            .field("hunt[14, 44]", &self.hunt)
        .finish()
    }
}

pub struct ShortCutKey {
    pub is_skill: char,
    pub id: u32,
    pub count: u16,
}

impl Debug for ShortCutKey {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ShortCutKey")
            .field("is_skill[0, 1]", &self.is_skill)
            .field("id[1, 5]", &self.id)
            .field("count[5, 7]", &self.count)
        .finish()
    }
}

pub struct EquipmentitemExtrainfo301 {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub location: u16,
    pub wear_state: u16,
    pub is_damaged: bool,
    pub refining_level: char,
    pub slot: EQUIPSLOTINFO,
    pub hire_expire_date: u32,
    pub bind_on_equip_type: u16,
    pub w_item_sprite_number: u16,
}

impl Debug for EquipmentitemExtrainfo301 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("EquipmentitemExtrainfo301")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("location[6, 8]", &self.location)
            .field("wear_state[8, 10]", &self.wear_state)
            .field("is_damaged[10, 11]", &self.is_damaged)
            .field("refining_level[11, 12]", &self.refining_level)
            .field("slot[12, ?]", &self.slot)
            .field("hire_expire_date[20, 24]", &self.hire_expire_date)
            .field("bind_on_equip_type[24, 26]", &self.bind_on_equip_type)
            .field("w_item_sprite_number[26, 28]", &self.w_item_sprite_number)
        .finish()
    }
}

pub struct NormalitemExtrainfo3 {
    pub index: u16,
    pub itid: u16,
    pub type_: char,
    pub is_identified: bool,
    pub count: u16,
    pub wear_state: u16,
    pub slot: EQUIPSLOTINFO,
    pub hire_expire_date: u32,
}

impl Debug for NormalitemExtrainfo3 {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("NormalitemExtrainfo3")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("type_[4, 5]", &self.type_)
            .field("is_identified[5, 6]", &self.is_identified)
            .field("count[6, 8]", &self.count)
            .field("wear_state[8, 10]", &self.wear_state)
            .field("slot[10, ?]", &self.slot)
            .field("hire_expire_date[18, 22]", &self.hire_expire_date)
        .finish()
    }
}

pub struct SkillPostdelay {
    pub skid: u16,
    pub delay_tm: u32,
}

impl Debug for SkillPostdelay {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("SkillPostdelay")
            .field("skid[0, 2]", &self.skid)
            .field("delay_tm[2, 6]", &self.delay_tm)
        .finish()
    }
}

pub struct CharacterList {
    pub dw_gid: u32,
    pub slot_idx: char,
}

impl Debug for CharacterList {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("CharacterList")
            .field("dw_gid[0, 4]", &self.dw_gid)
            .field("slot_idx[4, 5]", &self.slot_idx)
        .finish()
    }
}

pub struct BattleFieldInfo {
    pub bfno: u32,
    pub battle_field_name: String,
    pub join_team: u16,
}

impl Debug for BattleFieldInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("BattleFieldInfo")
            .field("bfno[0, 4]", &self.bfno)
            .field("battle_field_name[4, 60]", &self.battle_field_name)
            .field("join_team[60, 62]", &self.join_team)
        .finish()
    }
}

pub struct PartyBookingDetail {
    pub level: u16,
    pub map_id: u16,
    pub job: u16,
}

impl Debug for PartyBookingDetail {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PartyBookingDetail")
            .field("level[0, 2]", &self.level)
            .field("map_id[2, 4]", &self.map_id)
            .field("job[4, 6]", &self.job)
        .finish()
    }
}

pub struct PartyBookingAdInfo {
    pub index: u32,
    pub char_name: String,
    pub expire_time: u32,
    pub detail: PartyBookingDetail,
}

impl Debug for PartyBookingAdInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("PartyBookingAdInfo")
            .field("index[0, 4]", &self.index)
            .field("char_name[4, 28]", &self.char_name)
            .field("expire_time[28, 32]", &self.expire_time)
            .field("detail[32, ?]", &self.detail)
        .finish()
    }
}

pub struct ProductinfoInBuyingStore {
    pub itid: u16,
    pub count: u16,
    pub price: u32,
}

impl Debug for ProductinfoInBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ProductinfoInBuyingStore")
            .field("itid[0, 2]", &self.itid)
            .field("count[2, 4]", &self.count)
            .field("price[4, 8]", &self.price)
        .finish()
    }
}

pub struct BuyingStoreItemlist {
    pub price: u32,
    pub count: u16,
    pub type_: char,
    pub itid: u16,
}

impl Debug for BuyingStoreItemlist {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("BuyingStoreItemlist")
            .field("price[0, 4]", &self.price)
            .field("count[4, 6]", &self.count)
            .field("type_[6, 7]", &self.type_)
            .field("itid[7, 9]", &self.itid)
        .finish()
    }
}

pub struct TradeItemBuyingStore {
    pub index: u16,
    pub itid: u16,
    pub count: u16,
}

impl Debug for TradeItemBuyingStore {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("TradeItemBuyingStore")
            .field("index[0, 2]", &self.index)
            .field("itid[2, 4]", &self.itid)
            .field("count[4, 6]", &self.count)
        .finish()
    }
}

pub struct ResultItemInfo {
    pub ssiid: u32,
    pub aid: u32,
    pub store_name: String,
    pub itid: u16,
    pub item_type: char,
    pub price: u32,
    pub count: u16,
    pub refining_level: char,
    pub card1: u16,
    pub card2: u16,
    pub card3: u16,
    pub card4: u16,
}

impl Debug for ResultItemInfo {
    fn fmt(&self, f: &mut Formatter<'_>) -> std::fmt::Result {
        f.debug_struct("ResultItemInfo")
            .field("ssiid[0, 4]", &self.ssiid)
            .field("aid[4, 8]", &self.aid)
            .field("store_name[8, 88]", &self.store_name)
            .field("itid[88, 90]", &self.itid)
            .field("item_type[90, 91]", &self.item_type)
            .field("price[91, 95]", &self.price)
            .field("count[95, 97]", &self.count)
            .field("refining_level[97, 98]", &self.refining_level)
            .field("card1[98, 100]", &self.card1)
            .field("card2[100, 102]", &self.card2)
            .field("card3[102, 104]", &self.card3)
            .field("card4[104, 106]", &self.card4)
        .finish()
    }
}

